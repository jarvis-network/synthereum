default:
  image: 'registry.gitlab.com/jarvis-network/base/container-images/node-alpine-builder'
  before_script:
    - apk add g++ git make python3 linux-headers eudev-dev libusb-dev

stages:
  - build
  - deploy
  - delete

.enabled-branches: &enabled-branches
  only:
    - merge_requests
    - dev
    - production

build-frontend:
  <<: *enabled-branches
  stage: build
  variables:
    CI: 'false'
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
  script:
    - yarn install
    - yarn build:frontend
  artifacts:
    paths:
      - packages/client-new/out

build-old-frontend:
  <<: *enabled-branches
  stage: build
  variables:
    CI: 'false'
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
  script:
    - yarn install
    - yarn build:frontend-old
  artifacts:
    paths:
      - packages/client/build

.acr_path:
  - &acr_path_script |
    case "$CI_COMMIT_REF_SLUG" in
      production) ACR_IMAGE_TAG='production';;
      dev) ACR_IMAGE_TAG='dev';;
      *) ACR_IMAGE_TAG="unmerged-$CI_COMMIT_REF_SLUG";;
    esac
    ACR_IMAGE_FULL_NAME="${ACR_URL}/${CI_PROJECT_PATH}:${ACR_IMAGE_TAG}"

build-old-validator:
  <<: *enabled-branches
  image: docker:latest
  services:
    - docker:dind
  stage: build
  before_script:
    - docker info
    - echo "$ACR_CI_PASSWORD" | docker login -u "$ACR_CI_USER" --password-stdin $ACR_URL
    - *acr_path_script
  script:
    - docker build --pull -t "$ACR_IMAGE_FULL_NAME" ./packages/keeper-bot
    - docker push "$ACR_IMAGE_FULL_NAME"

.frontend-deploy-default: &frontend-deploy-default
  stage: deploy
  needs:
    - job: build-frontend
      artifacts: true
  variables:
    NETLIFY_SITE_ID: '$NETLIFY_SITE_ID_NEW'
    OUT_DIR: './packages/client-new/out/'
  before_script:
    - yarn global add netlify-cli
  script:
    - netlify deploy ${PROD:-} --dir "$OUT_DIR"

frontend-netlify:
  <<: *frontend-deploy-default
  only:
    - merge_requests
    - dev

frontend-prod-netlify:
  <<: *frontend-deploy-default
  only:
    - production
  variables:
    PROD: '--prod'

.old-frontend-deploy-default: &old-frontend-deploy-default
  <<: *frontend-deploy-default
  needs:
    - job: build-old-frontend
      artifacts: true
  variables:
    NETLIFY_SITE_ID: '$NETLIFY_SITE_ID_OLD'
    OUT_DIR: './packages/client/build/'

old-frontend-netlify:
  <<: *old-frontend-deploy-default
  only:
    - merge_requests
    - dev

old-frontend-prod-netlify:
  <<: *old-frontend-deploy-default
  only:
    - production
  variables:
    PROD: '--prod'

.deploy-keeper-bot-default: &deploy-keeper-bot-default
  image: mcr.microsoft.com/azure-cli
  stage: deploy
  needs:
    - job: build-old-validator
      artifacts: true
  script:
    - *acr_path_script
    - CONTAINER_INSTANCE_NAME="${CI_PROJECT_NAME}-${ACR_IMAGE_TAG}"
    - |
      az login --service-principal \
      -u $CONTAINER_INSTANCE_CI_USER \
      --password $CONTAINER_INSTANCE_CI_PASSWORD \
      --tenant $CONTAINER_INSTANCE_CI_TENANT_ID
    - az container delete -g $CONTAINER_INSTANCE_RESOURCE_GROUP -n $CONTAINER_INSTANCE_NAME -y
    - |
      az container create \
      --resource-group $CONTAINER_INSTANCE_RESOURCE_GROUP \
      --name $CONTAINER_INSTANCE_NAME \
      --image $ACR_IMAGE_FULL_NAME \
      --registry-username $ACR_CI_USER \
      --registry-password $ACR_CI_PASSWORD \
      --environment-variables ETH_FROM=$CI_ETH_FROM RPC_HOST=$CI_RPC_HOST FREQUENCY=$CI_FREQUENCY \
      --secrets key_store="$CI_KEY_STORE" password="$CI_PASSWORD" \
      --secrets-mount-path="$CI_SECRETS_PATH" \
      --command-line "$CI_DOCKER_COMMAND_INPUT" \
      --restart-policy OnFailure \
      --cpu 1 --memory 0.5

.delete-keeper-bot-default: &delete-keeper-bot-default
  image: mcr.microsoft.com/azure-cli
  stage: delete
  needs:
    - job: build-old-validator
      artifacts: true
  script:
    - *acr_path_script
    - CONTAINER_INSTANCE_NAME="${CI_PROJECT_NAME}-${ACR_IMAGE_TAG}"
    - echo TENANT ${CONTAINER_INSTANCE_CI_TENANT_ID}
    - |
      az login --service-principal \
        -u $CONTAINER_INSTANCE_CI_USER \
        --password $CONTAINER_INSTANCE_CI_PASSWORD \
        --tenant $CONTAINER_INSTANCE_CI_TENANT_ID

    - az container delete -g $CONTAINER_INSTANCE_RESOURCE_GROUP -n $CONTAINER_INSTANCE_NAME -y

deploy-azure-stage:
  <<: *deploy-keeper-bot-default
  when: manual
  only:
    - merge_requests
    - dev

deploy-azure-production:
  <<: *deploy-keeper-bot-default
  when: on_success
  only:
    - production

delete-azure:
  <<: *enabled-branches
  <<: *delete-keeper-bot-default
  when: manual
