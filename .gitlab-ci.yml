image: registry.gitlab.com/jarvis-network/base/container-images/docker-buildx:20.10
services:
  - name: docker:20.10-dind
    entrypoint: ['env', '-u', 'DOCKER_HOST']
    command: ['dockerd-entrypoint.sh']
variables:
  DOCKER_DRIVER: overlay2
  NAMESPACE: ${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}
  TAG: mr-${CI_MERGE_REQUEST_ID}
  REGISTRY: jarvisnetworkcoreacr.azurecr.io/jarvis-network/apps/exchange/mono-repo
  REGISTRY_USERNAME: asim_jarvis
  REGISTRY_PASSWORD: ${GITLAB_TOKEN}
before_script:
  - docker context create buildx-ctx
  - docker buildx create buildx-ctx --use
  - echo $ACR_CORE_PASSWORD | docker login -u $ACR_CORE_USER --password-stdin $ACR_CORE_URL

.job-config: &job-config
  only:
    - merge_requests
    - dev
    - production

stages:
  - build and deploy
  - release
  # Jobs:

üé® lint:
  only:
    - merge_requests
  stage: build and deploy
  variables:
    TARGET: installed-project
  script:
    - export YARN_LOCK_SHA256="$(sha256sum yarn.lock | awk '{ print $1; }')"
    - docker buildx bake ${TARGET} --print
    - docker buildx bake ${TARGET} --progress=plain
    - docker run --rm
      --env CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      --env CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
      --entrypoint /src/scripts/ci_test_affected.bash
      "${REGISTRY}/${TARGET}:${TAG}"
      lint

üê≥ build & push dapps:
  <<: *job-config
  stage: build and deploy
  parallel:
    matrix:
      - TARGET: frontend
        NETLIFY_SITE_ID: '$NETLIFY_SITE_ID_FRONTEND'
      - TARGET: borrowing
        NETLIFY_SITE_ID: '$NETLIFY_SITE_ID_BORROWING'
  variables:
    NETLIFY_AUTH_TOKEN: '$NETLIFY_AUTH_TOKEN'
  script:
    - export YARN_LOCK_SHA256="$(sha256sum yarn.lock | awk '{ print $1; }')"
    - docker buildx bake ${TARGET} --print
    - docker buildx bake ${TARGET} --progress=plain
    - docker run --rm "${REGISTRY}/${TARGET}:${TAG}" netlify deploy --dir /src/out --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN

release:
  stage: release
  only:
    refs:
      - production
  script:
    - apk add bash npm git
    - npm install -g yarn
    - npm install -g semantic-release-commit-filter semantic-release @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog @semantic-release/git @semantic-release/npm @semantic-release/release-notes-generator @semantic-release/commit-analyzer
    - yarn --cwd libs/web3-utils/dist semantic-release
