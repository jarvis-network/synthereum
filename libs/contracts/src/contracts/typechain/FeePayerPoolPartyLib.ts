/* File autogenerated by synthereum-lib. Do not edit manually. */
/* eslint-disable */

import BN from 'bn.js';
import { ContractOptions } from 'web3-eth-contract';
import { EventLog } from 'web3-core';
import { EventEmitter } from 'events';
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from './types';

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type FinalFeesPaid = ContractEventLog<{
  amount: string;
  0: string;
}>;
export type RegularFeesPaid = ContractEventLog<{
  regularFee: string;
  lateFee: string;
  0: string;
  1: string;
}>;

export interface FeePayerPoolPartyLib extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions,
  ): FeePayerPoolPartyLib;
  clone(): FeePayerPoolPartyLib;
  methods: {
    convertToRawCollateral(
      collateral: [number | string | BN],
      cumulativeFeeMultiplier: [number | string | BN],
    ): NonPayableTransactionObject<[string]>;

    getFeeAdjustedCollateral(
      rawCollateral: [number | string | BN],
      cumulativeFeeMultiplier: [number | string | BN],
    ): NonPayableTransactionObject<[string]>;
  };
  events: {
    FinalFeesPaid(cb?: Callback<FinalFeesPaid>): EventEmitter;
    FinalFeesPaid(
      options?: EventOptions,
      cb?: Callback<FinalFeesPaid>,
    ): EventEmitter;

    RegularFeesPaid(cb?: Callback<RegularFeesPaid>): EventEmitter;
    RegularFeesPaid(
      options?: EventOptions,
      cb?: Callback<RegularFeesPaid>,
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: 'FinalFeesPaid', cb: Callback<FinalFeesPaid>): void;
  once(
    event: 'FinalFeesPaid',
    options: EventOptions,
    cb: Callback<FinalFeesPaid>,
  ): void;

  once(event: 'RegularFeesPaid', cb: Callback<RegularFeesPaid>): void;
  once(
    event: 'RegularFeesPaid',
    options: EventOptions,
    cb: Callback<RegularFeesPaid>,
  ): void;
}
