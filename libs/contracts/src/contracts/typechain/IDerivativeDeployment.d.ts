/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface IDerivativeDeployment extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): IDerivativeDeployment;
  clone(): IDerivativeDeployment;
  methods: {
    /**
     * Add admin and pool to DEFAULT_ADMIN_ROLE and POOL_ROLE
     * @param adminAndPool address of admin/pool.
     */
    addAdminAndPool(adminAndPool: string): NonPayableTransactionObject<void>;

    /**
     * Admin renounce to DEFAULT_ADMIN_ROLE
     */
    renounceAdmin(): NonPayableTransactionObject<void>;

    /**
     * Gets the collateral currency of the derivative
     */
    collateralCurrency(): NonPayableTransactionObject<string>;

    /**
     * Get emergency shutdown price
     */
    tokenCurrency(): NonPayableTransactionObject<string>;

    /**
     * Accessor method for the list of members with admin role
     */
    getAdminMembers(): NonPayableTransactionObject<string[]>;

    /**
     * Accessor method for the list of members with pool role
     */
    getPoolMembers(): NonPayableTransactionObject<string[]>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
