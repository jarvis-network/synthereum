/* File autogenerated by synthereum-lib. Do not edit manually. */
/* eslint-disable */

import BN from 'bn.js';
import { ContractOptions } from 'web3-eth-contract';
import { EventLog } from 'web3-core';
import { EventEmitter } from 'events';
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from './types';

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface MockOracle extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions,
  ): MockOracle;
  clone(): MockOracle;
  methods: {
    getCurrentTime(): NonPayableTransactionObject<string>;

    getPendingQueries(): NonPayableTransactionObject<[string, string][]>;

    getPrice(
      identifier: string | number[],
      time: number | string | BN,
    ): NonPayableTransactionObject<string>;

    hasPrice(
      identifier: string | number[],
      time: number | string | BN,
    ): NonPayableTransactionObject<boolean>;

    pushPrice(
      identifier: string | number[],
      time: number | string | BN,
      price: number | string | BN,
    ): NonPayableTransactionObject<void>;

    requestPrice(
      identifier: string | number[],
      time: number | string | BN,
    ): NonPayableTransactionObject<void>;

    setCurrentTime(
      time: number | string | BN,
    ): NonPayableTransactionObject<void>;

    timerAddress(): NonPayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
