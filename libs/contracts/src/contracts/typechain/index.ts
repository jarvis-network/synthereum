/* File autogenerated by synthereum-lib. Do not edit manually. */

import type { Tagged } from '@jarvis-network/web3-utils/base/tagged-type';

export type KnownContract =
  | Tagged<AccessControl, 'AccessControl'>
  | Tagged<AddressWhitelist, 'AddressWhitelist'>
  | Tagged<AdministrateeInterface, 'AdministrateeInterface'>
  | Tagged<AggregatorInterface, 'AggregatorInterface'>
  | Tagged<AggregatorV2V3Interface, 'AggregatorV2V3Interface'>
  | Tagged<AggregatorV3Interface, 'AggregatorV3Interface'>
  | Tagged<ContractAllowed, 'ContractAllowed'>
  | Tagged<ContractAllowedOnChanPriceFeed, 'ContractAllowedOnChanPriceFeed'>
  | Tagged<ContractCreator, 'ContractCreator'>
  | Tagged<DesignatedVoting, 'DesignatedVoting'>
  | Tagged<DesignatedVotingFactory, 'DesignatedVotingFactory'>
  | Tagged<ERC20, 'ERC20'>
  | Tagged<ERC20Snapshot, 'ERC20Snapshot'>
  | Tagged<ExpandedERC20, 'ExpandedERC20'>
  | Tagged<ExpandedIERC20, 'ExpandedIERC20'>
  | Tagged<FeePayerPoolParty, 'FeePayerPoolParty'>
  | Tagged<FeePayerPoolPartyLib, 'FeePayerPoolPartyLib'>
  | Tagged<FinancialContractsAdmin, 'FinancialContractsAdmin'>
  | Tagged<Finder, 'Finder'>
  | Tagged<FinderInterface, 'FinderInterface'>
  | Tagged<Governor, 'Governor'>
  | Tagged<HitchensUnorderedKeySet, 'HitchensUnorderedKeySet'>
  | Tagged<IDeploymentSignature, 'IDeploymentSignature'>
  | Tagged<IDerivative, 'IDerivative'>
  | Tagged<IDerivativeDeployment, 'IDerivativeDeployment'>
  | Tagged<IERC20, 'IERC20'>
  | Tagged<IERC20Standard, 'IERC20Standard'>
  | Tagged<IRole, 'IRole'>
  | Tagged<IStandardERC20, 'IStandardERC20'>
  | Tagged<ISynthereumChainlinkPriceFeed, 'ISynthereumChainlinkPriceFeed'>
  | Tagged<ISynthereumDeployer, 'ISynthereumDeployer'>
  | Tagged<ISynthereumFactoryVersioning, 'ISynthereumFactoryVersioning'>
  | Tagged<ISynthereumFinder, 'ISynthereumFinder'>
  | Tagged<ISynthereumPool, 'ISynthereumPool'>
  | Tagged<ISynthereumPoolDeployment, 'ISynthereumPoolDeployment'>
  | Tagged<ISynthereumPoolGeneral, 'ISynthereumPoolGeneral'>
  | Tagged<ISynthereumPoolInteraction, 'ISynthereumPoolInteraction'>
  | Tagged<ISynthereumPoolOnChainPriceFeed, 'ISynthereumPoolOnChainPriceFeed'>
  | Tagged<ISynthereumPoolRegistry, 'ISynthereumPoolRegistry'>
  | Tagged<ISynthereumPriceFeed, 'ISynthereumPriceFeed'>
  | Tagged<IdentifierWhitelist, 'IdentifierWhitelist'>
  | Tagged<IdentifierWhitelistInterface, 'IdentifierWhitelistInterface'>
  | Tagged<MintableBurnableERC20, 'MintableBurnableERC20'>
  | Tagged<MintableBurnableIERC20, 'MintableBurnableIERC20'>
  | Tagged<MintableBurnableSyntheticToken, 'MintableBurnableSyntheticToken'>
  | Tagged<MintableBurnableTokenFactory, 'MintableBurnableTokenFactory'>
  | Tagged<MockOracle, 'MockOracle'>
  | Tagged<MockV3Aggregator, 'MockV3Aggregator'>
  | Tagged<MultiRole, 'MultiRole'>
  | Tagged<OptimisticOracle, 'OptimisticOracle'>
  | Tagged<OptimisticOracleInterface, 'OptimisticOracleInterface'>
  | Tagged<OptimisticRequester, 'OptimisticRequester'>
  | Tagged<OracleAncillaryInterface, 'OracleAncillaryInterface'>
  | Tagged<OracleInterface, 'OracleInterface'>
  | Tagged<OracleInterfaces, 'OracleInterfaces'>
  | Tagged<Ownable, 'Ownable'>
  | Tagged<PerpetualLiquidatablePoolParty, 'PerpetualLiquidatablePoolParty'>
  | Tagged<PerpetualLiquidatablePoolPartyLib, 'PerpetualLiquidatablePoolPartyLib'>
  | Tagged<PerpetualPoolParty, 'PerpetualPoolParty'>
  | Tagged<PerpetualPoolPartyCreator, 'PerpetualPoolPartyCreator'>
  | Tagged<PerpetualPositionManagerPoolParty, 'PerpetualPositionManagerPoolParty'>
  | Tagged<PerpetualPositionManagerPoolPartyLib, 'PerpetualPositionManagerPoolPartyLib'>
  | Tagged<Registry, 'Registry'>
  | Tagged<RegistryInterface, 'RegistryInterface'>
  | Tagged<Store, 'Store'>
  | Tagged<StoreInterface, 'StoreInterface'>
  | Tagged<SynthereumChainlinkPriceFeed, 'SynthereumChainlinkPriceFeed'>
  | Tagged<SynthereumDeployer, 'SynthereumDeployer'>
  | Tagged<SynthereumDerivativeFactory, 'SynthereumDerivativeFactory'>
  | Tagged<SynthereumFactoryVersioning, 'SynthereumFactoryVersioning'>
  | Tagged<SynthereumFinder, 'SynthereumFinder'>
  | Tagged<SynthereumInterfaces, 'SynthereumInterfaces'>
  | Tagged<SynthereumPool, 'SynthereumPool'>
  | Tagged<SynthereumPoolCreator, 'SynthereumPoolCreator'>
  | Tagged<SynthereumPoolFactory, 'SynthereumPoolFactory'>
  | Tagged<SynthereumPoolLib, 'SynthereumPoolLib'>
  | Tagged<SynthereumPoolOnChainPriceFeed, 'SynthereumPoolOnChainPriceFeed'>
  | Tagged<SynthereumPoolOnChainPriceFeedCreator, 'SynthereumPoolOnChainPriceFeedCreator'>
  | Tagged<SynthereumPoolOnChainPriceFeedFactory, 'SynthereumPoolOnChainPriceFeedFactory'>
  | Tagged<SynthereumPoolOnChainPriceFeedLib, 'SynthereumPoolOnChainPriceFeedLib'>
  | Tagged<SynthereumPoolRegistry, 'SynthereumPoolRegistry'>
  | Tagged<SynthereumSyntheticTokenFactory, 'SynthereumSyntheticTokenFactory'>
  | Tagged<SynthereumTIC, 'SynthereumTIC'>
  | Tagged<SynthereumTICFactory, 'SynthereumTICFactory'>
  | Tagged<SynthereumTICInterface, 'SynthereumTICInterface'>
  | Tagged<TICCreator, 'TICCreator'>
  | Tagged<Testable, 'Testable'>
  | Tagged<TestnetERC20, 'TestnetERC20'>
  | Tagged<Timer, 'Timer'>
  | Tagged<TokenMigrator, 'TokenMigrator'>
  | Tagged<Voting, 'Voting'>
  | Tagged<VotingAncillaryInterface, 'VotingAncillaryInterface'>
  | Tagged<VotingInterface, 'VotingInterface'>
  | Tagged<VotingToken, 'VotingToken'>
  | Tagged<Withdrawable, 'Withdrawable'>;

import type { AccessControl } from './AccessControl';
export type { AccessControl };
import type {
  RoleAdminChanged as AccessControl_RoleAdminChanged,
  RoleGranted as AccessControl_RoleGranted,
  RoleRevoked as AccessControl_RoleRevoked,
} from './AccessControl';
export namespace AccessControl_Events {
  export type RoleAdminChanged = AccessControl_RoleAdminChanged;
  export type RoleGranted = AccessControl_RoleGranted;
  export type RoleRevoked = AccessControl_RoleRevoked;
}

import type { AddressWhitelist } from './AddressWhitelist';
export type { AddressWhitelist };
import type {
  AddedToWhitelist as AddressWhitelist_AddedToWhitelist,
  OwnershipTransferred as AddressWhitelist_OwnershipTransferred,
  RemovedFromWhitelist as AddressWhitelist_RemovedFromWhitelist,
} from './AddressWhitelist';
export namespace AddressWhitelist_Events {
  export type AddedToWhitelist = AddressWhitelist_AddedToWhitelist;
  export type OwnershipTransferred = AddressWhitelist_OwnershipTransferred;
  export type RemovedFromWhitelist = AddressWhitelist_RemovedFromWhitelist;
}

import type { AdministrateeInterface } from './AdministrateeInterface';
export type { AdministrateeInterface };

import type { AggregatorInterface } from './AggregatorInterface';
export type { AggregatorInterface };
import type {
  AnswerUpdated as AggregatorInterface_AnswerUpdated,
  NewRound as AggregatorInterface_NewRound,
} from './AggregatorInterface';
export namespace AggregatorInterface_Events {
  export type AnswerUpdated = AggregatorInterface_AnswerUpdated;
  export type NewRound = AggregatorInterface_NewRound;
}

import type { AggregatorV2V3Interface } from './AggregatorV2V3Interface';
export type { AggregatorV2V3Interface };
import type {
  AnswerUpdated as AggregatorV2V3Interface_AnswerUpdated,
  NewRound as AggregatorV2V3Interface_NewRound,
} from './AggregatorV2V3Interface';
export namespace AggregatorV2V3Interface_Events {
  export type AnswerUpdated = AggregatorV2V3Interface_AnswerUpdated;
  export type NewRound = AggregatorV2V3Interface_NewRound;
}

import type { AggregatorV3Interface } from './AggregatorV3Interface';
export type { AggregatorV3Interface };

import type { ContractAllowed } from './ContractAllowed';
export type { ContractAllowed };

import type { ContractAllowedOnChanPriceFeed } from './ContractAllowedOnChanPriceFeed';
export type { ContractAllowedOnChanPriceFeed };

import type { ContractCreator } from './ContractCreator';
export type { ContractCreator };

import type { DesignatedVoting } from './DesignatedVoting';
export type { DesignatedVoting };
import type {
  AddedSharedMember as DesignatedVoting_AddedSharedMember,
  RemovedSharedMember as DesignatedVoting_RemovedSharedMember,
  ResetExclusiveMember as DesignatedVoting_ResetExclusiveMember,
} from './DesignatedVoting';
export namespace DesignatedVoting_Events {
  export type AddedSharedMember = DesignatedVoting_AddedSharedMember;
  export type RemovedSharedMember = DesignatedVoting_RemovedSharedMember;
  export type ResetExclusiveMember = DesignatedVoting_ResetExclusiveMember;
}

import type { DesignatedVotingFactory } from './DesignatedVotingFactory';
export type { DesignatedVotingFactory };
import type {
  AddedSharedMember as DesignatedVotingFactory_AddedSharedMember,
  RemovedSharedMember as DesignatedVotingFactory_RemovedSharedMember,
  ResetExclusiveMember as DesignatedVotingFactory_ResetExclusiveMember,
} from './DesignatedVotingFactory';
export namespace DesignatedVotingFactory_Events {
  export type AddedSharedMember = DesignatedVotingFactory_AddedSharedMember;
  export type RemovedSharedMember = DesignatedVotingFactory_RemovedSharedMember;
  export type ResetExclusiveMember = DesignatedVotingFactory_ResetExclusiveMember;
}

import type { ERC20 } from './ERC20';
export type { ERC20 };
import type {
  Approval as ERC20_Approval,
  Transfer as ERC20_Transfer,
} from './ERC20';
export namespace ERC20_Events {
  export type Approval = ERC20_Approval;
  export type Transfer = ERC20_Transfer;
}

import type { ERC20Snapshot } from './ERC20Snapshot';
export type { ERC20Snapshot };
import type {
  Approval as ERC20Snapshot_Approval,
  Snapshot as ERC20Snapshot_Snapshot,
  Transfer as ERC20Snapshot_Transfer,
} from './ERC20Snapshot';
export namespace ERC20Snapshot_Events {
  export type Approval = ERC20Snapshot_Approval;
  export type Snapshot = ERC20Snapshot_Snapshot;
  export type Transfer = ERC20Snapshot_Transfer;
}

import type { ExpandedERC20 } from './ExpandedERC20';
export type { ExpandedERC20 };
import type {
  AddedSharedMember as ExpandedERC20_AddedSharedMember,
  Approval as ExpandedERC20_Approval,
  RemovedSharedMember as ExpandedERC20_RemovedSharedMember,
  ResetExclusiveMember as ExpandedERC20_ResetExclusiveMember,
  Transfer as ExpandedERC20_Transfer,
} from './ExpandedERC20';
export namespace ExpandedERC20_Events {
  export type AddedSharedMember = ExpandedERC20_AddedSharedMember;
  export type Approval = ExpandedERC20_Approval;
  export type RemovedSharedMember = ExpandedERC20_RemovedSharedMember;
  export type ResetExclusiveMember = ExpandedERC20_ResetExclusiveMember;
  export type Transfer = ExpandedERC20_Transfer;
}

import type { ExpandedIERC20 } from './ExpandedIERC20';
export type { ExpandedIERC20 };
import type {
  Approval as ExpandedIERC20_Approval,
  Transfer as ExpandedIERC20_Transfer,
} from './ExpandedIERC20';
export namespace ExpandedIERC20_Events {
  export type Approval = ExpandedIERC20_Approval;
  export type Transfer = ExpandedIERC20_Transfer;
}

import type { FeePayerPoolParty } from './FeePayerPoolParty';
export type { FeePayerPoolParty };
import type {
  FinalFeesPaid as FeePayerPoolParty_FinalFeesPaid,
  RegularFeesPaid as FeePayerPoolParty_RegularFeesPaid,
} from './FeePayerPoolParty';
export namespace FeePayerPoolParty_Events {
  export type FinalFeesPaid = FeePayerPoolParty_FinalFeesPaid;
  export type RegularFeesPaid = FeePayerPoolParty_RegularFeesPaid;
}

import type { FeePayerPoolPartyLib } from './FeePayerPoolPartyLib';
export type { FeePayerPoolPartyLib };
import type {
  FinalFeesPaid as FeePayerPoolPartyLib_FinalFeesPaid,
  RegularFeesPaid as FeePayerPoolPartyLib_RegularFeesPaid,
} from './FeePayerPoolPartyLib';
export namespace FeePayerPoolPartyLib_Events {
  export type FinalFeesPaid = FeePayerPoolPartyLib_FinalFeesPaid;
  export type RegularFeesPaid = FeePayerPoolPartyLib_RegularFeesPaid;
}

import type { FinancialContractsAdmin } from './FinancialContractsAdmin';
export type { FinancialContractsAdmin };
import type { OwnershipTransferred as FinancialContractsAdmin_OwnershipTransferred } from './FinancialContractsAdmin';
export namespace FinancialContractsAdmin_Events {
  export type OwnershipTransferred = FinancialContractsAdmin_OwnershipTransferred;
}

import type { Finder } from './Finder';
export type { Finder };
import type {
  InterfaceImplementationChanged as Finder_InterfaceImplementationChanged,
  OwnershipTransferred as Finder_OwnershipTransferred,
} from './Finder';
export namespace Finder_Events {
  export type InterfaceImplementationChanged = Finder_InterfaceImplementationChanged;
  export type OwnershipTransferred = Finder_OwnershipTransferred;
}

import type { FinderInterface } from './FinderInterface';
export type { FinderInterface };

import type { Governor } from './Governor';
export type { Governor };
import type {
  AddedSharedMember as Governor_AddedSharedMember,
  NewProposal as Governor_NewProposal,
  ProposalExecuted as Governor_ProposalExecuted,
  RemovedSharedMember as Governor_RemovedSharedMember,
  ResetExclusiveMember as Governor_ResetExclusiveMember,
} from './Governor';
export namespace Governor_Events {
  export type AddedSharedMember = Governor_AddedSharedMember;
  export type NewProposal = Governor_NewProposal;
  export type ProposalExecuted = Governor_ProposalExecuted;
  export type RemovedSharedMember = Governor_RemovedSharedMember;
  export type ResetExclusiveMember = Governor_ResetExclusiveMember;
}

import type { HitchensUnorderedKeySet } from './HitchensUnorderedKeySet';
export type { HitchensUnorderedKeySet };
import type { LogUpdate as HitchensUnorderedKeySet_LogUpdate } from './HitchensUnorderedKeySet';
export namespace HitchensUnorderedKeySet_Events {
  export type LogUpdate = HitchensUnorderedKeySet_LogUpdate;
}

import type { IDeploymentSignature } from './IDeploymentSignature';
export type { IDeploymentSignature };

import type { IDerivative } from './IDerivative';
export type { IDerivative };

import type { IDerivativeDeployment } from './IDerivativeDeployment';
export type { IDerivativeDeployment };

import type { IERC20 } from './IERC20';
export type { IERC20 };
import type {
  Approval as IERC20_Approval,
  Transfer as IERC20_Transfer,
} from './IERC20';
export namespace IERC20_Events {
  export type Approval = IERC20_Approval;
  export type Transfer = IERC20_Transfer;
}

import type { IERC20Standard } from './IERC20Standard';
export type { IERC20Standard };
import type {
  Approval as IERC20Standard_Approval,
  Transfer as IERC20Standard_Transfer,
} from './IERC20Standard';
export namespace IERC20Standard_Events {
  export type Approval = IERC20Standard_Approval;
  export type Transfer = IERC20Standard_Transfer;
}

import type { IRole } from './IRole';
export type { IRole };

import type { IStandardERC20 } from './IStandardERC20';
export type { IStandardERC20 };
import type {
  Approval as IStandardERC20_Approval,
  Transfer as IStandardERC20_Transfer,
} from './IStandardERC20';
export namespace IStandardERC20_Events {
  export type Approval = IStandardERC20_Approval;
  export type Transfer = IStandardERC20_Transfer;
}

import type { ISynthereumChainlinkPriceFeed } from './ISynthereumChainlinkPriceFeed';
export type { ISynthereumChainlinkPriceFeed };

import type { ISynthereumDeployer } from './ISynthereumDeployer';
export type { ISynthereumDeployer };

import type { ISynthereumFactoryVersioning } from './ISynthereumFactoryVersioning';
export type { ISynthereumFactoryVersioning };

import type { ISynthereumFinder } from './ISynthereumFinder';
export type { ISynthereumFinder };

import type { ISynthereumPool } from './ISynthereumPool';
export type { ISynthereumPool };

import type { ISynthereumPoolDeployment } from './ISynthereumPoolDeployment';
export type { ISynthereumPoolDeployment };

import type { ISynthereumPoolGeneral } from './ISynthereumPoolGeneral';
export type { ISynthereumPoolGeneral };

import type { ISynthereumPoolInteraction } from './ISynthereumPoolInteraction';
export type { ISynthereumPoolInteraction };

import type { ISynthereumPoolOnChainPriceFeed } from './ISynthereumPoolOnChainPriceFeed';
export type { ISynthereumPoolOnChainPriceFeed };

import type { ISynthereumPoolRegistry } from './ISynthereumPoolRegistry';
export type { ISynthereumPoolRegistry };

import type { ISynthereumPriceFeed } from './ISynthereumPriceFeed';
export type { ISynthereumPriceFeed };

import type { IdentifierWhitelist } from './IdentifierWhitelist';
export type { IdentifierWhitelist };
import type {
  OwnershipTransferred as IdentifierWhitelist_OwnershipTransferred,
  SupportedIdentifierAdded as IdentifierWhitelist_SupportedIdentifierAdded,
  SupportedIdentifierRemoved as IdentifierWhitelist_SupportedIdentifierRemoved,
} from './IdentifierWhitelist';
export namespace IdentifierWhitelist_Events {
  export type OwnershipTransferred = IdentifierWhitelist_OwnershipTransferred;
  export type SupportedIdentifierAdded = IdentifierWhitelist_SupportedIdentifierAdded;
  export type SupportedIdentifierRemoved = IdentifierWhitelist_SupportedIdentifierRemoved;
}

import type { IdentifierWhitelistInterface } from './IdentifierWhitelistInterface';
export type { IdentifierWhitelistInterface };

import type { MintableBurnableERC20 } from './MintableBurnableERC20';
export type { MintableBurnableERC20 };
import type {
  Approval as MintableBurnableERC20_Approval,
  RoleAdminChanged as MintableBurnableERC20_RoleAdminChanged,
  RoleGranted as MintableBurnableERC20_RoleGranted,
  RoleRevoked as MintableBurnableERC20_RoleRevoked,
  Transfer as MintableBurnableERC20_Transfer,
} from './MintableBurnableERC20';
export namespace MintableBurnableERC20_Events {
  export type Approval = MintableBurnableERC20_Approval;
  export type RoleAdminChanged = MintableBurnableERC20_RoleAdminChanged;
  export type RoleGranted = MintableBurnableERC20_RoleGranted;
  export type RoleRevoked = MintableBurnableERC20_RoleRevoked;
  export type Transfer = MintableBurnableERC20_Transfer;
}

import type { MintableBurnableIERC20 } from './MintableBurnableIERC20';
export type { MintableBurnableIERC20 };
import type {
  Approval as MintableBurnableIERC20_Approval,
  Transfer as MintableBurnableIERC20_Transfer,
} from './MintableBurnableIERC20';
export namespace MintableBurnableIERC20_Events {
  export type Approval = MintableBurnableIERC20_Approval;
  export type Transfer = MintableBurnableIERC20_Transfer;
}

import type { MintableBurnableSyntheticToken } from './MintableBurnableSyntheticToken';
export type { MintableBurnableSyntheticToken };
import type {
  Approval as MintableBurnableSyntheticToken_Approval,
  RoleAdminChanged as MintableBurnableSyntheticToken_RoleAdminChanged,
  RoleGranted as MintableBurnableSyntheticToken_RoleGranted,
  RoleRevoked as MintableBurnableSyntheticToken_RoleRevoked,
  Transfer as MintableBurnableSyntheticToken_Transfer,
} from './MintableBurnableSyntheticToken';
export namespace MintableBurnableSyntheticToken_Events {
  export type Approval = MintableBurnableSyntheticToken_Approval;
  export type RoleAdminChanged = MintableBurnableSyntheticToken_RoleAdminChanged;
  export type RoleGranted = MintableBurnableSyntheticToken_RoleGranted;
  export type RoleRevoked = MintableBurnableSyntheticToken_RoleRevoked;
  export type Transfer = MintableBurnableSyntheticToken_Transfer;
}

import type { MintableBurnableTokenFactory } from './MintableBurnableTokenFactory';
export type { MintableBurnableTokenFactory };

import type { MockOracle } from './MockOracle';
export type { MockOracle };

import type { MockV3Aggregator } from './MockV3Aggregator';
export type { MockV3Aggregator };
import type {
  AnswerUpdated as MockV3Aggregator_AnswerUpdated,
  NewRound as MockV3Aggregator_NewRound,
} from './MockV3Aggregator';
export namespace MockV3Aggregator_Events {
  export type AnswerUpdated = MockV3Aggregator_AnswerUpdated;
  export type NewRound = MockV3Aggregator_NewRound;
}

import type { MultiRole } from './MultiRole';
export type { MultiRole };
import type {
  AddedSharedMember as MultiRole_AddedSharedMember,
  RemovedSharedMember as MultiRole_RemovedSharedMember,
  ResetExclusiveMember as MultiRole_ResetExclusiveMember,
} from './MultiRole';
export namespace MultiRole_Events {
  export type AddedSharedMember = MultiRole_AddedSharedMember;
  export type RemovedSharedMember = MultiRole_RemovedSharedMember;
  export type ResetExclusiveMember = MultiRole_ResetExclusiveMember;
}

import type { OptimisticOracle } from './OptimisticOracle';
export type { OptimisticOracle };
import type {
  DisputePrice as OptimisticOracle_DisputePrice,
  ProposePrice as OptimisticOracle_ProposePrice,
  RequestPrice as OptimisticOracle_RequestPrice,
  Settle as OptimisticOracle_Settle,
} from './OptimisticOracle';
export namespace OptimisticOracle_Events {
  export type DisputePrice = OptimisticOracle_DisputePrice;
  export type ProposePrice = OptimisticOracle_ProposePrice;
  export type RequestPrice = OptimisticOracle_RequestPrice;
  export type Settle = OptimisticOracle_Settle;
}

import type { OptimisticOracleInterface } from './OptimisticOracleInterface';
export type { OptimisticOracleInterface };

import type { OptimisticRequester } from './OptimisticRequester';
export type { OptimisticRequester };

import type { OracleAncillaryInterface } from './OracleAncillaryInterface';
export type { OracleAncillaryInterface };

import type { OracleInterface } from './OracleInterface';
export type { OracleInterface };

import type { OracleInterfaces } from './OracleInterfaces';
export type { OracleInterfaces };

import type { Ownable } from './Ownable';
export type { Ownable };
import type { OwnershipTransferred as Ownable_OwnershipTransferred } from './Ownable';
export namespace Ownable_Events {
  export type OwnershipTransferred = Ownable_OwnershipTransferred;
}

import type { PerpetualLiquidatablePoolParty } from './PerpetualLiquidatablePoolParty';
export type { PerpetualLiquidatablePoolParty };
import type {
  Deposit as PerpetualLiquidatablePoolParty_Deposit,
  DisputeSettled as PerpetualLiquidatablePoolParty_DisputeSettled,
  EmergencyShutdown as PerpetualLiquidatablePoolParty_EmergencyShutdown,
  EndedSponsorPosition as PerpetualLiquidatablePoolParty_EndedSponsorPosition,
  FinalFeesPaid as PerpetualLiquidatablePoolParty_FinalFeesPaid,
  LiquidationCreated as PerpetualLiquidatablePoolParty_LiquidationCreated,
  LiquidationDisputed as PerpetualLiquidatablePoolParty_LiquidationDisputed,
  LiquidationWithdrawn as PerpetualLiquidatablePoolParty_LiquidationWithdrawn,
  NewSponsor as PerpetualLiquidatablePoolParty_NewSponsor,
  PositionCreated as PerpetualLiquidatablePoolParty_PositionCreated,
  Redeem as PerpetualLiquidatablePoolParty_Redeem,
  RegularFeesPaid as PerpetualLiquidatablePoolParty_RegularFeesPaid,
  Repay as PerpetualLiquidatablePoolParty_Repay,
  RequestWithdrawal as PerpetualLiquidatablePoolParty_RequestWithdrawal,
  RequestWithdrawalCanceled as PerpetualLiquidatablePoolParty_RequestWithdrawalCanceled,
  RequestWithdrawalExecuted as PerpetualLiquidatablePoolParty_RequestWithdrawalExecuted,
  RoleAdminChanged as PerpetualLiquidatablePoolParty_RoleAdminChanged,
  RoleGranted as PerpetualLiquidatablePoolParty_RoleGranted,
  RoleRevoked as PerpetualLiquidatablePoolParty_RoleRevoked,
  SettleEmergencyShutdown as PerpetualLiquidatablePoolParty_SettleEmergencyShutdown,
  Withdrawal as PerpetualLiquidatablePoolParty_Withdrawal,
} from './PerpetualLiquidatablePoolParty';
export namespace PerpetualLiquidatablePoolParty_Events {
  export type Deposit = PerpetualLiquidatablePoolParty_Deposit;
  export type DisputeSettled = PerpetualLiquidatablePoolParty_DisputeSettled;
  export type EmergencyShutdown = PerpetualLiquidatablePoolParty_EmergencyShutdown;
  export type EndedSponsorPosition = PerpetualLiquidatablePoolParty_EndedSponsorPosition;
  export type FinalFeesPaid = PerpetualLiquidatablePoolParty_FinalFeesPaid;
  export type LiquidationCreated = PerpetualLiquidatablePoolParty_LiquidationCreated;
  export type LiquidationDisputed = PerpetualLiquidatablePoolParty_LiquidationDisputed;
  export type LiquidationWithdrawn = PerpetualLiquidatablePoolParty_LiquidationWithdrawn;
  export type NewSponsor = PerpetualLiquidatablePoolParty_NewSponsor;
  export type PositionCreated = PerpetualLiquidatablePoolParty_PositionCreated;
  export type Redeem = PerpetualLiquidatablePoolParty_Redeem;
  export type RegularFeesPaid = PerpetualLiquidatablePoolParty_RegularFeesPaid;
  export type Repay = PerpetualLiquidatablePoolParty_Repay;
  export type RequestWithdrawal = PerpetualLiquidatablePoolParty_RequestWithdrawal;
  export type RequestWithdrawalCanceled = PerpetualLiquidatablePoolParty_RequestWithdrawalCanceled;
  export type RequestWithdrawalExecuted = PerpetualLiquidatablePoolParty_RequestWithdrawalExecuted;
  export type RoleAdminChanged = PerpetualLiquidatablePoolParty_RoleAdminChanged;
  export type RoleGranted = PerpetualLiquidatablePoolParty_RoleGranted;
  export type RoleRevoked = PerpetualLiquidatablePoolParty_RoleRevoked;
  export type SettleEmergencyShutdown = PerpetualLiquidatablePoolParty_SettleEmergencyShutdown;
  export type Withdrawal = PerpetualLiquidatablePoolParty_Withdrawal;
}

import type { PerpetualLiquidatablePoolPartyLib } from './PerpetualLiquidatablePoolPartyLib';
export type { PerpetualLiquidatablePoolPartyLib };
import type {
  DisputeSettled as PerpetualLiquidatablePoolPartyLib_DisputeSettled,
  LiquidationCreated as PerpetualLiquidatablePoolPartyLib_LiquidationCreated,
  LiquidationDisputed as PerpetualLiquidatablePoolPartyLib_LiquidationDisputed,
  LiquidationWithdrawn as PerpetualLiquidatablePoolPartyLib_LiquidationWithdrawn,
} from './PerpetualLiquidatablePoolPartyLib';
export namespace PerpetualLiquidatablePoolPartyLib_Events {
  export type DisputeSettled = PerpetualLiquidatablePoolPartyLib_DisputeSettled;
  export type LiquidationCreated = PerpetualLiquidatablePoolPartyLib_LiquidationCreated;
  export type LiquidationDisputed = PerpetualLiquidatablePoolPartyLib_LiquidationDisputed;
  export type LiquidationWithdrawn = PerpetualLiquidatablePoolPartyLib_LiquidationWithdrawn;
}

import type { PerpetualPoolParty } from './PerpetualPoolParty';
export type { PerpetualPoolParty };
import type {
  Deposit as PerpetualPoolParty_Deposit,
  DisputeSettled as PerpetualPoolParty_DisputeSettled,
  EmergencyShutdown as PerpetualPoolParty_EmergencyShutdown,
  EndedSponsorPosition as PerpetualPoolParty_EndedSponsorPosition,
  FinalFeesPaid as PerpetualPoolParty_FinalFeesPaid,
  LiquidationCreated as PerpetualPoolParty_LiquidationCreated,
  LiquidationDisputed as PerpetualPoolParty_LiquidationDisputed,
  LiquidationWithdrawn as PerpetualPoolParty_LiquidationWithdrawn,
  NewSponsor as PerpetualPoolParty_NewSponsor,
  PositionCreated as PerpetualPoolParty_PositionCreated,
  Redeem as PerpetualPoolParty_Redeem,
  RegularFeesPaid as PerpetualPoolParty_RegularFeesPaid,
  Repay as PerpetualPoolParty_Repay,
  RequestWithdrawal as PerpetualPoolParty_RequestWithdrawal,
  RequestWithdrawalCanceled as PerpetualPoolParty_RequestWithdrawalCanceled,
  RequestWithdrawalExecuted as PerpetualPoolParty_RequestWithdrawalExecuted,
  RoleAdminChanged as PerpetualPoolParty_RoleAdminChanged,
  RoleGranted as PerpetualPoolParty_RoleGranted,
  RoleRevoked as PerpetualPoolParty_RoleRevoked,
  SettleEmergencyShutdown as PerpetualPoolParty_SettleEmergencyShutdown,
  Withdrawal as PerpetualPoolParty_Withdrawal,
} from './PerpetualPoolParty';
export namespace PerpetualPoolParty_Events {
  export type Deposit = PerpetualPoolParty_Deposit;
  export type DisputeSettled = PerpetualPoolParty_DisputeSettled;
  export type EmergencyShutdown = PerpetualPoolParty_EmergencyShutdown;
  export type EndedSponsorPosition = PerpetualPoolParty_EndedSponsorPosition;
  export type FinalFeesPaid = PerpetualPoolParty_FinalFeesPaid;
  export type LiquidationCreated = PerpetualPoolParty_LiquidationCreated;
  export type LiquidationDisputed = PerpetualPoolParty_LiquidationDisputed;
  export type LiquidationWithdrawn = PerpetualPoolParty_LiquidationWithdrawn;
  export type NewSponsor = PerpetualPoolParty_NewSponsor;
  export type PositionCreated = PerpetualPoolParty_PositionCreated;
  export type Redeem = PerpetualPoolParty_Redeem;
  export type RegularFeesPaid = PerpetualPoolParty_RegularFeesPaid;
  export type Repay = PerpetualPoolParty_Repay;
  export type RequestWithdrawal = PerpetualPoolParty_RequestWithdrawal;
  export type RequestWithdrawalCanceled = PerpetualPoolParty_RequestWithdrawalCanceled;
  export type RequestWithdrawalExecuted = PerpetualPoolParty_RequestWithdrawalExecuted;
  export type RoleAdminChanged = PerpetualPoolParty_RoleAdminChanged;
  export type RoleGranted = PerpetualPoolParty_RoleGranted;
  export type RoleRevoked = PerpetualPoolParty_RoleRevoked;
  export type SettleEmergencyShutdown = PerpetualPoolParty_SettleEmergencyShutdown;
  export type Withdrawal = PerpetualPoolParty_Withdrawal;
}

import type { PerpetualPoolPartyCreator } from './PerpetualPoolPartyCreator';
export type { PerpetualPoolPartyCreator };
import type { CreatedPerpetual as PerpetualPoolPartyCreator_CreatedPerpetual } from './PerpetualPoolPartyCreator';
export namespace PerpetualPoolPartyCreator_Events {
  export type CreatedPerpetual = PerpetualPoolPartyCreator_CreatedPerpetual;
}

import type { PerpetualPositionManagerPoolParty } from './PerpetualPositionManagerPoolParty';
export type { PerpetualPositionManagerPoolParty };
import type {
  Deposit as PerpetualPositionManagerPoolParty_Deposit,
  EmergencyShutdown as PerpetualPositionManagerPoolParty_EmergencyShutdown,
  EndedSponsorPosition as PerpetualPositionManagerPoolParty_EndedSponsorPosition,
  FinalFeesPaid as PerpetualPositionManagerPoolParty_FinalFeesPaid,
  NewSponsor as PerpetualPositionManagerPoolParty_NewSponsor,
  PositionCreated as PerpetualPositionManagerPoolParty_PositionCreated,
  Redeem as PerpetualPositionManagerPoolParty_Redeem,
  RegularFeesPaid as PerpetualPositionManagerPoolParty_RegularFeesPaid,
  Repay as PerpetualPositionManagerPoolParty_Repay,
  RequestWithdrawal as PerpetualPositionManagerPoolParty_RequestWithdrawal,
  RequestWithdrawalCanceled as PerpetualPositionManagerPoolParty_RequestWithdrawalCanceled,
  RequestWithdrawalExecuted as PerpetualPositionManagerPoolParty_RequestWithdrawalExecuted,
  RoleAdminChanged as PerpetualPositionManagerPoolParty_RoleAdminChanged,
  RoleGranted as PerpetualPositionManagerPoolParty_RoleGranted,
  RoleRevoked as PerpetualPositionManagerPoolParty_RoleRevoked,
  SettleEmergencyShutdown as PerpetualPositionManagerPoolParty_SettleEmergencyShutdown,
  Withdrawal as PerpetualPositionManagerPoolParty_Withdrawal,
} from './PerpetualPositionManagerPoolParty';
export namespace PerpetualPositionManagerPoolParty_Events {
  export type Deposit = PerpetualPositionManagerPoolParty_Deposit;
  export type EmergencyShutdown = PerpetualPositionManagerPoolParty_EmergencyShutdown;
  export type EndedSponsorPosition = PerpetualPositionManagerPoolParty_EndedSponsorPosition;
  export type FinalFeesPaid = PerpetualPositionManagerPoolParty_FinalFeesPaid;
  export type NewSponsor = PerpetualPositionManagerPoolParty_NewSponsor;
  export type PositionCreated = PerpetualPositionManagerPoolParty_PositionCreated;
  export type Redeem = PerpetualPositionManagerPoolParty_Redeem;
  export type RegularFeesPaid = PerpetualPositionManagerPoolParty_RegularFeesPaid;
  export type Repay = PerpetualPositionManagerPoolParty_Repay;
  export type RequestWithdrawal = PerpetualPositionManagerPoolParty_RequestWithdrawal;
  export type RequestWithdrawalCanceled = PerpetualPositionManagerPoolParty_RequestWithdrawalCanceled;
  export type RequestWithdrawalExecuted = PerpetualPositionManagerPoolParty_RequestWithdrawalExecuted;
  export type RoleAdminChanged = PerpetualPositionManagerPoolParty_RoleAdminChanged;
  export type RoleGranted = PerpetualPositionManagerPoolParty_RoleGranted;
  export type RoleRevoked = PerpetualPositionManagerPoolParty_RoleRevoked;
  export type SettleEmergencyShutdown = PerpetualPositionManagerPoolParty_SettleEmergencyShutdown;
  export type Withdrawal = PerpetualPositionManagerPoolParty_Withdrawal;
}

import type { PerpetualPositionManagerPoolPartyLib } from './PerpetualPositionManagerPoolPartyLib';
export type { PerpetualPositionManagerPoolPartyLib };
import type {
  Deposit as PerpetualPositionManagerPoolPartyLib_Deposit,
  EmergencyShutdown as PerpetualPositionManagerPoolPartyLib_EmergencyShutdown,
  EndedSponsorPosition as PerpetualPositionManagerPoolPartyLib_EndedSponsorPosition,
  NewSponsor as PerpetualPositionManagerPoolPartyLib_NewSponsor,
  PositionCreated as PerpetualPositionManagerPoolPartyLib_PositionCreated,
  Redeem as PerpetualPositionManagerPoolPartyLib_Redeem,
  Repay as PerpetualPositionManagerPoolPartyLib_Repay,
  RequestWithdrawal as PerpetualPositionManagerPoolPartyLib_RequestWithdrawal,
  RequestWithdrawalCanceled as PerpetualPositionManagerPoolPartyLib_RequestWithdrawalCanceled,
  RequestWithdrawalExecuted as PerpetualPositionManagerPoolPartyLib_RequestWithdrawalExecuted,
  SettleEmergencyShutdown as PerpetualPositionManagerPoolPartyLib_SettleEmergencyShutdown,
  Withdrawal as PerpetualPositionManagerPoolPartyLib_Withdrawal,
} from './PerpetualPositionManagerPoolPartyLib';
export namespace PerpetualPositionManagerPoolPartyLib_Events {
  export type Deposit = PerpetualPositionManagerPoolPartyLib_Deposit;
  export type EmergencyShutdown = PerpetualPositionManagerPoolPartyLib_EmergencyShutdown;
  export type EndedSponsorPosition = PerpetualPositionManagerPoolPartyLib_EndedSponsorPosition;
  export type NewSponsor = PerpetualPositionManagerPoolPartyLib_NewSponsor;
  export type PositionCreated = PerpetualPositionManagerPoolPartyLib_PositionCreated;
  export type Redeem = PerpetualPositionManagerPoolPartyLib_Redeem;
  export type Repay = PerpetualPositionManagerPoolPartyLib_Repay;
  export type RequestWithdrawal = PerpetualPositionManagerPoolPartyLib_RequestWithdrawal;
  export type RequestWithdrawalCanceled = PerpetualPositionManagerPoolPartyLib_RequestWithdrawalCanceled;
  export type RequestWithdrawalExecuted = PerpetualPositionManagerPoolPartyLib_RequestWithdrawalExecuted;
  export type SettleEmergencyShutdown = PerpetualPositionManagerPoolPartyLib_SettleEmergencyShutdown;
  export type Withdrawal = PerpetualPositionManagerPoolPartyLib_Withdrawal;
}

import type { Registry } from './Registry';
export type { Registry };
import type {
  AddedSharedMember as Registry_AddedSharedMember,
  NewContractRegistered as Registry_NewContractRegistered,
  PartyAdded as Registry_PartyAdded,
  PartyRemoved as Registry_PartyRemoved,
  RemovedSharedMember as Registry_RemovedSharedMember,
  ResetExclusiveMember as Registry_ResetExclusiveMember,
} from './Registry';
export namespace Registry_Events {
  export type AddedSharedMember = Registry_AddedSharedMember;
  export type NewContractRegistered = Registry_NewContractRegistered;
  export type PartyAdded = Registry_PartyAdded;
  export type PartyRemoved = Registry_PartyRemoved;
  export type RemovedSharedMember = Registry_RemovedSharedMember;
  export type ResetExclusiveMember = Registry_ResetExclusiveMember;
}

import type { RegistryInterface } from './RegistryInterface';
export type { RegistryInterface };

import type { Store } from './Store';
export type { Store };
import type {
  AddedSharedMember as Store_AddedSharedMember,
  NewFinalFee as Store_NewFinalFee,
  NewFixedOracleFeePerSecondPerPfc as Store_NewFixedOracleFeePerSecondPerPfc,
  NewWeeklyDelayFeePerSecondPerPfc as Store_NewWeeklyDelayFeePerSecondPerPfc,
  RemovedSharedMember as Store_RemovedSharedMember,
  ResetExclusiveMember as Store_ResetExclusiveMember,
} from './Store';
export namespace Store_Events {
  export type AddedSharedMember = Store_AddedSharedMember;
  export type NewFinalFee = Store_NewFinalFee;
  export type NewFixedOracleFeePerSecondPerPfc = Store_NewFixedOracleFeePerSecondPerPfc;
  export type NewWeeklyDelayFeePerSecondPerPfc = Store_NewWeeklyDelayFeePerSecondPerPfc;
  export type RemovedSharedMember = Store_RemovedSharedMember;
  export type ResetExclusiveMember = Store_ResetExclusiveMember;
}

import type { StoreInterface } from './StoreInterface';
export type { StoreInterface };

import type { SynthereumChainlinkPriceFeed } from './SynthereumChainlinkPriceFeed';
export type { SynthereumChainlinkPriceFeed };
import type {
  RemoveAggregator as SynthereumChainlinkPriceFeed_RemoveAggregator,
  RoleAdminChanged as SynthereumChainlinkPriceFeed_RoleAdminChanged,
  RoleGranted as SynthereumChainlinkPriceFeed_RoleGranted,
  RoleRevoked as SynthereumChainlinkPriceFeed_RoleRevoked,
  SetAggregator as SynthereumChainlinkPriceFeed_SetAggregator,
} from './SynthereumChainlinkPriceFeed';
export namespace SynthereumChainlinkPriceFeed_Events {
  export type RemoveAggregator = SynthereumChainlinkPriceFeed_RemoveAggregator;
  export type RoleAdminChanged = SynthereumChainlinkPriceFeed_RoleAdminChanged;
  export type RoleGranted = SynthereumChainlinkPriceFeed_RoleGranted;
  export type RoleRevoked = SynthereumChainlinkPriceFeed_RoleRevoked;
  export type SetAggregator = SynthereumChainlinkPriceFeed_SetAggregator;
}

import type { SynthereumDeployer } from './SynthereumDeployer';
export type { SynthereumDeployer };
import type {
  DerivativeDeployed as SynthereumDeployer_DerivativeDeployed,
  PoolDeployed as SynthereumDeployer_PoolDeployed,
  RoleAdminChanged as SynthereumDeployer_RoleAdminChanged,
  RoleGranted as SynthereumDeployer_RoleGranted,
  RoleRevoked as SynthereumDeployer_RoleRevoked,
} from './SynthereumDeployer';
export namespace SynthereumDeployer_Events {
  export type DerivativeDeployed = SynthereumDeployer_DerivativeDeployed;
  export type PoolDeployed = SynthereumDeployer_PoolDeployed;
  export type RoleAdminChanged = SynthereumDeployer_RoleAdminChanged;
  export type RoleGranted = SynthereumDeployer_RoleGranted;
  export type RoleRevoked = SynthereumDeployer_RoleRevoked;
}

import type { SynthereumDerivativeFactory } from './SynthereumDerivativeFactory';
export type { SynthereumDerivativeFactory };
import type { CreatedPerpetual as SynthereumDerivativeFactory_CreatedPerpetual } from './SynthereumDerivativeFactory';
export namespace SynthereumDerivativeFactory_Events {
  export type CreatedPerpetual = SynthereumDerivativeFactory_CreatedPerpetual;
}

import type { SynthereumFactoryVersioning } from './SynthereumFactoryVersioning';
export type { SynthereumFactoryVersioning };
import type {
  AddDerivativeFactory as SynthereumFactoryVersioning_AddDerivativeFactory,
  AddPoolFactory as SynthereumFactoryVersioning_AddPoolFactory,
  RemoveDerivativeFactory as SynthereumFactoryVersioning_RemoveDerivativeFactory,
  RemovePoolFactory as SynthereumFactoryVersioning_RemovePoolFactory,
  RoleAdminChanged as SynthereumFactoryVersioning_RoleAdminChanged,
  RoleGranted as SynthereumFactoryVersioning_RoleGranted,
  RoleRevoked as SynthereumFactoryVersioning_RoleRevoked,
} from './SynthereumFactoryVersioning';
export namespace SynthereumFactoryVersioning_Events {
  export type AddDerivativeFactory = SynthereumFactoryVersioning_AddDerivativeFactory;
  export type AddPoolFactory = SynthereumFactoryVersioning_AddPoolFactory;
  export type RemoveDerivativeFactory = SynthereumFactoryVersioning_RemoveDerivativeFactory;
  export type RemovePoolFactory = SynthereumFactoryVersioning_RemovePoolFactory;
  export type RoleAdminChanged = SynthereumFactoryVersioning_RoleAdminChanged;
  export type RoleGranted = SynthereumFactoryVersioning_RoleGranted;
  export type RoleRevoked = SynthereumFactoryVersioning_RoleRevoked;
}

import type { SynthereumFinder } from './SynthereumFinder';
export type { SynthereumFinder };
import type {
  InterfaceImplementationChanged as SynthereumFinder_InterfaceImplementationChanged,
  RoleAdminChanged as SynthereumFinder_RoleAdminChanged,
  RoleGranted as SynthereumFinder_RoleGranted,
  RoleRevoked as SynthereumFinder_RoleRevoked,
} from './SynthereumFinder';
export namespace SynthereumFinder_Events {
  export type InterfaceImplementationChanged = SynthereumFinder_InterfaceImplementationChanged;
  export type RoleAdminChanged = SynthereumFinder_RoleAdminChanged;
  export type RoleGranted = SynthereumFinder_RoleGranted;
  export type RoleRevoked = SynthereumFinder_RoleRevoked;
}

import type { SynthereumInterfaces } from './SynthereumInterfaces';
export type { SynthereumInterfaces };

import type { SynthereumPool } from './SynthereumPool';
export type { SynthereumPool };
import type {
  AddDerivative as SynthereumPool_AddDerivative,
  Exchange as SynthereumPool_Exchange,
  Mint as SynthereumPool_Mint,
  Redeem as SynthereumPool_Redeem,
  RemoveDerivative as SynthereumPool_RemoveDerivative,
  RoleAdminChanged as SynthereumPool_RoleAdminChanged,
  RoleGranted as SynthereumPool_RoleGranted,
  RoleRevoked as SynthereumPool_RoleRevoked,
  SetFeePercentage as SynthereumPool_SetFeePercentage,
  SetFeeRecipients as SynthereumPool_SetFeeRecipients,
  Settlement as SynthereumPool_Settlement,
} from './SynthereumPool';
export namespace SynthereumPool_Events {
  export type AddDerivative = SynthereumPool_AddDerivative;
  export type Exchange = SynthereumPool_Exchange;
  export type Mint = SynthereumPool_Mint;
  export type Redeem = SynthereumPool_Redeem;
  export type RemoveDerivative = SynthereumPool_RemoveDerivative;
  export type RoleAdminChanged = SynthereumPool_RoleAdminChanged;
  export type RoleGranted = SynthereumPool_RoleGranted;
  export type RoleRevoked = SynthereumPool_RoleRevoked;
  export type SetFeePercentage = SynthereumPool_SetFeePercentage;
  export type SetFeeRecipients = SynthereumPool_SetFeeRecipients;
  export type Settlement = SynthereumPool_Settlement;
}

import type { SynthereumPoolCreator } from './SynthereumPoolCreator';
export type { SynthereumPoolCreator };

import type { SynthereumPoolFactory } from './SynthereumPoolFactory';
export type { SynthereumPoolFactory };

import type { SynthereumPoolLib } from './SynthereumPoolLib';
export type { SynthereumPoolLib };
import type {
  AddDerivative as SynthereumPoolLib_AddDerivative,
  Exchange as SynthereumPoolLib_Exchange,
  Mint as SynthereumPoolLib_Mint,
  Redeem as SynthereumPoolLib_Redeem,
  RemoveDerivative as SynthereumPoolLib_RemoveDerivative,
  SetFeePercentage as SynthereumPoolLib_SetFeePercentage,
  SetFeeRecipients as SynthereumPoolLib_SetFeeRecipients,
  Settlement as SynthereumPoolLib_Settlement,
} from './SynthereumPoolLib';
export namespace SynthereumPoolLib_Events {
  export type AddDerivative = SynthereumPoolLib_AddDerivative;
  export type Exchange = SynthereumPoolLib_Exchange;
  export type Mint = SynthereumPoolLib_Mint;
  export type Redeem = SynthereumPoolLib_Redeem;
  export type RemoveDerivative = SynthereumPoolLib_RemoveDerivative;
  export type SetFeePercentage = SynthereumPoolLib_SetFeePercentage;
  export type SetFeeRecipients = SynthereumPoolLib_SetFeeRecipients;
  export type Settlement = SynthereumPoolLib_Settlement;
}

import type { SynthereumPoolOnChainPriceFeed } from './SynthereumPoolOnChainPriceFeed';
export type { SynthereumPoolOnChainPriceFeed };
import type {
  AddDerivative as SynthereumPoolOnChainPriceFeed_AddDerivative,
  Exchange as SynthereumPoolOnChainPriceFeed_Exchange,
  Mint as SynthereumPoolOnChainPriceFeed_Mint,
  Redeem as SynthereumPoolOnChainPriceFeed_Redeem,
  RemoveDerivative as SynthereumPoolOnChainPriceFeed_RemoveDerivative,
  RoleAdminChanged as SynthereumPoolOnChainPriceFeed_RoleAdminChanged,
  RoleGranted as SynthereumPoolOnChainPriceFeed_RoleGranted,
  RoleRevoked as SynthereumPoolOnChainPriceFeed_RoleRevoked,
  SetFeePercentage as SynthereumPoolOnChainPriceFeed_SetFeePercentage,
  SetFeeRecipients as SynthereumPoolOnChainPriceFeed_SetFeeRecipients,
  Settlement as SynthereumPoolOnChainPriceFeed_Settlement,
} from './SynthereumPoolOnChainPriceFeed';
export namespace SynthereumPoolOnChainPriceFeed_Events {
  export type AddDerivative = SynthereumPoolOnChainPriceFeed_AddDerivative;
  export type Exchange = SynthereumPoolOnChainPriceFeed_Exchange;
  export type Mint = SynthereumPoolOnChainPriceFeed_Mint;
  export type Redeem = SynthereumPoolOnChainPriceFeed_Redeem;
  export type RemoveDerivative = SynthereumPoolOnChainPriceFeed_RemoveDerivative;
  export type RoleAdminChanged = SynthereumPoolOnChainPriceFeed_RoleAdminChanged;
  export type RoleGranted = SynthereumPoolOnChainPriceFeed_RoleGranted;
  export type RoleRevoked = SynthereumPoolOnChainPriceFeed_RoleRevoked;
  export type SetFeePercentage = SynthereumPoolOnChainPriceFeed_SetFeePercentage;
  export type SetFeeRecipients = SynthereumPoolOnChainPriceFeed_SetFeeRecipients;
  export type Settlement = SynthereumPoolOnChainPriceFeed_Settlement;
}

import type { SynthereumPoolOnChainPriceFeedCreator } from './SynthereumPoolOnChainPriceFeedCreator';
export type { SynthereumPoolOnChainPriceFeedCreator };

import type { SynthereumPoolOnChainPriceFeedFactory } from './SynthereumPoolOnChainPriceFeedFactory';
export type { SynthereumPoolOnChainPriceFeedFactory };

import type { SynthereumPoolOnChainPriceFeedLib } from './SynthereumPoolOnChainPriceFeedLib';
export type { SynthereumPoolOnChainPriceFeedLib };
import type {
  AddDerivative as SynthereumPoolOnChainPriceFeedLib_AddDerivative,
  Exchange as SynthereumPoolOnChainPriceFeedLib_Exchange,
  Mint as SynthereumPoolOnChainPriceFeedLib_Mint,
  Redeem as SynthereumPoolOnChainPriceFeedLib_Redeem,
  RemoveDerivative as SynthereumPoolOnChainPriceFeedLib_RemoveDerivative,
  SetFeePercentage as SynthereumPoolOnChainPriceFeedLib_SetFeePercentage,
  SetFeeRecipients as SynthereumPoolOnChainPriceFeedLib_SetFeeRecipients,
  Settlement as SynthereumPoolOnChainPriceFeedLib_Settlement,
} from './SynthereumPoolOnChainPriceFeedLib';
export namespace SynthereumPoolOnChainPriceFeedLib_Events {
  export type AddDerivative = SynthereumPoolOnChainPriceFeedLib_AddDerivative;
  export type Exchange = SynthereumPoolOnChainPriceFeedLib_Exchange;
  export type Mint = SynthereumPoolOnChainPriceFeedLib_Mint;
  export type Redeem = SynthereumPoolOnChainPriceFeedLib_Redeem;
  export type RemoveDerivative = SynthereumPoolOnChainPriceFeedLib_RemoveDerivative;
  export type SetFeePercentage = SynthereumPoolOnChainPriceFeedLib_SetFeePercentage;
  export type SetFeeRecipients = SynthereumPoolOnChainPriceFeedLib_SetFeeRecipients;
  export type Settlement = SynthereumPoolOnChainPriceFeedLib_Settlement;
}

import type { SynthereumPoolRegistry } from './SynthereumPoolRegistry';
export type { SynthereumPoolRegistry };

import type { SynthereumSyntheticTokenFactory } from './SynthereumSyntheticTokenFactory';
export type { SynthereumSyntheticTokenFactory };

import type { SynthereumTIC } from './SynthereumTIC';
export type { SynthereumTIC };
import type {
  ExchangeApproved as SynthereumTIC_ExchangeApproved,
  ExchangeRejected as SynthereumTIC_ExchangeRejected,
  ExchangeRequested as SynthereumTIC_ExchangeRequested,
  MintApproved as SynthereumTIC_MintApproved,
  MintRejected as SynthereumTIC_MintRejected,
  MintRequested as SynthereumTIC_MintRequested,
  RedeemApproved as SynthereumTIC_RedeemApproved,
  RedeemRejected as SynthereumTIC_RedeemRejected,
  RedeemRequested as SynthereumTIC_RedeemRequested,
  RoleAdminChanged as SynthereumTIC_RoleAdminChanged,
  RoleGranted as SynthereumTIC_RoleGranted,
  RoleRevoked as SynthereumTIC_RoleRevoked,
  SetFeePercentage as SynthereumTIC_SetFeePercentage,
  SetFeeRecipients as SynthereumTIC_SetFeeRecipients,
} from './SynthereumTIC';
export namespace SynthereumTIC_Events {
  export type ExchangeApproved = SynthereumTIC_ExchangeApproved;
  export type ExchangeRejected = SynthereumTIC_ExchangeRejected;
  export type ExchangeRequested = SynthereumTIC_ExchangeRequested;
  export type MintApproved = SynthereumTIC_MintApproved;
  export type MintRejected = SynthereumTIC_MintRejected;
  export type MintRequested = SynthereumTIC_MintRequested;
  export type RedeemApproved = SynthereumTIC_RedeemApproved;
  export type RedeemRejected = SynthereumTIC_RedeemRejected;
  export type RedeemRequested = SynthereumTIC_RedeemRequested;
  export type RoleAdminChanged = SynthereumTIC_RoleAdminChanged;
  export type RoleGranted = SynthereumTIC_RoleGranted;
  export type RoleRevoked = SynthereumTIC_RoleRevoked;
  export type SetFeePercentage = SynthereumTIC_SetFeePercentage;
  export type SetFeeRecipients = SynthereumTIC_SetFeeRecipients;
}

import type { SynthereumTICFactory } from './SynthereumTICFactory';
export type { SynthereumTICFactory };

import type { SynthereumTICInterface } from './SynthereumTICInterface';
export type { SynthereumTICInterface };

import type { TICCreator } from './TICCreator';
export type { TICCreator };

import type { Testable } from './Testable';
export type { Testable };

import type { TestnetERC20 } from './TestnetERC20';
export type { TestnetERC20 };
import type {
  Approval as TestnetERC20_Approval,
  Transfer as TestnetERC20_Transfer,
} from './TestnetERC20';
export namespace TestnetERC20_Events {
  export type Approval = TestnetERC20_Approval;
  export type Transfer = TestnetERC20_Transfer;
}

import type { Timer } from './Timer';
export type { Timer };

import type { TokenMigrator } from './TokenMigrator';
export type { TokenMigrator };

import type { Voting } from './Voting';
export type { Voting };
import type {
  EncryptedVote as Voting_EncryptedVote,
  OwnershipTransferred as Voting_OwnershipTransferred,
  PriceRequestAdded as Voting_PriceRequestAdded,
  PriceResolved as Voting_PriceResolved,
  RewardsRetrieved as Voting_RewardsRetrieved,
  VoteCommitted as Voting_VoteCommitted,
  VoteRevealed as Voting_VoteRevealed,
} from './Voting';
export namespace Voting_Events {
  export type EncryptedVote = Voting_EncryptedVote;
  export type OwnershipTransferred = Voting_OwnershipTransferred;
  export type PriceRequestAdded = Voting_PriceRequestAdded;
  export type PriceResolved = Voting_PriceResolved;
  export type RewardsRetrieved = Voting_RewardsRetrieved;
  export type VoteCommitted = Voting_VoteCommitted;
  export type VoteRevealed = Voting_VoteRevealed;
}

import type { VotingAncillaryInterface } from './VotingAncillaryInterface';
export type { VotingAncillaryInterface };

import type { VotingInterface } from './VotingInterface';
export type { VotingInterface };

import type { VotingToken } from './VotingToken';
export type { VotingToken };
import type {
  AddedSharedMember as VotingToken_AddedSharedMember,
  Approval as VotingToken_Approval,
  RemovedSharedMember as VotingToken_RemovedSharedMember,
  ResetExclusiveMember as VotingToken_ResetExclusiveMember,
  Snapshot as VotingToken_Snapshot,
  Transfer as VotingToken_Transfer,
} from './VotingToken';
export namespace VotingToken_Events {
  export type AddedSharedMember = VotingToken_AddedSharedMember;
  export type Approval = VotingToken_Approval;
  export type RemovedSharedMember = VotingToken_RemovedSharedMember;
  export type ResetExclusiveMember = VotingToken_ResetExclusiveMember;
  export type Snapshot = VotingToken_Snapshot;
  export type Transfer = VotingToken_Transfer;
}

import type { Withdrawable } from './Withdrawable';
export type { Withdrawable };
import type {
  AddedSharedMember as Withdrawable_AddedSharedMember,
  RemovedSharedMember as Withdrawable_RemovedSharedMember,
  ResetExclusiveMember as Withdrawable_ResetExclusiveMember,
} from './Withdrawable';
export namespace Withdrawable_Events {
  export type AddedSharedMember = Withdrawable_AddedSharedMember;
  export type RemovedSharedMember = Withdrawable_RemovedSharedMember;
  export type ResetExclusiveMember = Withdrawable_ResetExclusiveMember;
}

export type {
  Callback,
  ContractEventLog,
  ContractEventEmitter,
  NonPayableTx,
  PayableTx,
  NonPayableTransactionObject,
  PayableTransactionObject,
  BlockType,
  BaseContract,
} from './types';
