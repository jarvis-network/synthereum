{
  "contractName": "VotingTest",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseLength",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_gatPercentage",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_inflationRate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsExpirationTimeout",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_votingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "EncryptedVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "name": "PriceResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "RewardsRetrieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "VoteCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "VoteRevealed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encryptedVote",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingInterface.Commitment[]",
          "name": "commits",
          "type": "tuple[]"
        }
      ],
      "name": "batchCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "salt",
              "type": "int256"
            }
          ],
          "internalType": "struct VotingInterface.Reveal[]",
          "name": "reveals",
          "type": "tuple[]"
        }
      ],
      "name": "batchReveal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "commitAndEmitEncryptedVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "commitVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gatPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceRequestStatuses",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Voting.RequestStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastVotingRound",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.RequestState[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotePhase",
      "outputs": [
        {
          "internalType": "enum VotingInterface.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migratedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "toRetrieve",
          "type": "tuple[]"
        }
      ],
      "name": "retrieveRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalRewardToIssue",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "salt",
          "type": "int256"
        }
      ],
      "name": "revealVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsExpirationTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "inflationRate",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "gatPercentage",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardsExpirationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newGatPercentage",
          "type": "tuple"
        }
      ],
      "name": "setGatPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newInflationRate",
          "type": "tuple"
        }
      ],
      "name": "setInflationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVotingAddress",
          "type": "address"
        }
      ],
      "name": "setMigrated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "NewRewardsExpirationTimeout",
          "type": "uint256"
        }
      ],
      "name": "setRewardsExpirationTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "snapshotCurrentRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snapshotMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteTiming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "phaseLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingToken",
      "outputs": [
        {
          "internalType": "contract VotingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingPriceRequestsArray",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseLength\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_gatPercentage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_inflationRate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsExpirationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_votingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"EncryptedVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"PriceResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"RewardsRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"VoteCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingInterface.Commitment[]\",\"name\":\"commits\",\"type\":\"tuple[]\"}],\"name\":\"batchCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"internalType\":\"struct VotingInterface.Reveal[]\",\"name\":\"reveals\",\"type\":\"tuple[]\"}],\"name\":\"batchReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"commitAndEmitEncryptedVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingPriceRequestsArray\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"getPriceRequestStatuses\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Voting.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastVotingRound\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.RequestState[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotePhase\",\"outputs\":[{\"internalType\":\"enum VotingInterface.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migratedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"toRetrieve\",\"type\":\"tuple[]\"}],\"name\":\"retrieveRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalRewardToIssue\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"inflationRate\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"gatPercentage\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardsExpirationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newGatPercentage\",\"type\":\"tuple\"}],\"name\":\"setGatPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newInflationRate\",\"type\":\"tuple\"}],\"name\":\"setInflationRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVotingAddress\",\"type\":\"address\"}],\"name\":\"setMigrated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"NewRewardsExpirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setRewardsExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"snapshotCurrentRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteTiming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"phaseLength\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingToken\",\"outputs\":[{\"internalType\":\"contract VotingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"details\":\"Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.\",\"params\":{\"commits\":\"struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\"}},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"details\":\"For more information on reveals, review the comment for `revealVote`.\",\"params\":{\"reveals\":\"array of the Reveal struct which contains an identifier, time, price and salt.\"}},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"details\":\"An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.\",\"params\":{\"encryptedVote\":\"offchain encrypted blob containing the voters amount, time and salt.\",\"hash\":\"keccak256 hash of the price you want to vote for and a `int256 salt`.\",\"identifier\":\"unique price pair identifier. Eg: BTC/USD price pair.\",\"time\":\"unix timestamp of for the price request.\"}},\"commitVote(bytes32,uint256,bytes32)\":{\"details\":\"`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system\\u2019s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.\",\"params\":{\"hash\":\"keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\",\"identifier\":\"uniquely identifies the committed vote. EG BTC/USD price pair.\",\"time\":\"unix timestamp of the price being voted on.\"}},\"getCurrentRoundId()\":{\"returns\":{\"_0\":\"uint256 representing the unique round ID.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"getPendingRequests()\":{\"returns\":{\"_0\":\"pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests.\"}},\"getPrice(bytes32,uint256)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"getPriceRequestStatuses((bytes32,uint256)[])\":{\"details\":\"If the status for a particular request is NotRequested, the lastVotingRound will always be 0.\",\"params\":{\"requests\":\"array of type PendingRequest which includes an identifier and timestamp for each request.\"},\"returns\":{\"_0\":\"requestStates a list, in the same order as the input list, giving the status of each of the specified price requests.\"}},\"getVotePhase()\":{\"returns\":{\"_0\":\"Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }.\"}},\"hasPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"details\":\"Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).\",\"params\":{\"roundId\":\"the round from which voting rewards will be retrieved from.\",\"toRetrieve\":\"array of PendingRequests which rewards are retrieved from.\",\"voterAddress\":\"voter for which rewards will be retrieved. Does not have to be the caller.\"},\"returns\":{\"totalRewardToIssue\":\"total amount of rewards returned to the voter.\"}},\"revealVote(bytes32,uint256,int256,int256)\":{\"details\":\"The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.\",\"params\":{\"identifier\":\"voted on in the commit phase. EG BTC/USD price pair.\",\"price\":\"voted on during the commit phase.\",\"salt\":\"value used to hide the commitment price during the commit phase.\",\"time\":\"specifies the unix timestamp of the price being voted on.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"setGatPercentage((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newGatPercentage\":\"sets the next round's Gat percentage.\"}},\"setInflationRate((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newInflationRate\":\"sets the next round's inflation rate.\"}},\"setMigrated(address)\":{\"details\":\"Can only be called by the contract owner.\",\"params\":{\"newVotingAddress\":\"the newly migrated contract address.\"}},\"setRewardsExpirationTimeout(uint256)\":{\"details\":\"This change only applies to rounds that have not yet begun.\",\"params\":{\"NewRewardsExpirationTimeout\":\"how long a caller can wait before choosing to withdraw their rewards.\"}},\"snapshotCurrentRound(bytes)\":{\"details\":\"This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.\",\"params\":{\"signature\":\"signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"notice\":\"Submit a batch of commits in a single transaction.\"},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"notice\":\"Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction.\"},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"notice\":\"commits a vote and logs an event with a data blob, typically an encrypted version of the vote\"},\"commitVote(bytes32,uint256,bytes32)\":{\"notice\":\"Commit a vote for a price request for `identifier` at `time`.\"},\"getCurrentRoundId()\":{\"notice\":\"Returns the current round ID, as a function of the current time.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getPendingRequests()\":{\"notice\":\"Gets the queries that are being voted on this round.\"},\"getPrice(bytes32,uint256)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"getPriceRequestStatuses((bytes32,uint256)[])\":{\"notice\":\"Gets the status of a list of price requests, identified by their identifier and time.\"},\"getVotePhase()\":{\"notice\":\"Returns the current voting phase, as a function of the current time.\"},\"hasPrice(bytes32,uint256)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"notice\":\"Retrieves rewards owed for a set of resolved price requests.\"},\"revealVote(bytes32,uint256,int256,int256)\":{\"notice\":\"Reveal a previously committed vote for `identifier` at `time`.\"},\"rounds(uint256)\":{\"notice\":\"**************************************          INTERNAL TRACKING           ****************************************\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"setGatPercentage((uint256))\":{\"notice\":\"Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun.\"},\"setInflationRate((uint256))\":{\"notice\":\"Resets the inflation rate. Note: this change only applies to rounds that have not yet begun.\"},\"setMigrated(address)\":{\"notice\":\"Disables this Voting contract in favor of the migrated one.\"},\"setRewardsExpirationTimeout(uint256)\":{\"notice\":\"Resets the rewards expiration timeout.\"},\"snapshotCurrentRound(bytes)\":{\"notice\":\"Snapshot the current round's token balances and lock in the inflation rate and GAT.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/test/VotingTest.sol\":\"VotingTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x15b3f57e51e6e1d5f11b09cefd1cc60550e72fb827bf7cf8ff67b208368c7ec0\",\"urls\":[\"bzz-raw://8bdd28e1cb12662124354cc330acd14733dfbb786daf6401b1f5969a1e11b14d\",\"dweb:/ipfs/QmWY8kEXEALJ55CgHSCPZgAA4b39Ef2YdKshhnvqkyWEcm\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x1db17ce4c028ed96713c3fddda6d34155281e104a47b2c65283fd0f8293d78b1\",\"urls\":[\"bzz-raw://8f306faba8d5190f36c87a8f47cce3bd7894bc5540599819aea2dd5b8ffa9413\",\"dweb:/ipfs/Qmeg4wuF1Dw5DAuoxyfnrmMZ5MK6af226hEHxCJgWKgrch\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xfa5379e18f31da723268d949acf3ecd8b76593467210032e91e2ac47201e9c80\",\"urls\":[\"bzz-raw://c15222ccf0c0e418ebe2915e59b8765db4335f11a83f5db44436719da02da51a\",\"dweb:/ipfs/QmQfj8ADqa5s7EpeqNmnt1g5YUid9Yc49DQvtufrpL1Npq\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Registry.sol\":{\"keccak256\":\"0xb9267d77d51680272ee375a0dfe930b9bccfc248f8eb03a2f692671f67903d1c\",\"urls\":[\"bzz-raw://12edbdbd26d12c48dd790c79122e9a34f99f9aece10449fdf25a008735be2544\",\"dweb:/ipfs/QmNeS4JdnMqqjkDJ38RcowKwSktKBXZZbNWq3M4T6mQ8yE\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/ResultComputation.sol\":{\"keccak256\":\"0xbbfb6a7e5db762994f6798bf534dd2042452963b0cbb31164319ed1ac3b350b8\",\"urls\":[\"bzz-raw://a2ad051ada25c5149a37c3a80d4b94d08ed7c55aabe04954890921f7a41f058a\",\"dweb:/ipfs/QmdUtJ7aRqqgqE6jnpU7JVdUssJPbn1XUEj8stymfTqLpJ\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/VoteTiming.sol\":{\"keccak256\":\"0xe344ecb50ad8caa1cfcd86bcabbc22385e76fa41916eefaf6c1e70ee1f81f14d\",\"urls\":[\"bzz-raw://348a246b1a1c58ffe830b1e00284d9919e26a9fa368b03dcdeb06d2180c69433\",\"dweb:/ipfs/QmUCAhLUY9YUeJXYkpDvF2HZkrN9665eh8eacpmr4m69bS\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Voting.sol\":{\"keccak256\":\"0x132782db4ef4bcd6ccfb2635ceae26afa3aea5d630fff980aec6ebfa386cfa76\",\"urls\":[\"bzz-raw://60ca9114a287c7ff44685aabd929d57683cd960ac82cbf5f2808ed200787f3f4\",\"dweb:/ipfs/QmXwWumGdALjPsCU32qgBTjrYdc34qpJuB9sQmTHRTjFvY\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/VotingToken.sol\":{\"keccak256\":\"0xd75bce30b76f3c2caf8815af47673b3d4c33f10be856f8008d095619846bec6e\",\"urls\":[\"bzz-raw://ce83b3a24ecfa858a7a85dda1e08c8cbbaf6556196661149cdc4fb4045ea8896\",\"dweb:/ipfs/QmbhsFdGTh8CY9bEExniK2ytGcmT1n5h6QE6WXCEZcGjYk\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/test/VotingTest.sol\":{\"keccak256\":\"0x06c001c29f4e4e59fb269be0c5fc53ae011d6c35ab2cc9fbd05a1430f4305992\",\"urls\":[\"bzz-raw://7918c020fb0237787294a7ccc98f74c524d7ef80abeb196c4b69cc18c59dba4a\",\"dweb:/ipfs/QmfF95dhF97xFU9EVGaJsDew6szFqLBrpxUvd4RoxCbbdh\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x266903a280400446041bbc9c839c2be8805bbde710a42c5cad36d6eb2d932a17\",\"urls\":[\"bzz-raw://16bb92ad84fcec107a09ea6a5b3987f8217842e1c5e676b64fc0c3191f32ed91\",\"dweb:/ipfs/QmVjLDHUuqN527VSrzQAy8ox1infQro6kTaZQ7ezX9weeA\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x0b1eef7b2b24bafb30c446bc99fa826352bb5e8c12b56f0a1867bdcee8583789\",\"urls\":[\"bzz-raw://8c03cc413725a68b581c9ecc363bdc67b1a0263893651836a6f012a1924b621c\",\"dweb:/ipfs/QmYz1wQJHtpoEutko6J4BSKb2bAw8ARQvyviSLN5Pqkr38\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0xcf0a9487f059626ddfb4555fcc4ea4c1223c68267aaaf342541ebf38d1c37527\",\"urls\":[\"bzz-raw://dc27e5ca23a9d7711ce0d819ac096b4c5609014fad6ccc7bb8a724f761987d5e\",\"dweb:/ipfs/QmZnaKgBefrkis9V5UUfkWKagKAX3dEcYK6WgTRSZhBeRp\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol\":{\"keccak256\":\"0x9945a1e0c23bf6dfeb768de35c3a3b1cb5325b229add6cf480cccf2fb90c5600\",\"urls\":[\"bzz-raw://95be068d174428524e76fdfbc8b30067e54fd241dc5e05c657741f53a5946b83\",\"dweb:/ipfs/QmYz8AiEkCpPeZSTo3CqjGZHDZW5c6Pj2jKyzrYeSpvkjh\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/VotingInterface.sol\":{\"keccak256\":\"0xd2c1deaa9272918b57a367ea8ff0fe5d6e93f4384eaabf720d0b23f2c19bf6fb\",\"urls\":[\"bzz-raw://7b7de6eb7675b19a46bb4538e9910a86850022a6223de150d91ea62fd5db8ba8\",\"dweb:/ipfs/QmfZLEcCPJ58aPBDQfoooE2oywPhm6FT7AkyhLzAFDBPgk\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x0c4a4883483cd70c6541aa55ae609483d65d457f160963da29acfc39f9a555ec\",\"urls\":[\"bzz-raw://8fa01aeec715a6ee596e68809306717f9343f175058217f85761161bfc832dfd\",\"dweb:/ipfs/QmTRt1sA3PQjiBV8Hka4jQ5hmAY8CJrujz2TMt5PqdNKjc\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x50280546205978ca6573541955e15453b4c07a19e6c8ec4f6785a5ae0d7343fb\",\"urls\":[\"bzz-raw://6463c7833ba4b3cbc3b56d50b56e7ce870aaec674633d7897a459b234478fa3e\",\"dweb:/ipfs/QmRkfjwTpA5E4SxUoHw8Qb7g6eXahtgmLrWWtTGH2TDZLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Snapshot.sol\":{\"keccak256\":\"0x5e3f26bd43cf4dc30cfc964c03cefd701fe11952ee12e43222bbbe11ff2f928f\",\"urls\":[\"bzz-raw://2d4a8b33e68ae7e906907b42a2dde2693545672f1e2b37b82bc18799056a8392\",\"dweb:/ipfs/QmT3AdfADU3xDZ1jemuFxVutTHq8SdoJtBHdUpKyoTyKgh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x6167b89f91ae6ca26fcba6ad04565ffa70a74694e0e46fda9b1500b2b796cf34\",\"urls\":[\"bzz-raw://aa7a5a74568c83dee67049f8dc42a80450add6c440828a2f16ac4f64905faa75\",\"dweb:/ipfs/QmaVFRGewWReDnvpHraeyrh3GsHLxH1tq6BVKdhYxBaykT\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]}},\"version\":1}",
  "bytecode": "0x60c060405260116080527014da59db88119bdc8814db985c1cda1bdd607a1b60a052620000587f05ae8dd7e03a2a2e45343dbd50fe048482c1d0e0e9e034857ff13dd19f476b7e620001b6602090811b6200273f17901c565b600c553480156200006857600080fd5b5060405162004995380380620049958339810160408190526200008b91620002f9565b600080546001600160a01b0319166001600160a01b0383161781558790879087908790879087908790620000be620001e8565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000127876005620001ec60201b6200276f1790919060201c565b62000142600187620001fe60201b620027801790919060201c565b6200016a5760405162461bcd60e51b81526004016200016190620003b8565b60405180910390fd5b5093516006559151600755600980546001600160a01b039384166001600160a01b031991821617909155600a805494909316931692909217905560085550620004499650505050505050565b600081604051602001620001cb919062000387565b604051602081830303815290604052805190602001209050919050565b3390565b60008111620001fa57600080fd5b9055565b600062000214826001600160e01b036200022216565b518351111590505b92915050565b6200022c620002a8565b604051806020016040528062000259670de0b6b3a7640000856200026160201b620027981790919060201c565b905292915050565b60008262000272575060006200021c565b828202828482816200028057fe5b0414620002a15760405162461bcd60e51b81526004016200016190620003ef565b9392505050565b6040518060200160405280600081525090565b600060208284031215620002cd578081fd5b604051602081016001600160401b0381118282101715620002ec578283fd5b6040529151825250919050565b600080600080600080600060e0888a03121562000314578283fd5b87519650620003278960208a01620002bb565b9550620003388960408a01620002bb565b9450606088015193506080880151620003518162000430565b60a0890151909350620003648162000430565b60c0890151909250620003778162000430565b8091505092959891949750929550565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6020808252601e908201527f4741542070657263656e74616765206d757374206265203c3d20313030250000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6001600160a01b03811681146200044657600080fd5b50565b61453c80620004596000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806370a0cf2c1161012a5780638c65c81f116100bd578063b90fd4801161008c578063d8651ad011610071578063d8651ad014610426578063f116961f14610439578063f2fde38b1461044e5761020b565b8063b90fd4801461040b578063c9280f06146104135761020b565b80638c65c81f146103b85780638da5cb5b146103db578063a03e881a146103e3578063b0340123146104035761020b565b806380a1f712116100f957806380a1f7121461035d57806383c6aaca146103725780638558d4f3146103855780638876e8a0146103a55761020b565b806370a0cf2c14610325578063715018a61461033857806371b7db531461034057806374dd278c146103485761020b565b806329cb924d116101a25780634c7a2603116101715780634c7a2603146102e45780635727e25d146102f75780636852eea0146102ff57806368ad8ae3146103125761020b565b806329cb924d146102b957806331f9e35b146102c15780634000851f146102c95780634666cb0c146102d15761020b565b806320b373a2116101de57806320b373a21461027657806322f8e5661461028b57806326af73bf1461029e5780632960b5af146102a65761020b565b80630d434e7e14610210578063110d559a1461023957806313e56d6a1461024e5780631c39c38d14610261575b600080fd5b61022361021e36600461373d565b610461565b60405161023091906143b1565b60405180910390f35b61024c6102473660046139f5565b610b37565b005b61024c61025c366004613a50565b610cb2565b610269610d5b565b6040516102309190613b8c565b61027e610d77565b6040516102309190613cbd565b61024c610299366004613a75565b610d7d565b61027e610e2a565b61024c6102b4366004613705565b610e30565b61027e610ed3565b61027e610f9e565b610269610fa4565b61024c6102df3660046138fd565b610fc0565b61024c6102f23660046139c4565b611041565b61027e6113b5565b61024c61030d366004613833565b6113c7565b61024c6103203660046138b1565b61143f565b61024c610333366004613794565b611892565b61024c611a15565b61027e611ae0565b610350611ae6565b6040516102309190613cf2565b610365611b01565b6040516102309190613c17565b61024c610380366004613a50565b611cc5565b610398610393366004613800565b611d27565b6040516102309190613c66565b61024c6103b3366004613a75565b611e74565b6103cb6103c6366004613a75565b611ed5565b60405161023094939291906143ea565b610269611f0f565b6103f66103f13660046138b1565b611f2b565b6040516102309190613cb2565b61026961215f565b61027e61217b565b61027e6104213660046138b1565b612181565b61024c6104343660046138d2565b6123eb565b6104416125b0565b6040516102309190613bd3565b61024c61045c366004613705565b612608565b610469613622565b600b5473ffffffffffffffffffffffffffffffffffffffff16156104e157600b5473ffffffffffffffffffffffffffffffffffffffff1633146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613ee6565b60405180910390fd5b60006104eb610ed3565b90506104fe60058263ffffffff6127f316565b8410610536576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613f1d565b600084815260026020526040902060038101548211610553613622565b60408051602081019182905260095485547f4ee2cd7e000000000000000000000000000000000000000000000000000000009093529091829173ffffffffffffffffffffffffffffffffffffffff1690634ee2cd7e906105b8908d9060248601613bad565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190613a8d565b90529050610614613622565b60408051602081019182905260095486547f981b24d0000000000000000000000000000000000000000000000000000000009093529091829173ffffffffffffffffffffffffffffffffffffffff169063981b24d0906106779060248501613cbd565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190613a8d565b905290506106d3613622565b6040805160208101909152600186015481526106f5908363ffffffff61282416565b604080516020810190915260008082529098509091505b8851811015610a3257600061074f8a838151811061072657fe5b6020026020010151600001518b848151811061073e57fe5b602002602001015160200151612867565b6003810154600081815260028301602052604090209192508c1461079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061430c565b6107a9828261288d565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152602082905260409020600101546107dd575050610a2a565b8615610869578a83815181106107ef57fe5b6020026020010151600001518c8e73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e878151811061084057fe5b602002602001015160200151600060405161085c929190613cc6565b60405180910390a46109fe565b73ffffffffffffffffffffffffffffffffffffffff8d1660009081526020829052604090206001908101546108a69183019063ffffffff612a4916565b1561097c576108b3613622565b6108de6108c283600101612a80565b6108d2898863ffffffff61282416565b9063ffffffff612aac16565b90506108f08b8263ffffffff612af616565b9a508b84815181106108fe57fe5b6020026020010151600001518d8f73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8f888151811061094f57fe5b602002602001015160200151856000015160405161096e929190613cc6565b60405180910390a4506109fe565b8a838151811061098857fe5b6020026020010151600001518c8e73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e87815181106109d957fe5b60200260200101516020015160006040516109f5929190613cc6565b60405180910390a45b73ffffffffffffffffffffffffffffffffffffffff8d1660009081526020919091526040812060010155505b60010161070c565b50610a4487600063ffffffff612b1f16565b15610b2a5760095487516040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f1991610aa2918e9190600401613bad565b602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190613891565b610b2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906140e8565b5050505050509392505050565b600b5473ffffffffffffffffffffffffffffffffffffffff1615610b87576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b6000610b91610ed3565b90506001610ba660058363ffffffff612b3616565b6002811115610bb157fe5b14610be8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614343565b3373ffffffffffffffffffffffffffffffffffffffff16610c41600c5485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612b6792505050565b73ffffffffffffffffffffffffffffffffffffffff1614610c8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906140b1565b6000610ca160058363ffffffff6127f316565b9050610cac81612d28565b50505050565b610cba612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614610d0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b610d1f81600163ffffffff612e3d16565b610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906141c4565b51600655565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b60005473ffffffffffffffffffffffffffffffffffffffff16610d9f57600080fd5b6000546040517f22f8e56600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906322f8e56690610df5908490600401613cbd565b600060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b5050505050565b60085481565b610e38612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614610e8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff1615610f98576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5957600080fd5b505afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f919190613a8d565b9050610f9b565b50425b90565b60075481565b600b5473ffffffffffffffffffffffffffffffffffffffff1681565b610fcb8484846123eb565b6000610fe6610fd8610ed3565b60059063ffffffff6127f316565b905084813373ffffffffffffffffffffffffffffffffffffffff167f6992efdd7b69c1a8d79212d5ef5fe92118ed053fb7195808a858fa6889a117e987866040516110329291906143bb565b60405180910390a45050505050565b600b5473ffffffffffffffffffffffffffffffffffffffff1615611091576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b600061109b610ed3565b905060016110b060058363ffffffff612b3616565b60028111156110bb57fe5b146110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e52565b600061110560058363ffffffff6127f316565b905060006111138787612867565b60008381526002820160209081526040808320338452918290529091208054929350909161116d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614156565b80600001548787338b888e60405160200161118d96959493929190613b0e565b60405160208183030381529060405280519060200120146111da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d87565b60008481526002602052604090205461121f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906142d5565b600084815260026020526040812054908255611239613622565b6040805160208101918290526009547f4ee2cd7e0000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff16634ee2cd7e611298338760248601613bad565b60206040518083038186803b1580156112b057600080fd5b505afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190613a8d565b8152509050886040516020016112fe9190613cbd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206001808501919091556113509085018a8363ffffffff612e5416565b8a863373ffffffffffffffffffffffffffffffffffffffff167fd04931ad32b4f942a0f169443ebd7f85a7d42c8b4310b4792243a065348836078d8d86600001516040516113a0939291906143d4565b60405180910390a45050505050505050505050565b60006113c2610fd8610ed3565b905090565b60005b8181101561143a576114328383838181106113e157fe5b905060800201600001358484848181106113f757fe5b9050608002016020013585858581811061140d57fe5b9050608002016040013586868681811061142357fe5b90506080020160600135611041565b6001016113ca565b505050565b600b5473ffffffffffffffffffffffffffffffffffffffff16156114b357600b5473ffffffffffffffffffffffffffffffffffffffff1633146114ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b611657565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409061152a907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561154257600080fd5b505afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b906115cf903390600401613b8c565b60206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161f9190613891565b611655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b6000611661610ed3565b90508082111561169d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061418d565b6116a5612f1b565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b846040518263ffffffff1660e01b81526004016116dd9190613cbd565b60206040518083038186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d9190613891565b611763576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613fb1565b600061176f8484612fe2565b600081815260036020526040812091925061179160058563ffffffff6127f316565b9050600061179f8383613015565b905060008160038111156117af57fe5b14156118895760006117c883600163ffffffff6130a216565b604080516080810182528a815260208082018b8152828401858152600480546060860190815260008d815260039586905287812096518755935160018088019190915592519486019490945592519383019390935581549283018255527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0187905551909150889082907f5d80f93c41e95cacea0b9ce9bb825092d709fa503a70bb26ea3f536bf16946bd9061187f908b90613cbd565b60405180910390a3505b50505050505050565b60005b8181101561143a578282828181106118a957fe5b90506020028101906118bb9190614471565b6118c9906060810190614405565b151590506119415761193c8383838181106118e057fe5b90506020028101906118f29190614471565b358484848181106118ff57fe5b90506020028101906119119190614471565b6020013585858581811061192157fe5b90506020028101906119339190614471565b604001356123eb565b611a0d565b611a0d83838381811061195057fe5b90506020028101906119629190614471565b3584848481811061196f57fe5b90506020028101906119819190614471565b6020013585858581811061199157fe5b90506020028101906119a39190614471565b604001358686868181106119b357fe5b90506020028101906119c59190614471565b6119d3906060810190614405565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc092505050565b600101611895565b611a1d612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611a71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b60015460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60055481565b60006113c2611af3610ed3565b60059063ffffffff612b3616565b60606000611b0d610ed3565b90506000611b2260058363ffffffff6127f316565b60045490915060609067ffffffffffffffff81118015611b4157600080fd5b50604051908082528060200260200182016040528015611b7b57816020015b611b68613635565b815260200190600190039081611b605790505b5090506000805b600454811015611c265760006003600060048481548110611b9f57fe5b90600052602060002001548152602001908152602001600020905060016003811115611bc757fe5b611bd18287613015565b6003811115611bdc57fe5b1415611c1d576040518060400160405280826000015481526020018260010154815250848481518110611c0b57fe5b60209081029190910101526001909201915b50600101611b82565b5060608167ffffffffffffffff81118015611c4057600080fd5b50604051908082528060200260200182016040528015611c7a57816020015b611c67613635565b815260200190600190039081611c5f5790505b50905060005b82811015611cbb57838181518110611c9457fe5b6020026020010151828281518110611ca857fe5b6020908102919091010152600101611c80565b5094505050505090565b611ccd612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611d21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b51600755565b606080825167ffffffffffffffff81118015611d4257600080fd5b50604051908082528060200260200182016040528015611d7c57816020015b611d69613635565b815260200190600190039081611d615790505b5090506000611d8c610fd8610ed3565b905060005b8451811015611e69576000611dc3868381518110611dab57fe5b60200260200101516000015187848151811061073e57fe5b90506000611dd18285613015565b90506001816003811115611de157fe5b1415611e095783858481518110611df457fe5b60200260200101516020018181525050611e2b565b8160030154858481518110611e1a57fe5b602002602001015160200181815250505b80858481518110611e3857fe5b6020026020010151600001906003811115611e4f57fe5b90816003811115611e5c57fe5b9052505050600101611d91565b50909150505b919050565b611e7c612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b600855565b6002602081815260009283526040928390208054845180840186526001830154815285519384019095529281015482526003015491929184565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b600b5460009073ffffffffffffffffffffffffffffffffffffffff1615611fa257600b5473ffffffffffffffffffffffffffffffffffffffff163314611f9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b612146565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090612019907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561203157600080fd5b505afa158015612045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120699190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b906120be903390600401613b8c565b60206040518083038186803b1580156120d657600080fd5b505afa1580156120ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210e9190613891565b612144576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b600061215284846130e1565b5090925050505b92915050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600b5460009073ffffffffffffffffffffffffffffffffffffffff16156121f857600b5473ffffffffffffffffffffffffffffffffffffffff1633146121f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b61239c565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409061226f907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561228757600080fd5b505afa15801561229b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bf9190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b90612314903390600401613b8c565b60206040518083038186803b15801561232c57600080fd5b505afa158015612340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123649190613891565b61239a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b60008060606123ab86866130e1565b925092509250828190612152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b600b5473ffffffffffffffffffffffffffffffffffffffff161561243b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b80612472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061411f565b600061247c610ed3565b9050600061249160058363ffffffff612b3616565b600281111561249c57fe5b146124d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614267565b60006124e660058363ffffffff6127f316565b905060006124f48686612867565b905060016125028284613015565b600381111561250d57fe5b14612544576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061407a565b600381018290556000828152600282016020908152604080832033808552928190529281902087905551889185917f879c67d036f174a10ea491cf7281d05af9b906660b4f26727d866aec0cf9147c9061259f908b90613cbd565b60405180910390a450505050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156125fe57602002820191906000526020600020905b8154815260200190600101908083116125ea575b5050505050905090565b612610612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614612664576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b73ffffffffffffffffffffffffffffffffffffffff81166126b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613dbe565b60015460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000816040516020016127529190613b5b565b604051602081830303815290604052805190602001209050919050565b6000811161277c57600080fd5b9055565b600061278b8261326d565b5183511115905092915050565b6000826127a757506000612159565b828202828482816127b457fe5b04146127ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613fe8565b9392505050565b60008061280a60025b85549063ffffffff61279816565b905061281c838263ffffffff6132a116565b949350505050565b61282c613622565b6040805160208101909152825184518291670de0b6b3a7640000916128569163ffffffff61279816565b8161285d57fe5b0490529392505050565b6000600360006128778585612fe2565b8152602001908152602001600020905092915050565b60048201547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14156128be57612a45565b6000806128e16128d185600301546132e3565b600185019063ffffffff61341f16565b915091508161291c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906141fb565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81019160009160039183918590811061295657fe5b906000526020600020015481526020019081526020016000209050856004015481600401819055506004828154811061298b57fe5b906000526020600020015460048760040154815481106129a757fe5b60009182526020909120015560048054806129be57fe5b60008281526020812082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081019190915590810190915560048701558554600387015460018801546040517f67565e6a3e804c4e180134cb2885e32142229de3ca125701318af11658ee498891612a38918890613cc6565b60405180910390a3505050505b5050565b60008260020154604051602001612a609190613cbd565b604051602081830303815290604052805190602001208214905092915050565b612a88613622565b50600281015460009081526020918252604090819020815192830190915254815290565b612ab4613622565b6040805160208101909152825184518291612aed91612ae190670de0b6b3a764000063ffffffff61279816565b9063ffffffff6132a116565b90529392505050565b612afe613622565b6040805160208101909152825184518291612aed919063ffffffff6130a216565b6000612b2a8261326d565b51835111905092915050565b6000612b5c60028454612b5090859063ffffffff6132a116565b9063ffffffff6134e316565b60028111156127ec57fe5b60008151604114612ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d50565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612c10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e89565b8060ff16601b14158015612c2857508060ff16601c14155b15612c5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613f54565b600060018783868660405160008152602001604052604051612c849493929190613cd4565b6020604051602081039080840390855afa158015612ca6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116612d1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d19565b9695505050505050565b60008181526002602052604090208054612a4557600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639711715a6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612da657600080fd5b505af1158015612dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dde9190613a8d565b815560008281526002602081905260409091206007546001820155600654910155600854612e2390612e1760058563ffffffff61352516565b9063ffffffff6130a216565b6000838152600260205260409020600301555050565b3390565b6000612e488261326d565b51835110905092915050565b604080516020810190915260018401548152612e76908263ffffffff612af616565b51600184015560008281526020848152604091829020825191820190925290548152612ea8908263ffffffff612af616565b60008381526020859052604090209051905560028301548214801590612f0c575060028301546000908152602084815260408083208151808401835290548152858452868352928190208151928301909152548152612f0c9163ffffffff61355516565b1561143a575060029190910155565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090612f92907f4964656e74696669657257686974656c6973740000000000000000000000000090600401613cbd565b60206040518083038186803b158015612faa57600080fd5b505afa158015612fbe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c29190613721565b60008282604051602001612ff7929190613cc6565b60405160208183030381529060405280519060200120905092915050565b600082600301546000141561302c57506000612159565b8183600301541015613086576003830154600081815260028501602052604081209161306b9061305b906132e3565b600184019063ffffffff61341f16565b5090508061307a57600161307d565b60025b92505050612159565b818360030154141561309a57506001612159565b506003612159565b6000828201838110156127ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e1b565b600080606060006130f28686612867565b90506000613101610fd8610ed3565b9050600061310f8383613015565b9050600181600381111561311f57fe5b141561316b57505060408051808201909152601e81527f43757272656e7420766f74696e6720726f756e64206e6f7420656e646564000060208201526000945084935091506132669050565b600281600381111561317957fe5b14156131c657600383015460008181526002850160205260408120916131a29061305b906132e3565b60408051602081019091526000815260019a50909850965061326695505050505050565b60038160038111156131d457fe5b141561322057505060408051808201909152601d81527f5072696365206973207374696c6c20746f20626520766f746564206f6e00000060208201526000945084935091506132669050565b505060408051808201909152601981527f507269636520776173206e65766572207265717565737465640000000000000060208201526000945084935091506132669050565b9250925092565b613275613622565b60408051602081019091528061329984670de0b6b3a764000063ffffffff61279816565b905292915050565b60006127ec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061355c565b6132eb613622565b6000828152600260205260409020548061333457505060408051602081019091527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8152611e6f565b61333c613622565b6040805160208101918290526009547f981b24d00000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff1663981b24d061339a8660248501613cbd565b60206040518083038186803b1580156133b257600080fd5b505afa1580156133c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133ea9190613a8d565b90526000858152600260208181526040928390208351918201909352910154815290915061281c90829063ffffffff61282416565b60008061342a613622565b6134456064613439603261326d565b9063ffffffff6135ad16565b60408051602081019091526001870154815290915061346a908563ffffffff61355516565b80156134c15750604080516020808201835260018801548252600288015460009081528882528390208351918201909352915482526134c19183916134b5919063ffffffff612aac16565b9063ffffffff61355516565b156134d65760019250846002015491506134db565b600092505b509250929050565b60006127ec83836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f00000000000000008152506135d4565b60008061353260026127fc565b905061281c61354884600163ffffffff6130a216565b829063ffffffff61279816565b5190511190565b60008183613597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b5060008385816135a357fe5b0495945050505050565b6135b5613622565b604080516020810190915283518190612aed908563ffffffff6132a116565b6000818361360f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b5082848161361957fe5b06949350505050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b600082601f83011261365c578081fd5b813567ffffffffffffffff811115613672578182fd5b602061368181828402016144ae565b82815292508083018482016040808502870184018810156136a157600080fd5b60005b858110156136c8576136b689846136d4565b845292840192918101916001016136a4565b50505050505092915050565b6000604082840312156136e5578081fd5b6136ef60406144ae565b9050813581526020820135602082015292915050565b600060208284031215613716578081fd5b81356127ec816144e1565b600060208284031215613732578081fd5b81516127ec816144e1565b600080600060608486031215613751578182fd5b833561375c816144e1565b925060208401359150604084013567ffffffffffffffff81111561377e578182fd5b61378a8682870161364c565b9150509250925092565b600080602083850312156137a6578182fd5b823567ffffffffffffffff808211156137bd578384fd5b81850186601f8201126137ce578485fd5b80359250818311156137de578485fd5b86602080850283010111156137f1578485fd5b60200196919550909350505050565b600060208284031215613811578081fd5b813567ffffffffffffffff811115613827578182fd5b61281c8482850161364c565b60008060208385031215613845578182fd5b823567ffffffffffffffff8082111561385c578384fd5b81850186601f82011261386d578485fd5b803592508183111561387d578485fd5b8660206080850283010111156137f1578485fd5b6000602082840312156138a2578081fd5b815180151581146127ec578182fd5b600080604083850312156138c3578182fd5b50508035926020909101359150565b6000806000606084860312156138e6578283fd5b505081359360208301359350604090920135919050565b60008060008060808587031215613912578081fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8082111561393e578283fd5b81870188601f82011261394f578384fd5b803592508183111561395f578384fd5b61399060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016144ae565b91508282528860208483010111156139a6578384fd5b6139b78360208401602084016144d5565b5094979396509194505050565b600080600080608085870312156139d9578182fd5b5050823594602084013594506040840135936060013592509050565b60008060208385031215613a07578182fd5b823567ffffffffffffffff80821115613a1e578384fd5b81850186601f820112613a2f578485fd5b8035925081831115613a3f578485fd5b8660208483010111156137f1578485fd5b600060208284031215613a61578081fd5b613a6b60206144ae565b9135825250919050565b600060208284031215613a86578081fd5b5035919050565b600060208284031215613a9e578081fd5b5051919050565b60008151808452815b81811015613aca57602081850181015186830182015201613aae565b81811115613adb5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b958652602086019490945260609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016604085015260548401526074830152609482015260b40190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613c0b57835183529284019291840191600101613bef565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613c5957815180518552860151868501529284019290850190600101613c34565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613c59578151805160048110613c9957fe5b8552860151868501529284019290850190600101613c83565b901515815260200190565b90815260200190565b918252602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6020810160038310613d0057fe5b91905290565b6000602082526127ec6020830184613aa5565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252601c908201527f52657665616c6564206461746120213d20636f6d6d6974206861736800000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601d908201527f43616e6e6f742072657665616c20696e20636f6d6d6974207068617365000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f43616e206f6e6c792063616c6c2066726f6d206d696772617465640000000000604082015260600190565b6020808252600f908201527f496e76616c696420726f756e6449640000000000000000000000000000000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f556e737570706f72746564206964656e74696669657220726571756573740000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f43616e6e6f7420636f6d6d697420696e61637469766520726571756573740000604082015260600190565b6020808252601b908201527f5369676e6174757265206d757374206d617463682073656e6465720000000000604082015260600190565b6020808252601c908201527f566f74696e6720746f6b656e2069737375616e6365206661696c656400000000604082015260600190565b60208082526015908201527f496e76616c69642070726f766964656420686173680000000000000000000000604082015260600190565b60208082526013908201527f496e76616c696420686173682072657665616c00000000000000000000000000604082015260600190565b60208082526018908201527f43616e206f6e6c79207265717565737420696e20706173740000000000000000604082015260600190565b6020808252601d908201527f4741542070657263656e74616765206d757374206265203c2031303025000000604082015260600190565b6020808252818101527f43616e2774207265736f6c766520756e7265736f6c7665642072657175657374604082015260600190565b60208082526019908201527f43616c6c6564206d757374206265207265676973746572656400000000000000604082015260600190565b6020808252601d908201527f43616e6e6f7420636f6d6d697420696e2072657665616c207068617365000000604082015260600190565b6020808252601e908201527f4f6e6c792063616c6c2074686973206966206e6f74206d696772617465640000604082015260600190565b60208082526015908201527f526f756e6420686173206e6f20736e617073686f740000000000000000000000604082015260600190565b6020808252601d908201527f526574726965766520666f7220766f7465732073616d6520726f756e64000000604082015260600190565b6020808252601d908201527f4f6e6c7920736e617073686f7420696e2072657665616c207068617365000000604082015260600190565b6020808252601f908201527f43616c6c6572206d757374206265206d69677261746564206164647265737300604082015260600190565b9051815260200190565b60008382526040602083015261281c6040830184613aa5565b9283526020830191909152604082015260600190565b93845291516020840152516040830152606082015260800190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112614439578283fd5b8084018035925067ffffffffffffffff831115614454578384fd5b6020019250503681900382131561446a57600080fd5b9250929050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126144a4578182fd5b9190910192915050565b60405181810167ffffffffffffffff811182821017156144cd57600080fd5b604052919050565b82818337506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461450357600080fd5b5056fea26469706673582212207ea4716a0cd8aa62d38d2362ed546b5e8c0642cfda3d9399a0d92131ce12dd9764736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061020b5760003560e01c806370a0cf2c1161012a5780638c65c81f116100bd578063b90fd4801161008c578063d8651ad011610071578063d8651ad014610426578063f116961f14610439578063f2fde38b1461044e5761020b565b8063b90fd4801461040b578063c9280f06146104135761020b565b80638c65c81f146103b85780638da5cb5b146103db578063a03e881a146103e3578063b0340123146104035761020b565b806380a1f712116100f957806380a1f7121461035d57806383c6aaca146103725780638558d4f3146103855780638876e8a0146103a55761020b565b806370a0cf2c14610325578063715018a61461033857806371b7db531461034057806374dd278c146103485761020b565b806329cb924d116101a25780634c7a2603116101715780634c7a2603146102e45780635727e25d146102f75780636852eea0146102ff57806368ad8ae3146103125761020b565b806329cb924d146102b957806331f9e35b146102c15780634000851f146102c95780634666cb0c146102d15761020b565b806320b373a2116101de57806320b373a21461027657806322f8e5661461028b57806326af73bf1461029e5780632960b5af146102a65761020b565b80630d434e7e14610210578063110d559a1461023957806313e56d6a1461024e5780631c39c38d14610261575b600080fd5b61022361021e36600461373d565b610461565b60405161023091906143b1565b60405180910390f35b61024c6102473660046139f5565b610b37565b005b61024c61025c366004613a50565b610cb2565b610269610d5b565b6040516102309190613b8c565b61027e610d77565b6040516102309190613cbd565b61024c610299366004613a75565b610d7d565b61027e610e2a565b61024c6102b4366004613705565b610e30565b61027e610ed3565b61027e610f9e565b610269610fa4565b61024c6102df3660046138fd565b610fc0565b61024c6102f23660046139c4565b611041565b61027e6113b5565b61024c61030d366004613833565b6113c7565b61024c6103203660046138b1565b61143f565b61024c610333366004613794565b611892565b61024c611a15565b61027e611ae0565b610350611ae6565b6040516102309190613cf2565b610365611b01565b6040516102309190613c17565b61024c610380366004613a50565b611cc5565b610398610393366004613800565b611d27565b6040516102309190613c66565b61024c6103b3366004613a75565b611e74565b6103cb6103c6366004613a75565b611ed5565b60405161023094939291906143ea565b610269611f0f565b6103f66103f13660046138b1565b611f2b565b6040516102309190613cb2565b61026961215f565b61027e61217b565b61027e6104213660046138b1565b612181565b61024c6104343660046138d2565b6123eb565b6104416125b0565b6040516102309190613bd3565b61024c61045c366004613705565b612608565b610469613622565b600b5473ffffffffffffffffffffffffffffffffffffffff16156104e157600b5473ffffffffffffffffffffffffffffffffffffffff1633146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613ee6565b60405180910390fd5b60006104eb610ed3565b90506104fe60058263ffffffff6127f316565b8410610536576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613f1d565b600084815260026020526040902060038101548211610553613622565b60408051602081019182905260095485547f4ee2cd7e000000000000000000000000000000000000000000000000000000009093529091829173ffffffffffffffffffffffffffffffffffffffff1690634ee2cd7e906105b8908d9060248601613bad565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190613a8d565b90529050610614613622565b60408051602081019182905260095486547f981b24d0000000000000000000000000000000000000000000000000000000009093529091829173ffffffffffffffffffffffffffffffffffffffff169063981b24d0906106779060248501613cbd565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190613a8d565b905290506106d3613622565b6040805160208101909152600186015481526106f5908363ffffffff61282416565b604080516020810190915260008082529098509091505b8851811015610a3257600061074f8a838151811061072657fe5b6020026020010151600001518b848151811061073e57fe5b602002602001015160200151612867565b6003810154600081815260028301602052604090209192508c1461079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061430c565b6107a9828261288d565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152602082905260409020600101546107dd575050610a2a565b8615610869578a83815181106107ef57fe5b6020026020010151600001518c8e73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e878151811061084057fe5b602002602001015160200151600060405161085c929190613cc6565b60405180910390a46109fe565b73ffffffffffffffffffffffffffffffffffffffff8d1660009081526020829052604090206001908101546108a69183019063ffffffff612a4916565b1561097c576108b3613622565b6108de6108c283600101612a80565b6108d2898863ffffffff61282416565b9063ffffffff612aac16565b90506108f08b8263ffffffff612af616565b9a508b84815181106108fe57fe5b6020026020010151600001518d8f73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8f888151811061094f57fe5b602002602001015160200151856000015160405161096e929190613cc6565b60405180910390a4506109fe565b8a838151811061098857fe5b6020026020010151600001518c8e73ffffffffffffffffffffffffffffffffffffffff167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e87815181106109d957fe5b60200260200101516020015160006040516109f5929190613cc6565b60405180910390a45b73ffffffffffffffffffffffffffffffffffffffff8d1660009081526020919091526040812060010155505b60010161070c565b50610a4487600063ffffffff612b1f16565b15610b2a5760095487516040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f1991610aa2918e9190600401613bad565b602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190613891565b610b2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906140e8565b5050505050509392505050565b600b5473ffffffffffffffffffffffffffffffffffffffff1615610b87576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b6000610b91610ed3565b90506001610ba660058363ffffffff612b3616565b6002811115610bb157fe5b14610be8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614343565b3373ffffffffffffffffffffffffffffffffffffffff16610c41600c5485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612b6792505050565b73ffffffffffffffffffffffffffffffffffffffff1614610c8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906140b1565b6000610ca160058363ffffffff6127f316565b9050610cac81612d28565b50505050565b610cba612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614610d0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b610d1f81600163ffffffff612e3d16565b610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906141c4565b51600655565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b60005473ffffffffffffffffffffffffffffffffffffffff16610d9f57600080fd5b6000546040517f22f8e56600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906322f8e56690610df5908490600401613cbd565b600060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b5050505050565b60085481565b610e38612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614610e8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff1615610f98576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5957600080fd5b505afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f919190613a8d565b9050610f9b565b50425b90565b60075481565b600b5473ffffffffffffffffffffffffffffffffffffffff1681565b610fcb8484846123eb565b6000610fe6610fd8610ed3565b60059063ffffffff6127f316565b905084813373ffffffffffffffffffffffffffffffffffffffff167f6992efdd7b69c1a8d79212d5ef5fe92118ed053fb7195808a858fa6889a117e987866040516110329291906143bb565b60405180910390a45050505050565b600b5473ffffffffffffffffffffffffffffffffffffffff1615611091576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b600061109b610ed3565b905060016110b060058363ffffffff612b3616565b60028111156110bb57fe5b146110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e52565b600061110560058363ffffffff6127f316565b905060006111138787612867565b60008381526002820160209081526040808320338452918290529091208054929350909161116d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614156565b80600001548787338b888e60405160200161118d96959493929190613b0e565b60405160208183030381529060405280519060200120146111da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d87565b60008481526002602052604090205461121f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906142d5565b600084815260026020526040812054908255611239613622565b6040805160208101918290526009547f4ee2cd7e0000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff16634ee2cd7e611298338760248601613bad565b60206040518083038186803b1580156112b057600080fd5b505afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190613a8d565b8152509050886040516020016112fe9190613cbd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206001808501919091556113509085018a8363ffffffff612e5416565b8a863373ffffffffffffffffffffffffffffffffffffffff167fd04931ad32b4f942a0f169443ebd7f85a7d42c8b4310b4792243a065348836078d8d86600001516040516113a0939291906143d4565b60405180910390a45050505050505050505050565b60006113c2610fd8610ed3565b905090565b60005b8181101561143a576114328383838181106113e157fe5b905060800201600001358484848181106113f757fe5b9050608002016020013585858581811061140d57fe5b9050608002016040013586868681811061142357fe5b90506080020160600135611041565b6001016113ca565b505050565b600b5473ffffffffffffffffffffffffffffffffffffffff16156114b357600b5473ffffffffffffffffffffffffffffffffffffffff1633146114ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b611657565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409061152a907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561154257600080fd5b505afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b906115cf903390600401613b8c565b60206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161f9190613891565b611655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b6000611661610ed3565b90508082111561169d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061418d565b6116a5612f1b565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b846040518263ffffffff1660e01b81526004016116dd9190613cbd565b60206040518083038186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d9190613891565b611763576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613fb1565b600061176f8484612fe2565b600081815260036020526040812091925061179160058563ffffffff6127f316565b9050600061179f8383613015565b905060008160038111156117af57fe5b14156118895760006117c883600163ffffffff6130a216565b604080516080810182528a815260208082018b8152828401858152600480546060860190815260008d815260039586905287812096518755935160018088019190915592519486019490945592519383019390935581549283018255527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0187905551909150889082907f5d80f93c41e95cacea0b9ce9bb825092d709fa503a70bb26ea3f536bf16946bd9061187f908b90613cbd565b60405180910390a3505b50505050505050565b60005b8181101561143a578282828181106118a957fe5b90506020028101906118bb9190614471565b6118c9906060810190614405565b151590506119415761193c8383838181106118e057fe5b90506020028101906118f29190614471565b358484848181106118ff57fe5b90506020028101906119119190614471565b6020013585858581811061192157fe5b90506020028101906119339190614471565b604001356123eb565b611a0d565b611a0d83838381811061195057fe5b90506020028101906119629190614471565b3584848481811061196f57fe5b90506020028101906119819190614471565b6020013585858581811061199157fe5b90506020028101906119a39190614471565b604001358686868181106119b357fe5b90506020028101906119c59190614471565b6119d3906060810190614405565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc092505050565b600101611895565b611a1d612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611a71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b60015460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60055481565b60006113c2611af3610ed3565b60059063ffffffff612b3616565b60606000611b0d610ed3565b90506000611b2260058363ffffffff6127f316565b60045490915060609067ffffffffffffffff81118015611b4157600080fd5b50604051908082528060200260200182016040528015611b7b57816020015b611b68613635565b815260200190600190039081611b605790505b5090506000805b600454811015611c265760006003600060048481548110611b9f57fe5b90600052602060002001548152602001908152602001600020905060016003811115611bc757fe5b611bd18287613015565b6003811115611bdc57fe5b1415611c1d576040518060400160405280826000015481526020018260010154815250848481518110611c0b57fe5b60209081029190910101526001909201915b50600101611b82565b5060608167ffffffffffffffff81118015611c4057600080fd5b50604051908082528060200260200182016040528015611c7a57816020015b611c67613635565b815260200190600190039081611c5f5790505b50905060005b82811015611cbb57838181518110611c9457fe5b6020026020010151828281518110611ca857fe5b6020908102919091010152600101611c80565b5094505050505090565b611ccd612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611d21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b51600755565b606080825167ffffffffffffffff81118015611d4257600080fd5b50604051908082528060200260200182016040528015611d7c57816020015b611d69613635565b815260200190600190039081611d615790505b5090506000611d8c610fd8610ed3565b905060005b8451811015611e69576000611dc3868381518110611dab57fe5b60200260200101516000015187848151811061073e57fe5b90506000611dd18285613015565b90506001816003811115611de157fe5b1415611e095783858481518110611df457fe5b60200260200101516020018181525050611e2b565b8160030154858481518110611e1a57fe5b602002602001015160200181815250505b80858481518110611e3857fe5b6020026020010151600001906003811115611e4f57fe5b90816003811115611e5c57fe5b9052505050600101611d91565b50909150505b919050565b611e7c612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b600855565b6002602081815260009283526040928390208054845180840186526001830154815285519384019095529281015482526003015491929184565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b600b5460009073ffffffffffffffffffffffffffffffffffffffff1615611fa257600b5473ffffffffffffffffffffffffffffffffffffffff163314611f9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b612146565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090612019907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561203157600080fd5b505afa158015612045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120699190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b906120be903390600401613b8c565b60206040518083038186803b1580156120d657600080fd5b505afa1580156120ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210e9190613891565b612144576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b600061215284846130e1565b5090925050505b92915050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600b5460009073ffffffffffffffffffffffffffffffffffffffff16156121f857600b5473ffffffffffffffffffffffffffffffffffffffff1633146121f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061437a565b61239c565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409061226f907f526567697374727900000000000000000000000000000000000000000000000090600401613cbd565b60206040518083038186803b15801561228757600080fd5b505afa15801561229b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bf9190613721565b6040517ff9f6b49b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9f6b49b90612314903390600401613b8c565b60206040518083038186803b15801561232c57600080fd5b505afa158015612340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123649190613891565b61239a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614230565b505b60008060606123ab86866130e1565b925092509250828190612152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b600b5473ffffffffffffffffffffffffffffffffffffffff161561243b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061429e565b80612472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061411f565b600061247c610ed3565b9050600061249160058363ffffffff612b3616565b600281111561249c57fe5b146124d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614267565b60006124e660058363ffffffff6127f316565b905060006124f48686612867565b905060016125028284613015565b600381111561250d57fe5b14612544576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061407a565b600381018290556000828152600282016020908152604080832033808552928190529281902087905551889185917f879c67d036f174a10ea491cf7281d05af9b906660b4f26727d866aec0cf9147c9061259f908b90613cbd565b60405180910390a450505050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156125fe57602002820191906000526020600020905b8154815260200190600101908083116125ea575b5050505050905090565b612610612e39565b60015473ffffffffffffffffffffffffffffffffffffffff908116911614612664576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890614045565b73ffffffffffffffffffffffffffffffffffffffff81166126b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613dbe565b60015460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000816040516020016127529190613b5b565b604051602081830303815290604052805190602001209050919050565b6000811161277c57600080fd5b9055565b600061278b8261326d565b5183511115905092915050565b6000826127a757506000612159565b828202828482816127b457fe5b04146127ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613fe8565b9392505050565b60008061280a60025b85549063ffffffff61279816565b905061281c838263ffffffff6132a116565b949350505050565b61282c613622565b6040805160208101909152825184518291670de0b6b3a7640000916128569163ffffffff61279816565b8161285d57fe5b0490529392505050565b6000600360006128778585612fe2565b8152602001908152602001600020905092915050565b60048201547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14156128be57612a45565b6000806128e16128d185600301546132e3565b600185019063ffffffff61341f16565b915091508161291c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906141fb565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81019160009160039183918590811061295657fe5b906000526020600020015481526020019081526020016000209050856004015481600401819055506004828154811061298b57fe5b906000526020600020015460048760040154815481106129a757fe5b60009182526020909120015560048054806129be57fe5b60008281526020812082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081019190915590810190915560048701558554600387015460018801546040517f67565e6a3e804c4e180134cb2885e32142229de3ca125701318af11658ee498891612a38918890613cc6565b60405180910390a3505050505b5050565b60008260020154604051602001612a609190613cbd565b604051602081830303815290604052805190602001208214905092915050565b612a88613622565b50600281015460009081526020918252604090819020815192830190915254815290565b612ab4613622565b6040805160208101909152825184518291612aed91612ae190670de0b6b3a764000063ffffffff61279816565b9063ffffffff6132a116565b90529392505050565b612afe613622565b6040805160208101909152825184518291612aed919063ffffffff6130a216565b6000612b2a8261326d565b51835111905092915050565b6000612b5c60028454612b5090859063ffffffff6132a116565b9063ffffffff6134e316565b60028111156127ec57fe5b60008151604114612ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d50565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612c10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e89565b8060ff16601b14158015612c2857508060ff16601c14155b15612c5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613f54565b600060018783868660405160008152602001604052604051612c849493929190613cd4565b6020604051602081039080840390855afa158015612ca6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116612d1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613d19565b9695505050505050565b60008181526002602052604090208054612a4557600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639711715a6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612da657600080fd5b505af1158015612dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dde9190613a8d565b815560008281526002602081905260409091206007546001820155600654910155600854612e2390612e1760058563ffffffff61352516565b9063ffffffff6130a216565b6000838152600260205260409020600301555050565b3390565b6000612e488261326d565b51835110905092915050565b604080516020810190915260018401548152612e76908263ffffffff612af616565b51600184015560008281526020848152604091829020825191820190925290548152612ea8908263ffffffff612af616565b60008381526020859052604090209051905560028301548214801590612f0c575060028301546000908152602084815260408083208151808401835290548152858452868352928190208151928301909152548152612f0c9163ffffffff61355516565b1561143a575060029190910155565b600a546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090612f92907f4964656e74696669657257686974656c6973740000000000000000000000000090600401613cbd565b60206040518083038186803b158015612faa57600080fd5b505afa158015612fbe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c29190613721565b60008282604051602001612ff7929190613cc6565b60405160208183030381529060405280519060200120905092915050565b600082600301546000141561302c57506000612159565b8183600301541015613086576003830154600081815260028501602052604081209161306b9061305b906132e3565b600184019063ffffffff61341f16565b5090508061307a57600161307d565b60025b92505050612159565b818360030154141561309a57506001612159565b506003612159565b6000828201838110156127ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890613e1b565b600080606060006130f28686612867565b90506000613101610fd8610ed3565b9050600061310f8383613015565b9050600181600381111561311f57fe5b141561316b57505060408051808201909152601e81527f43757272656e7420766f74696e6720726f756e64206e6f7420656e646564000060208201526000945084935091506132669050565b600281600381111561317957fe5b14156131c657600383015460008181526002850160205260408120916131a29061305b906132e3565b60408051602081019091526000815260019a50909850965061326695505050505050565b60038160038111156131d457fe5b141561322057505060408051808201909152601d81527f5072696365206973207374696c6c20746f20626520766f746564206f6e00000060208201526000945084935091506132669050565b505060408051808201909152601981527f507269636520776173206e65766572207265717565737465640000000000000060208201526000945084935091506132669050565b9250925092565b613275613622565b60408051602081019091528061329984670de0b6b3a764000063ffffffff61279816565b905292915050565b60006127ec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061355c565b6132eb613622565b6000828152600260205260409020548061333457505060408051602081019091527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8152611e6f565b61333c613622565b6040805160208101918290526009547f981b24d00000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff1663981b24d061339a8660248501613cbd565b60206040518083038186803b1580156133b257600080fd5b505afa1580156133c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133ea9190613a8d565b90526000858152600260208181526040928390208351918201909352910154815290915061281c90829063ffffffff61282416565b60008061342a613622565b6134456064613439603261326d565b9063ffffffff6135ad16565b60408051602081019091526001870154815290915061346a908563ffffffff61355516565b80156134c15750604080516020808201835260018801548252600288015460009081528882528390208351918201909352915482526134c19183916134b5919063ffffffff612aac16565b9063ffffffff61355516565b156134d65760019250846002015491506134db565b600092505b509250929050565b60006127ec83836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f00000000000000008152506135d4565b60008061353260026127fc565b905061281c61354884600163ffffffff6130a216565b829063ffffffff61279816565b5190511190565b60008183613597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b5060008385816135a357fe5b0495945050505050565b6135b5613622565b604080516020810190915283518190612aed908563ffffffff6132a116565b6000818361360f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89190613d06565b5082848161361957fe5b06949350505050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b600082601f83011261365c578081fd5b813567ffffffffffffffff811115613672578182fd5b602061368181828402016144ae565b82815292508083018482016040808502870184018810156136a157600080fd5b60005b858110156136c8576136b689846136d4565b845292840192918101916001016136a4565b50505050505092915050565b6000604082840312156136e5578081fd5b6136ef60406144ae565b9050813581526020820135602082015292915050565b600060208284031215613716578081fd5b81356127ec816144e1565b600060208284031215613732578081fd5b81516127ec816144e1565b600080600060608486031215613751578182fd5b833561375c816144e1565b925060208401359150604084013567ffffffffffffffff81111561377e578182fd5b61378a8682870161364c565b9150509250925092565b600080602083850312156137a6578182fd5b823567ffffffffffffffff808211156137bd578384fd5b81850186601f8201126137ce578485fd5b80359250818311156137de578485fd5b86602080850283010111156137f1578485fd5b60200196919550909350505050565b600060208284031215613811578081fd5b813567ffffffffffffffff811115613827578182fd5b61281c8482850161364c565b60008060208385031215613845578182fd5b823567ffffffffffffffff8082111561385c578384fd5b81850186601f82011261386d578485fd5b803592508183111561387d578485fd5b8660206080850283010111156137f1578485fd5b6000602082840312156138a2578081fd5b815180151581146127ec578182fd5b600080604083850312156138c3578182fd5b50508035926020909101359150565b6000806000606084860312156138e6578283fd5b505081359360208301359350604090920135919050565b60008060008060808587031215613912578081fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8082111561393e578283fd5b81870188601f82011261394f578384fd5b803592508183111561395f578384fd5b61399060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016144ae565b91508282528860208483010111156139a6578384fd5b6139b78360208401602084016144d5565b5094979396509194505050565b600080600080608085870312156139d9578182fd5b5050823594602084013594506040840135936060013592509050565b60008060208385031215613a07578182fd5b823567ffffffffffffffff80821115613a1e578384fd5b81850186601f820112613a2f578485fd5b8035925081831115613a3f578485fd5b8660208483010111156137f1578485fd5b600060208284031215613a61578081fd5b613a6b60206144ae565b9135825250919050565b600060208284031215613a86578081fd5b5035919050565b600060208284031215613a9e578081fd5b5051919050565b60008151808452815b81811015613aca57602081850181015186830182015201613aae565b81811115613adb5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b958652602086019490945260609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016604085015260548401526074830152609482015260b40190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613c0b57835183529284019291840191600101613bef565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613c5957815180518552860151868501529284019290850190600101613c34565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613c59578151805160048110613c9957fe5b8552860151868501529284019290850190600101613c83565b901515815260200190565b90815260200190565b918252602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6020810160038310613d0057fe5b91905290565b6000602082526127ec6020830184613aa5565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252601c908201527f52657665616c6564206461746120213d20636f6d6d6974206861736800000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601d908201527f43616e6e6f742072657665616c20696e20636f6d6d6974207068617365000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f43616e206f6e6c792063616c6c2066726f6d206d696772617465640000000000604082015260600190565b6020808252600f908201527f496e76616c696420726f756e6449640000000000000000000000000000000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f556e737570706f72746564206964656e74696669657220726571756573740000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f43616e6e6f7420636f6d6d697420696e61637469766520726571756573740000604082015260600190565b6020808252601b908201527f5369676e6174757265206d757374206d617463682073656e6465720000000000604082015260600190565b6020808252601c908201527f566f74696e6720746f6b656e2069737375616e6365206661696c656400000000604082015260600190565b60208082526015908201527f496e76616c69642070726f766964656420686173680000000000000000000000604082015260600190565b60208082526013908201527f496e76616c696420686173682072657665616c00000000000000000000000000604082015260600190565b60208082526018908201527f43616e206f6e6c79207265717565737420696e20706173740000000000000000604082015260600190565b6020808252601d908201527f4741542070657263656e74616765206d757374206265203c2031303025000000604082015260600190565b6020808252818101527f43616e2774207265736f6c766520756e7265736f6c7665642072657175657374604082015260600190565b60208082526019908201527f43616c6c6564206d757374206265207265676973746572656400000000000000604082015260600190565b6020808252601d908201527f43616e6e6f7420636f6d6d697420696e2072657665616c207068617365000000604082015260600190565b6020808252601e908201527f4f6e6c792063616c6c2074686973206966206e6f74206d696772617465640000604082015260600190565b60208082526015908201527f526f756e6420686173206e6f20736e617073686f740000000000000000000000604082015260600190565b6020808252601d908201527f526574726965766520666f7220766f7465732073616d6520726f756e64000000604082015260600190565b6020808252601d908201527f4f6e6c7920736e617073686f7420696e2072657665616c207068617365000000604082015260600190565b6020808252601f908201527f43616c6c6572206d757374206265206d69677261746564206164647265737300604082015260600190565b9051815260200190565b60008382526040602083015261281c6040830184613aa5565b9283526020830191909152604082015260600190565b93845291516020840152516040830152606082015260800190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112614439578283fd5b8084018035925067ffffffffffffffff831115614454578384fd5b6020019250503681900382131561446a57600080fd5b9250929050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126144a4578182fd5b9190910192915050565b60405181810167ffffffffffffffff811182821017156144cd57600080fd5b604052919050565b82818337506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461450357600080fd5b5056fea26469706673582212207ea4716a0cd8aa62d38d2362ed546b5e8c0642cfda3d9399a0d92131ce12dd9764736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "5202:26:65:-:0;217:689:71;5202:26:65;;217:689:71;5202:26:65;-1:-1:-1;;;5202:26:65;;5163:67;5192:37;5163:28;5202:26;5163:28;;;;;:67;;:::i;:::-;5126:104;;253:520:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:12:13;:28;;-1:-1:-1;;;;;;702:28:13;-1:-1:-1;;;;;702:28:13;;;;;575:12:71;;601:14;;629;;657:25;;696:12;;722:7;;702:28:13;;852:12:84;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:84;-1:-1:-1;;;;;874:18:84;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:84;-1:-1:-1;;907:43:84;;-1:-1:-1;;907:43:84;798:159;7400:29:65::1;7416:12;7400:10;:15;;;;;;:29;;;;:::i;:::-;7447:35;7480:1;7447:14;:32;;;;;;:35;;;;:::i;:::-;7439:78;;;;-1:-1:-1::0;;;7439:78:65::1;;;;;;;;;;;;;;;;;-1:-1:-1::0;7527:30:65;;:13:::1;:30:::0;7567;;:13:::1;:30:::0;7607:11:::1;:39:::0;;-1:-1:-1;;;;;7607:39:65;;::::1;-1:-1:-1::0;;;;;;7607:39:65;;::::1;;::::0;;;7656:6:::1;:33:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;7699:24:::1;:52:::0;-1:-1:-1;217:689:71;;-1:-1:-1;;;;;;;217:689:71;3363:265:85;3432:7;3615:4;3562:58;;;;;;;;;;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;735:104:82:-;822:10;735:104;:::o;440:238:64:-;629:1;615:11;:15;607:24;;;;;;641:30;;440:238::o;4831:152:10:-;4911:4;4948:19;4965:1;-1:-1:-1;;;;;4948:16:10;:19;:::i;:::-;:28;4934:10;;:42;;;-1:-1:-1;4831:152:10;;;;;:::o;722:135::-;782:15;;:::i;:::-;816:34;;;;;;;;825:24;436:6;825:1;:5;;;;;;:24;;;;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:10:o;2119:459:87:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:87;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:87;;;;;;;;;2570:1;2119:459;-1:-1:-1;;;2119:459:87:o;217:689:71:-;;;;;;;;;;;;;;:::o;179:350:-1:-;;305:4;293:9;288:3;284:19;280:30;277:2;;;-1:-1;;313:12;277:2;4592;4586:9;305:4;4618:17;;-1:-1;;;;;4678:34;;4714:22;;;4675:62;4672:2;;;-1:-1;;4740:12;4672:2;4592;4759:22;614:13;;422:86;;-1:-1;332:29;271:258;-1:-1;271:258;677:1187;;;;;;;;946:3;934:9;925:7;921:23;917:33;914:2;;;-1:-1;;953:12;914:2;620:6;614:13;1005:74;;1134:90;1216:7;1116:2;1196:9;1192:22;1134:90;;;1124:100;;1279:90;1361:7;1261:2;1341:9;1337:22;1279:90;;;1269:100;;1406:2;1460:9;1456:22;614:13;1414:74;;1525:3;1580:9;1576:22;83:13;101:33;128:5;101:33;;;1645:3;1696:22;;83:13;1534:74;;-1:-1;101:33;83:13;101:33;;;1765:3;1816:22;;83:13;1654:74;;-1:-1;101:33;83:13;101:33;;;1774:74;;;;908:956;;;;;;;;;;;3157:520;2327:66;2307:87;;2291:2;2413:12;;1960:58;;;;3640:12;;;3374:303;3684:416;3884:2;3898:47;;;2664:2;3869:18;;;4897:19;2700:32;4937:14;;;2680:53;2752:12;;;3855:245;4107:416;4307:2;4321:47;;;3003:2;4292:18;;;4897:19;3039:34;4937:14;;;3019:55;-1:-1;;;3094:12;;;3087:25;3131:12;;;4278:245;5584:117;-1:-1;;;;;5358:54;;5643:35;;5633:2;;5692:1;;5682:12;5633:2;5627:74;;;217:689:71;;;;;;",
  "deployedSourceMap": "217:689:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22294:3612:65;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15784:557;;;;;;;;;:::i;:::-;;29405:219;;;;;;;;;:::i;356:27:13:-;;;:::i;:::-;;;;;;;;5126:104:65;;;:::i;:::-;;;;;;;;1071:115:13;;;;;;;;;:::i;4658:39:65:-;;;:::i;28553:117::-;;;;;;;;;:::i;1431:256:13:-;;;:::i;4475:40:65:-;;;:::i;4994:30::-;;;:::i;19729:369::-;;;;;;;;;:::i;16941:2096::-;;;;;;;;;:::i;28050:144::-;;;:::i;21468:237::-;;;;;;;;;:::i;8951:1278::-;;;;;;;;;:::i;20526:543::-;;;;;;;;;:::i;1656:145:84:-;;;:::i;3994:33:65:-;;;:::i;27756:135::-;;;:::i;:::-;;;;;;;;26270:1277;;;:::i;:::-;;;;;;;;28969:137;;;;;;;;;:::i;12240:974::-;;;;;;;;;:::i;:::-;;;;;;;;29884:162;;;;;;;;;:::i;3649:39::-;;;;;;;;;:::i;:::-;;;;;;;;;;;1033:77:84;;;:::i;10684:215:65:-;;;;;;;;;:::i;:::-;;;;;;;;4742:30;;;:::i;4160:40::-;;;:::i;11361:404::-;;;;;;;;;:::i;14175:1106::-;;;;;;;;;:::i;779:125:71:-;;;:::i;:::-;;;;;;;;1950:240:84;;;;;;;;;:::i;22294:3612:65:-;22449:45;;:::i;:::-;22510:15;;:29;:15;:29;22506:129;;22577:15;;;;22563:10;:29;22555:69;;;;;;;;;;;;;;;;;;;;;;22644:17;22664:16;:14;:16::i;:::-;22644:36;-1:-1:-1;22708:43:65;:10;22644:36;22708:43;:32;:43;:::i;:::-;22698:7;:53;22690:81;;;;;;;;;;;;;;22782:19;22804:15;;;:6;:15;;;;;22858:27;;;;22846:39;;22895:42;;:::i;:::-;22940:98;;;;;;;;;;22973:11;;23011:16;;22973:55;;;;22940:98;;;;22973:11;;;:23;;:55;;22997:12;;22973:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22940:98;;22895:143;-1:-1:-1;23151:46:65;;:::i;:::-;23200:86;;;;;;;;;;23233:11;;23259:16;;23233:43;;;;23200:86;;;;23233:11;;;:25;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23200:86;;23151:135;-1:-1:-1;23296:45:65;;:::i;:::-;23344:23;;;;;;;;;:19;;;:23;;;:44;;23368:19;23344:44;:23;:44;:::i;:::-;23483:22;;;;;;;;;-1:-1:-1;23483:22:65;;;;;-1:-1:-1;23296:92:65;;-1:-1:-1;23516:2166:65;23540:10;:17;23536:1;:21;23516:2166;;;23578:33;23614:62;23631:10;23642:1;23631:13;;;;;;;;;;;;;;:24;;;23657:10;23668:1;23657:13;;;;;;;;;;;;;;:18;;;23614:16;:62::i;:::-;23753:28;;;;23690:33;23726:56;;;:26;;;:56;;;;;23578:98;;-1:-1:-1;23874:39:65;;23866:81;;;;;;;;;;;;;;23962:48;23983:12;23997;23962:20;:48::i;:::-;24029:42;;;:28;:42;;;;;;;;;;:53;;;24025:1491;;24107:8;;;;24025:1491;24140:9;24136:1380;;;24278:10;24289:1;24278:13;;;;;;;;;;;;;;:24;;;24269:7;24255:12;24238:88;;;24304:10;24315:1;24304:13;;;;;;;;;;;;;;:18;;;24324:1;24238:88;;;;;;;;;;;;;;;;24136:1380;;;24414:42;;;:28;:42;;;;;;;;;;:53;;;;;24368:100;;:30;;;:100;:45;:100;:::i;:::-;24347:1169;;;24756:33;;:::i;:::-;24792:144;24857:61;:12;:30;;:59;:61::i;:::-;24792:39;:15;24812:18;24792:39;:19;:39;:::i;:::-;:43;:144;:43;:144;:::i;:::-;24756:180;-1:-1:-1;24975:30:65;:18;24756:180;24975:30;:22;:30;:::i;:::-;24954:51;;25186:10;25197:1;25186:13;;;;;;;;;;;;;;:24;;;25157:7;25123:12;25085:220;;;25232:10;25243:1;25232:13;;;;;;;;;;;;;;:18;;;25272:6;:15;;;25085:220;;;;;;;;;;;;;;;;24347:1169;;;;25453:10;25464:1;25453:13;;;;;;;;;;;;;;:24;;;25444:7;25430:12;25413:88;;;25479:10;25490:1;25479:13;;;;;;;;;;;;;;:18;;;25499:1;25413:88;;;;;;;;;;;;;;;;24347:1169;25618:42;;;:28;:42;;;;;;;;;;;:53;;25611:60;-1:-1:-1;23516:2166:65;23559:3;;23516:2166;;;-1:-1:-1;25738:35:65;:18;25771:1;25738:35;:32;:35;:::i;:::-;25734:166;;;25797:11;;25828:27;;25797:59;;;;;:11;;;;;:16;;:59;;25814:12;;25828:27;25797:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25789:100;;;;;;;;;;;;;;22294:3612;;;;;;;;;;;:::o;15784:557::-;8345:15;;:29;:15;:29;8337:72;;;;;;;;;;;;;;15888:17:::1;15908:16;:14;:16::i;:::-;15888:36:::0;-1:-1:-1;15987:12:65::1;15942:41;:10;15973:9:::0;15942:41:::1;:30;:41;:::i;:::-;:57;;;;;;;;;15934:99;;;;;;;;;;;;;;16181:10;16132:59;;:45;16146:19;;16167:9;;16132:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;16132:13:65::1;::::0;-1:-1:-1;;;16132:45:65:i:1;:::-;:59;;;16124:99;;;;;;;;;;;;;;16233:15;16251:43;:10;16284:9:::0;16251:43:::1;:32;:43;:::i;:::-;16233:61;;16304:30;16326:7;16304:21;:30::i;:::-;8419:1;;15784:557:::0;;:::o;29405:219::-;1247:12:84;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;29511:30:65::1;:16:::0;29539:1:::1;29511:30;:27;:30;:::i;:::-;29503:72;;;;;;;;;;;;;;29585:32:::0;:13:::1;:32:::0;29405:219::o;356:27:13:-;;;;;;:::o;5126:104:65:-;;;;:::o;1071:115:13:-;873:3;849:12;:28;:12;841:37;;;;;;1145:12:::1;::::0;1139:40:::1;::::0;;;;1145:12:::1;::::0;;::::1;::::0;1139:34:::1;::::0;:40:::1;::::0;1174:4;;1139:40:::1;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1071:115:::0;:::o;4658:39:65:-;;;;:::o;28553:117::-;1247:12:84;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;28629:15:65::1;:34:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;28553:117::o;1431:256:13:-;1478:7;1501:12;;:28;:12;:28;1497:184;;1558:12;;;;;;;;;;;1552:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:43;;;;1497:184;-1:-1:-1;1626:3:13;1497:184;1431:256;:::o;4475:40:65:-;;;;:::o;4994:30::-;;;;;;:::o;19729:369::-;19896:34;19907:10;19919:4;19925;19896:10;:34::i;:::-;19941:15;19959:50;19992:16;:14;:16::i;:::-;19959:10;;:50;:32;:50;:::i;:::-;19941:68;;20059:10;20050:7;20038:10;20024:67;;;20071:4;20077:13;20024:67;;;;;;;;;;;;;;;;19729:369;;;;;:::o;16941:2096::-;8345:15;;:29;:15;:29;8337:72;;;;;;;;;;;;;;17106:17:::1;17126:16;:14;:16::i;:::-;17106:36:::0;-1:-1:-1;17205:12:65::1;17160:41;:10;17191:9:::0;17160:41:::1;:30;:41;:::i;:::-;:57;;;;;;;;;17152:99;;;;;;;;;;;;;;17402:15;17420:43;:10;17453:9:::0;17420:43:::1;:32;:43;:::i;:::-;17402:61;;17474:33;17510:34;17527:10;17539:4;17510:16;:34::i;:::-;17554:33;17590:35:::0;;;:26:::1;::::0;::::1;:35;::::0;;;;;;;17704:10:::1;17675:40:::0;;;;;;;;;17894:21;;17474:70;;-1:-1:-1;17590:35:65;;17886:67:::1;;;;;;;;;;;;;;18067:14;:21;;;18011:5;18018:4;18024:10;18036:4;18042:7;18051:10;17994:68;;;;;;;;;;;;;;;;;;;;;;;;;;;17984:79;;;;;;:104;17963:179;;;;;;;;;;;;;;18245:15;::::0;;;:6:::1;:15;::::0;;;;:26;18237:65:::1;;;;;;;;;;;;;;18350:18;18371:15:::0;;;:6:::1;:15;::::0;;;;:26;18408:28;;;18626:34:::1;;:::i;:::-;18663:68;::::0;;::::1;::::0;::::1;::::0;;;;18683:11:::1;::::0;:47;;;;18663:68;;;18683:11:::1;;:23;:47;18707:10;18719::::0;18683:47;;;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18663:68;;::::0;18626:105:::1;;18830:5;18819:17;;;;;;;;;;;::::0;;;;;::::1;::::0;;;;;;18809:28;;18819:17:::1;18809:28:::0;;::::1;::::0;18781:25:::1;::::0;;::::1;:56:::0;;;;18884:54:::1;::::0;:30;::::1;18923:5:::0;18930:7;18884:54:::1;:38;:54;:::i;:::-;18988:10;18979:7;18967:10;18954:76;;;19000:4;19006:5;19013:7;:16;;;18954:76;;;;;;;;;;;;;;;;;8419:1;;;;;;;16941:2096:::0;;;;:::o;28050:144::-;28111:7;28137:50;28170:16;:14;:16::i;28137:50::-;28130:57;;28050:144;:::o;21468:237::-;21549:9;21544:155;21564:18;;;21544:155;;;21603:85;21614:7;;21622:1;21614:10;;;;;;;;;;;;:21;;;21637:7;;21645:1;21637:10;;;;;;;;;;;;:15;;;21654:7;;21662:1;21654:10;;;;;;;;;;;;:16;;;21672:7;;21680:1;21672:10;;;;;;;;;;;;:15;;;21603:10;:85::i;:::-;21584:3;;21544:155;;;;21468:237;;:::o;8951:1278::-;7934:15;;:29;:15;:29;7930:345;;8001:15;;;;7987:10;:29;7979:73;;;;;;;;;;;;;;7930:345;;;8112:6;;:58;;;;;8083:17;;8112:6;;;:31;;:58;;8144:25;;8112:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8193:41;;;;;8083:88;;-1:-1:-1;8193:29:65;;;;;;:41;;8223:10;;8193:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8185:79;;;;;;;;;;;;;;7930:345;;9060:17:::1;9080:16;:14;:16::i;:::-;9060:36;;9122:9;9114:4;:17;;9106:54;;;;;;;;;;;;;;9178:25;:23;:25::i;:::-;:47;;;9226:10;9178:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9170:102;;;;;;;;;;;;;;9283:22;9308:37;9328:10;9340:4;9308:19;:37::i;:::-;9355:33;9391:29:::0;;;:13:::1;:29;::::0;;;;9283:62;;-1:-1:-1;9455:43:65::1;:10;9488:9:::0;9455:43:::1;:32;:43;:::i;:::-;9430:68;;9509:27;9539:47;9557:12;9571:14;9539:17;:47::i;:::-;9509:77:::0;-1:-1:-1;9618:26:65::1;9601:13;:43;;;;;;;;;9597:626;;;9806:19;9828:21;:14:::0;9847:1:::1;9828:21;:18;:21;:::i;:::-;9896:194;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;10048:20:::1;:27:::0;;9896:194;;;;;;-1:-1:-1;9864:29:65;;;:13:::1;:29:::0;;;;;;;:226;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;10104:41;;;;::::1;::::0;;;;::::1;::::0;;;10164:48;9806:43;;-1:-1:-1;9939:10:65;;9806:43;;10164:48:::1;::::0;::::1;::::0;9973:4;;10164:48:::1;;;;;;;;;;9597:626;;8284:1;;;;;8951:1278:::0;;:::o;20526:543::-;20611:9;20606:457;20626:18;;;20606:457;;;20669:7;;20677:1;20669:10;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;:36;20665:388;;-1:-1:-1;20665:388:65;;20725:67;20736:7;;20744:1;20736:10;;;;;;;;;;;;;;;;;;;;:21;20759:7;;20767:1;20759:10;;;;;;;;;;;;;;;;;;;;:15;;;20776:7;;20784:1;20776:10;;;;;;;;;;;;;;;;;;;;:15;;;20725:10;:67::i;:::-;20665:388;;;20831:207;20879:7;;20887:1;20879:10;;;;;;;;;;;;;;;;;;;;:21;20922:7;;20930:1;20922:10;;;;;;;;;;;;;;;;;;;;:15;;;20959:7;;20967:1;20959:10;;;;;;;;;;;;;;;;;;;;:15;;;20996:7;;21004:1;20996:10;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;20831:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20831:26:65;;-1:-1:-1;;;20831:207:65:i;:::-;20646:3;;20606:457;;1656:145:84;1247:12;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;1725:40:::1;1746:6;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;;::::1;::::0;;1656:145::o;3994:33:65:-;;;;:::o;27756:135::-;27812:5;27836:48;27867:16;:14;:16::i;:::-;27836:10;;:48;:30;:48;:::i;26270:1277::-;26332:23;26367:17;26387:16;:14;:16::i;:::-;26367:36;-1:-1:-1;26413:22:65;26438:43;:10;26367:36;26438:43;:32;:43;:::i;:::-;26758:20;:27;26413:68;;-1:-1:-1;26700:34:65;;26737:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;26700:86:65;-1:-1:-1;26796:21:65;;26832:477;26856:20;:27;26852:31;;26832:477;;;26904:33;26940:13;:38;26954:20;26975:1;26954:23;;;;;;;;;;;;;;;;26940:38;;;;;;;;;;;26904:74;;27047:20;26996:71;;;;;;;;:47;27014:12;27028:14;26996:17;:47::i;:::-;:71;;;;;;;;;26992:307;;;27115:136;;;;;;;;27164:12;:23;;;27115:136;;;;27215:12;:17;;;27115:136;;;27087:10;27098:13;27087:25;;;;;;;;;;;;;;;;;:164;27269:15;;;;;26992:307;-1:-1:-1;26885:3:65;;26832:477;;;;27319:39;27382:13;27361:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;27319:77:65;-1:-1:-1;27411:9:65;27406:103;27430:13;27426:1;:17;27406:103;;;27485:10;27496:1;27485:13;;;;;;;;;;;;;;27464:15;27480:1;27464:18;;;;;;;;;;;;;;;;;:34;27445:3;;27406:103;;;-1:-1:-1;27525:15:65;-1:-1:-1;;;;;26270:1277:65;:::o;28969:137::-;1247:12:84;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;29067:32:65;:13:::1;:32:::0;28969:137::o;12240:974::-;12328:21;12361:35;12418:8;:15;12399:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12361:73;;12444:22;12469:50;12502:16;:14;:16::i;12469:50::-;12444:75;-1:-1:-1;12534:9:65;12529:649;12553:8;:15;12549:1;:19;12529:649;;;12589:33;12625:58;12642:8;12651:1;12642:11;;;;;;;;;;;;;;:22;;;12666:8;12675:1;12666:11;;;;;;;12625:58;12589:94;;12698:20;12721:47;12739:12;12753:14;12721:17;:47::i;:::-;12698:70;-1:-1:-1;12916:20:65;12906:6;:30;;;;;;;;;12902:220;;;12991:14;12956:13;12970:1;12956:16;;;;;;;;;;;;;;:32;;:49;;;;;12902:220;;;13079:12;:28;;;13044:13;13058:1;13044:16;;;;;;;;;;;;;;:32;;:63;;;;;12902:220;13161:6;13135:13;13149:1;13135:16;;;;;;;;;;;;;;:23;;:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12570:3:65;;12529:649;;;-1:-1:-1;13194:13:65;;-1:-1:-1;;12240:974:65;;;;:::o;29884:162::-;1247:12:84;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;29985:24:65::1;:54:::0;29884:162::o;3649:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1033:77:84:-;1097:6;;;;1033:77;:::o;10684:215:65:-;7934:15;;10793:4;;7934:29;:15;:29;7930:345;;8001:15;;;;7987:10;:29;7979:73;;;;;;;;;;;;;;7930:345;;;8112:6;;:58;;;;;8083:17;;8112:6;;;:31;;:58;;8144:25;;8112:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8193:41;;;;;8083:88;;-1:-1:-1;8193:29:65;;;;;;:41;;8223:10;;8193:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8185:79;;;;;;;;;;;;;;7930:345;;10810:14:::1;10832:34;10849:10;10861:4;10832:16;:34::i;:::-;-1:-1:-1::0;10809:57:65;;-1:-1:-1;;;8284:1:65::1;10684:215:::0;;;;:::o;4742:30::-;;;;;;:::o;4160:40::-;;;;:::o;11361:404::-;7934:15;;11510:6;;7934:29;:15;:29;7930:345;;8001:15;;;;7987:10;:29;7979:73;;;;;;;;;;;;;;7930:345;;;8112:6;;:58;;;;;8083:17;;8112:6;;;:31;;:58;;8144:25;;8112:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8193:41;;;;;8083:88;;-1:-1:-1;8193:29:65;;;;;;:41;;8223:10;;8193:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8185:79;;;;;;;;;;;;;;7930:345;;11533:14:::1;11549:12:::0;11563:21:::1;11588:34;11605:10;11617:4;11588:16;:34::i;:::-;11532:90;;;;;;11717:9;11728:7;11709:27;;;;;;;;;;;;;;;14175:1106:::0;8345:15;;:29;:15;:29;8337:72;;;;;;;;;;;;;;14327:18;14319:52:::1;;;;;;;;;;;;;;14446:17;14466:16;:14;:16::i;:::-;14446:36:::0;-1:-1:-1;14545:12:65::1;14500:41;:10;14531:9:::0;14500:41:::1;:30;:41;:::i;:::-;:57;;;;;;;;;14492:99;;;;;;;;;;;;;;14684:22;14709:43;:10;14742:9:::0;14709:43:::1;:32;:43;:::i;:::-;14684:68;;14763:33;14799:34;14816:10;14828:4;14799:16;:34::i;:::-;14763:70:::0;-1:-1:-1;14915:20:65::1;14864:47;14882:12;14896:14;14864:17;:47::i;:::-;:71;;;;;;;;;14843:148;;;;;;;;;;;;;;15002:28;::::0;::::1;:45:::0;;;15057:33:::1;15093:42:::0;;;:26:::1;::::0;::::1;:42;::::0;;;;;;;15174:10:::1;15145:40:::0;;;;;;;;;;;:54;;;15215:59;15257:10;;15033:14;;15215:59:::1;::::0;::::1;::::0;15269:4;;15215:59:::1;;;;;;;;;;8419:1;;;;14175:1106:::0;;;:::o;779:125:71:-;842:16;877:20;870:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:125;:::o;1950:240:84:-;1247:12;:10;:12::i;:::-;1237:6;;:22;:6;;;:22;;;1229:67;;;;;;;;;;;;;;2038:22:::1;::::0;::::1;2030:73;;;;;;;;;;;;;;2139:6;::::0;2118:38:::1;::::0;::::1;::::0;;::::1;::::0;2139:6:::1;::::0;2118:38:::1;::::0;2139:6:::1;::::0;2118:38:::1;2166:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1950:240::o;3363:265:85:-;3432:7;3615:4;3562:58;;;;;;;;;;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;440:238:64:-;629:1;615:11;:15;607:24;;;;;;641:30;;440:238::o;4831:152:10:-;4911:4;4948:19;4965:1;4948:16;:19::i;:::-;:28;4934:10;;:42;;;-1:-1:-1;4831:152:10;;;;:::o;2119:459:87:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:87;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;;;;;;;;;;;2570:1;2119:459;-1:-1:-1;;;2119:459:87:o;1269:262:64:-;1363:7;;1404:75;1433:44;1425:53;1404:16;;;:75;:20;:75;:::i;:::-;1382:97;-1:-1:-1;1496:28:64;:11;1382:97;1496:28;:15;:28;:::i;:::-;1489:35;1269:262;-1:-1:-1;;;;1269:262:64:o;7876:650:10:-;7950:15;;:::i;:::-;8463:56;;;;;;;;;8487:10;;8472;;8463:56;;436:6;;8472:26;;;:14;:26;:::i;:::-;:46;;;;;;8463:56;;8456:63;7876:650;-1:-1:-1;;;7876:650:10:o;31573:180:65:-;31655:20;31694:13;:52;31708:37;31728:10;31740:4;31708:19;:37::i;:::-;31694:52;;;;;;;;;;;31687:59;;31573:180;;;;:::o;32829:980::-;32951:18;;;;5108:11;32951:30;32947:67;;;32997:7;;32947:67;33024:15;33041:20;33065:112;33126:41;33138:12;:28;;;33126:11;:41::i;:::-;33065:30;;;;:112;:47;:112;:::i;:::-;33023:154;;;;33195:10;33187:55;;;;;;;;;;;;;;33345:20;:27;;:31;;;;33325:17;;33426:13;;33325:17;;33345:31;;33440;;;;;;;;;;;;;;33426:46;;;;;;;;;;;33386:86;;33507:12;:18;;;33482:16;:22;;:43;;;;33578:20;33599:9;33578:31;;;;;;;;;;;;;;;;33535:20;33556:12;:18;;;33535:40;;;;;;;;;;;;;;;;;:74;33619:20;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33656:18;;;:29;33744:23;;33714:28;;;;33619:26;33769:17;;;33700:102;;;;;;33788:13;;33700:102;;;;;;;;;;32829:980;;;;;;;:::o;3605:165:61:-;3689:4;3745;:16;;;3734:28;;;;;;;;;;;;;;;;;;;;;;3724:39;;;;;;3712:8;:51;3705:58;;3605:165;;;;:::o;4153:168::-;4233:26;;:::i;:::-;-1:-1:-1;4297:16:61;;;;4278:18;:36;;;;;;;;;;;;4271:43;;;;;;;;;;;;4153:168::o;10292:634:10:-;10366:15;;:::i;:::-;10860:59;;;;;;;;;10907:10;;10869;;10860:59;;10869:49;;:33;;436:6;10869:33;:14;:33;:::i;:::-;:37;:49;:37;:49;:::i;:::-;10860:59;;10853:66;10292:634;-1:-1:-1;;;10292:634:10:o;6123:151::-;6197:15;;:::i;:::-;6231:36;;;;;;;;;6255:10;;6240;;6231:36;;6240:26;;:10;:26;:14;:26;:::i;1938:147::-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:10;;;;:::o;2362:411:64:-;2454:21;2660:92;2706:44;2676:16;;2660:33;;:11;;:33;:15;:33;:::i;:::-;:37;:92;:37;:92;:::i;:::-;2621:145;;;;;;;1031:2068:85;1109:7;1170:9;:16;1190:2;1170:22;1166:94;;1208:41;;;;;;;;;;;1166:94;1610:4;1595:20;;1589:27;1655:4;1640:20;;1634:27;1708:4;1693:20;;1687:27;1326:9;1679:36;2626:66;2613:79;;2609:154;;;2708:44;;;;;;;;;;;2609:154;2777:1;:7;;2782:2;2777:7;;:18;;;;;2788:1;:7;;2793:2;2788:7;;2777:18;2773:93;;;2811:44;;;;;;;;;;;2773:93;2960:14;2977:24;2987:4;2993:1;2996;2999;2977:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:24:85;;;;;;-1:-1:-1;;3019:20:85;;;3011:57;;;;;;;;;;;;;;3086:6;1031:2068;-1:-1:-1;;;;;;1031:2068:85:o;31922:901:65:-;31988:19;32010:15;;;:6;:15;;;;;32123:16;;32119:698;;32238:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32219:41;;:16;32357:15;;;:6;:15;;;;;;;;32389:13;32357:45;:29;;;:45;32525:13;32493:45;:29;;:45;32768:24;;32707:99;;:39;:10;32364:7;32707:39;:30;:39;:::i;:::-;:43;:99;:43;:99;:::i;:::-;32667:15;;;;:6;:15;;;;;:37;;:139;31922:901;;:::o;735:104:82:-;822:10;735:104;:::o;3874:144:10:-;3947:4;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:10;;;;:::o;1261:507:61:-;1423:19;;;;;;;;;:15;;;:19;;;:33;;1443:12;1423:33;:19;:33;:::i;:::-;1405:51;:15;;;:51;;1498:29;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;1532:12;1498:47;:33;:47;:::i;:::-;1466:18;:29;;;;;;;;;;:79;;;;1585:16;;;;1572:29;;;;;:126;;-1:-1:-1;1680:16:61;;;;1661:18;:36;;;;;;;;;;;1617:81;;;;;;;;;;;:29;;;;;;;;;;:43;;;;;;;;;;;:81;;;:43;:81;:::i;:::-;1555:207;;;-1:-1:-1;1723:16:61;;;;;:28;1261:507::o;35533:231:65:-;35687:6;;:69;;;;;35590:49;;35687:6;;;:31;;:69;;35719:36;;35687:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31759:157;31844:7;31891:10;31903:4;31880:28;;;;;;;;;;;;;;;;;;;;;;;31870:39;;;;;;31863:46;;31759:157;;;;:::o;34614:913::-;34746:13;34779:12;:28;;;34811:1;34779:33;34775:746;;;-1:-1:-1;34835:26:65;34828:33;;34775:746;34913:14;34882:12;:28;;;:45;34878:643;;;35006:28;;;;34943:33;34979:56;;;:26;;;:56;;;;;;35071:120;;35136:41;;:11;:41::i;:::-;35071:30;;;;:120;:47;:120;:::i;:::-;35049:142;;;35212:10;:58;;35250:20;35212:58;;;35225:22;35212:58;35205:65;;;;;;34878:643;35323:14;35291:12;:28;;;:46;35287:234;;;-1:-1:-1;35360:20:65;35353:27;;35287:234;-1:-1:-1;35490:20:65;35483:27;;834:176:87;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;30418:1149:65;30537:4;30555:6;30575:13;30613:33;30649:34;30666:10;30678:4;30649:16;:34::i;:::-;30613:70;;30693:22;30718:50;30751:16;:14;:16::i;30718:50::-;30693:75;;30779:27;30809:47;30827:12;30841:14;30809:17;:47::i;:::-;30779:77;-1:-1:-1;30887:20:65;30870:13;:37;;;;;;;;;30866:695;;;-1:-1:-1;;30923:51:65;;;;;;;;;;;;;;;;;30931:5;;-1:-1:-1;30931:5:65;;-1:-1:-1;30923:51:65;-1:-1:-1;30923:51:65;;-1:-1:-1;30923:51:65;30866:695;31012:22;30995:13;:39;;;;;;;;;30991:570;;;31113:28;;;;31050:33;31086:56;;;:26;;;:56;;;;;;31183:120;;31248:41;;:11;:41::i;31183:120::-;31317:32;;;;;;;;;-1:-1:-1;31317:32:65;;31325:4;;-1:-1:-1;31156:147:65;;-1:-1:-1;31317:32:65;-1:-1:-1;31317:32:65;;-1:-1:-1;;;;;;31317:32:65;30991:570;31387:20;31370:13;:37;;;;;;;;;31366:195;;;-1:-1:-1;;31423:50:65;;;;;;;;;;;;;;;;;31431:5;;-1:-1:-1;31431:5:65;;-1:-1:-1;31423:50:65;-1:-1:-1;31423:50:65;;-1:-1:-1;31423:50:65;31366:195;-1:-1:-1;;31504:46:65;;;;;;;;;;;;;;;;;31512:5;;-1:-1:-1;31512:5:65;;-1:-1:-1;31504:46:65;-1:-1:-1;31504:46:65;;-1:-1:-1;31504:46:65;30418:1149;;;;;;:::o;722:135:10:-;782:15;;:::i;:::-;816:34;;;;;;;;;;825:24;:1;436:6;825:24;:5;:24;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:10:o;3033:130:87:-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;33815:793:65:-;33875:26;;:::i;:::-;33913:18;33934:15;;;:6;:15;;;;;:26;33974:15;33970:159;;-1:-1:-1;;34089:29:65;;;;;;;;;5108:11;34089:29;;34082:36;;33970:159;34316:44;;:::i;:::-;34363:58;;;;;;;;;;34383:11;;:37;;;;34363:58;;;34383:11;;:25;:37;34409:10;34383:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34363:58;;34571:15;;;;:6;:15;;;;;;;;;34549:52;;;;;;;;34571:29;;34549:52;;;34316:105;;-1:-1:-1;34549:52:65;;34316:105;;34549:52;:21;:52;:::i;2535:699:61:-;2672:15;2689:12;2717:40;;:::i;:::-;2760;2796:3;2760:31;2788:2;2760:27;:31::i;:::-;:35;:40;:35;:40;:::i;:::-;2828:29;;;;;;;;;:15;;;:29;;;2717:83;;-1:-1:-1;2828:47:61;;2858:16;2828:47;:29;:47;:::i;:::-;:149;;;;-1:-1:-1;2891:57:61;;;;;;;;;2932:15;;;2891:57;;;2910:16;;;;-1:-1:-1;2891:36:61;;;;;;;;;:40;;;;;;;;;;;;:86;;2963:13;;2891:57;;:40;:57;:40;:57;:::i;:::-;:71;:86;:71;:86;:::i;:::-;2811:417;;;3126:4;3113:17;;3152:4;:16;;;3144:24;;2811:417;;;3212:5;3199:18;;2811:417;2535:699;;;;;;:::o;4420:128:87:-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;:3;:37::i;1796:259:64:-;1884:7;;1925:75;1954:44;1946:53;;1925:75;1903:97;-1:-1:-1;2017:31:64;2033:14;:7;2045:1;2033:14;:11;:14;:::i;:::-;2017:11;;:31;:15;:31;:::i;1632:137:10:-;1752:10;1739;;:23;;1632:137::o;3638:338:87:-;3724:7;3824:12;3817:5;3809:28;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:87:o;11224:134:10:-;11290:15;;:::i;:::-;11324:27;;;;;;;;;11333:10;;11324:27;;11333:17;;11348:1;11333:17;:14;:17;:::i;5012:163:87:-;5098:7;5133:12;5125:6;5117:29;;;;;;;;;;;;;;;;5167:1;5163;:5;;;;;;;5012:163;-1:-1:-1;;;;5012:163:87:o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;766:806::-;;916:3;909:4;901:6;897:17;893:27;883:2;;-1:-1;;924:12;883:2;971:6;958:20;51725:18;51717:6;51714:30;51711:2;;;-1:-1;;51747:12;51711:2;51792:4;993:113;51792:4;;51784:6;51780:17;51845:15;993:113;;;1134:21;;;984:122;-1:-1;1191:14;;;1166:17;;;1292:4;1280:17;;;1271:27;;;;1268:36;-1:-1;1265:2;;;1317:1;;1307:12;1265:2;1342:1;1327:239;1352:6;1349:1;1346:13;1327:239;;;1432:70;1498:3;1486:10;1432:70;;;1420:83;;1517:14;;;;1545;;;;1374:1;1367:9;1327:239;;;1331:14;;;;;;876:696;;;;;3265:481;;3387:4;3375:9;3370:3;3366:19;3362:30;3359:2;;;-1:-1;;3395:12;3359:2;3423:20;3387:4;3423:20;;;3414:29;;2222:6;2209:20;3513:16;3506:75;3642:2;3700:9;3696:22;4188:20;3642:2;3661:5;3657:16;3650:75;3353:393;;;;;4399:241;;4503:2;4491:9;4482:7;4478:23;4474:32;4471:2;;;-1:-1;;4509:12;4471:2;85:6;72:20;97:33;124:5;97:33;;4647:263;;4762:2;4750:9;4741:7;4737:23;4733:32;4730:2;;;-1:-1;;4768:12;4730:2;226:6;220:13;238:33;265:5;238:33;;4917:693;;;;5113:2;5101:9;5092:7;5088:23;5084:32;5081:2;;;-1:-1;;5119:12;5081:2;85:6;72:20;97:33;124:5;97:33;;;5171:63;-1:-1;5271:2;5310:22;;4188:20;;-1:-1;5407:2;5392:18;;5379:32;5431:18;5420:30;;5417:2;;;-1:-1;;5453:12;5417:2;5483:111;5586:7;5577:6;5566:9;5562:22;5483:111;;;5473:121;;;5075:535;;;;;;5617:459;;;5787:2;5775:9;5766:7;5762:23;5758:32;5755:2;;;-1:-1;;5793:12;5755:2;5851:17;5838:31;5889:18;;5881:6;5878:30;5875:2;;;-1:-1;;5911:12;5875:2;6043:6;6032:9;6028:22;488:3;481:4;473:6;469:17;465:27;455:2;;-1:-1;;496:12;455:2;539:6;526:20;516:30;;5889:18;558:6;555:30;552:2;;;-1:-1;;588:12;552:2;683:3;5787:2;;667:6;663:17;624:6;649:32;;646:41;643:2;;;-1:-1;;690:12;643:2;5787;620:17;;5939:121;;-1:-1;5749:327;;-1:-1;;;;5749:327;6083:443;;6245:2;6233:9;6224:7;6220:23;6216:32;6213:2;;;-1:-1;;6251:12;6213:2;6309:17;6296:31;6347:18;6339:6;6336:30;6333:2;;;-1:-1;;6369:12;6333:2;6399:111;6502:7;6493:6;6482:9;6478:22;6399:111;;6533:451;;;6699:2;6687:9;6678:7;6674:23;6670:32;6667:2;;;-1:-1;;6705:12;6667:2;6763:17;6750:31;6801:18;;6793:6;6790:30;6787:2;;;-1:-1;;6823:12;6787:2;6951:6;6940:9;6936:22;1777:3;1770:4;1762:6;1758:17;1754:27;1744:2;;-1:-1;;1785:12;1744:2;1828:6;1815:20;1805:30;;6801:18;1847:6;1844:30;1841:2;;;-1:-1;;1877:12;1841:2;1972:3;6699:2;1964:4;1956:6;1952:17;1913:6;1938:32;;1935:41;1932:2;;;-1:-1;;1979:12;6991:257;;7103:2;7091:9;7082:7;7078:23;7074:32;7071:2;;;-1:-1;;7109:12;7071:2;2088:6;2082:13;58672:5;55297:13;55290:21;58650:5;58647:32;58637:2;;-1:-1;;58683:12;7255:366;;;7376:2;7364:9;7355:7;7351:23;7347:32;7344:2;;;-1:-1;;7382:12;7344:2;-1:-1;;2209:20;;;7534:2;7573:22;;;4188:20;;-1:-1;7338:283;7628:491;;;;7766:2;7754:9;7745:7;7741:23;7737:32;7734:2;;;-1:-1;;7772:12;7734:2;-1:-1;;2209:20;;;7924:2;7963:22;;4188:20;;-1:-1;8032:2;8071:22;;;2209:20;;7728:391;-1:-1;7728:391;8126:721;;;;;8290:3;8278:9;8269:7;8265:23;8261:33;8258:2;;;-1:-1;;8297:12;8258:2;2222:6;2209:20;8349:63;;8449:2;8492:9;8488:22;4188:20;8457:63;;8557:2;8600:9;8596:22;2209:20;8565:63;;8693:2;8682:9;8678:18;8665:32;8717:18;;8709:6;8706:30;8703:2;;;-1:-1;;8739:12;8703:2;8814:6;8803:9;8799:22;2739:3;2732:4;2724:6;2720:17;2716:27;2706:2;;-1:-1;;2747:12;2706:2;2794:6;2781:20;2767:34;;8717:18;52012:6;52009:30;52006:2;;;-1:-1;;52042:12;52006:2;2816:64;8449:2;52115:9;2732:4;52100:6;52096:17;52092:33;52173:15;2816:64;;;2807:73;;2900:6;2893:5;2886:21;3004:3;8449:2;2995:6;2928;2986:16;;2983:25;2980:2;;;-1:-1;;3011:12;2980:2;3031:41;3065:6;8449:2;2962:5;2958:16;8449:2;2928:6;2924:17;3031:41;;;-1:-1;8252:595;;;;-1:-1;8252:595;;-1:-1;;;8252:595;8854:613;;;;;9007:3;8995:9;8986:7;8982:23;8978:33;8975:2;;;-1:-1;;9014:12;8975:2;-1:-1;;2209:20;;;9166:2;9205:22;;4188:20;;-1:-1;9274:2;9312:22;;3152:20;;9381:2;9419:22;3152:20;;-1:-1;8969:498;-1:-1;8969:498;9474:365;;;9597:2;9585:9;9576:7;9572:23;9568:32;9565:2;;;-1:-1;;9603:12;9565:2;9661:17;9648:31;9699:18;;9691:6;9688:30;9685:2;;;-1:-1;;9721:12;9685:2;9806:6;9795:9;9791:22;2407:3;2400:4;2392:6;2388:17;2384:27;2374:2;;-1:-1;;2415:12;2374:2;2458:6;2445:20;2435:30;;9699:18;2477:6;2474:30;2471:2;;;-1:-1;;2507:12;2471:2;2602:3;9597:2;2582:17;2543:6;2568:32;;2565:41;2562:2;;;-1:-1;;2609:12;9846:293;;9976:2;9964:9;9955:7;9951:23;9947:32;9944:2;;;-1:-1;;9982:12;9944:2;3937:20;9976:2;3937:20;;;4188;;4018:75;;-1:-1;4025:16;9938:201;-1:-1;9938:201;10146:241;;10250:2;10238:9;10229:7;10225:23;10221:32;10218:2;;;-1:-1;;10256:12;10218:2;-1:-1;4188:20;;10212:175;-1:-1;10212:175;10394:263;;10509:2;10497:9;10488:7;10484:23;10480:32;10477:2;;;-1:-1;;10515:12;10477:2;-1:-1;4336:13;;10471:186;-1:-1;10471:186;15223:343;;15365:5;52846:12;54036:6;54031:3;54024:19;-1:-1;57382:101;57396:6;57393:1;57390:13;57382:101;;;54073:4;57463:11;;;;;57457:18;57444:11;;;;;57437:39;57411:10;57382:101;;;57498:6;57495:1;57492:13;57489:2;;;-1:-1;54073:4;57554:6;54068:3;57545:16;;57538:27;57489:2;-1:-1;58122:2;58102:14;58118:7;58098:28;15522:39;;;;54073:4;15522:39;;15313:253;-1:-1;;15313:253;28885:972;14895:37;;;29260:2;29251:12;;14895:37;;;;58213:2;58209:14;;;;;;29360:12;;;11720:74;29487:12;;;14895:37;29598:12;;;14895:37;29709:12;;;14895:37;29820:12;;;29153:704;29864:520;17801:66;17781:87;;17765:2;17887:12;;14895:37;;;;30347:12;;;30081:303;30391:222;55839:42;55828:54;;;;11877:37;;30518:2;30503:18;;30489:124;30865:349;55839:42;55828:54;;;;11545:58;;31200:2;31185:18;;14895:37;31028:2;31013:18;;30999:215;31561:370;31738:2;31752:47;;;52846:12;;31723:18;;;54024:19;;;31561:370;;31738:2;52320:14;;;;54064;;;;31561:370;12365:260;12390:6;12387:1;12384:13;12365:260;;;12451:13;;14895:37;;53585:14;;;;10818;;;;12412:1;12405:9;12365:260;;;-1:-1;31805:116;;31709:222;-1:-1;;;;;;31709:222;31938:502;32181:2;32195:47;;;52846:12;;32166:18;;;54024:19;;;31938:502;;32181:2;54064:14;;;;;;52320;;;31938:502;13319:359;13344:6;13341:1;13338:13;13319:359;;;13405:13;;27132:23;;14895:37;;27292:16;;27286:23;27363:14;;;14895:37;11132:14;;;;53585;;;;13366:1;13359:9;13319:359;;;-1:-1;32248:182;;32152:288;-1:-1;;;;;;;32152:288;32447:494;32686:2;32700:47;;;52846:12;;32671:18;;;54024:19;;;32447:494;;32686:2;54064:14;;;;;;52320;;;32447:494;14340:353;14365:6;14362:1;14359:13;14340:353;;;14432:6;14426:13;27688:16;27682:23;58438:1;58431:5;58428:12;58418:2;;58444:9;58418:2;15977:67;;27870:16;;27864:23;27941:14;;;14895:37;11438:14;;;;53585;;;;14387:1;14380:9;14340:353;;32948:210;55297:13;;55290:21;14788:34;;33069:2;33054:18;;33040:118;33165:222;14895:37;;;33292:2;33277:18;;33263:124;33394:333;14895:37;;;33713:2;33698:18;;14895:37;33549:2;33534:18;;33520:207;33734:548;14895:37;;;56044:4;56033:16;;;;34102:2;34087:18;;28838:35;34185:2;34170:18;;14895:37;34268:2;34253:18;;14895:37;33941:3;33926:19;;33912:370;34560:240;34696:2;34681:18;;58321:1;58311:12;;58301:2;;58327:9;58301:2;15828:59;;;34667:133;;35032:310;;35179:2;35200:17;35193:47;35254:78;35179:2;35168:9;35164:18;35318:6;35254:78;;35349:416;35549:2;35563:47;;;17056:2;35534:18;;;54024:19;17092:26;54064:14;;;17072:47;17138:12;;;35520:245;35772:416;35972:2;35986:47;;;17389:2;35957:18;;;54024:19;17425:33;54064:14;;;17405:54;17478:12;;;35943:245;36195:416;36395:2;36409:47;;;18138:2;36380:18;;;54024:19;18174:30;54064:14;;;18154:51;18224:12;;;36366:245;36618:416;36818:2;36832:47;;;18475:2;36803:18;;;54024:19;18511:34;54064:14;;;18491:55;18580:8;18566:12;;;18559:30;18608:12;;;36789:245;37041:416;37241:2;37255:47;;;18859:2;37226:18;;;54024:19;18895:29;54064:14;;;18875:50;18944:12;;;37212:245;37464:416;37664:2;37678:47;;;19195:2;37649:18;;;54024:19;19231:31;54064:14;;;19211:52;19282:12;;;37635:245;37887:416;38087:2;38101:47;;;19533:2;38072:18;;;54024:19;19569:34;54064:14;;;19549:55;19638:4;19624:12;;;19617:26;19662:12;;;38058:245;38310:416;38510:2;38524:47;;;19913:2;38495:18;;;54024:19;19949:29;54064:14;;;19929:50;19998:12;;;38481:245;38733:416;38933:2;38947:47;;;20249:2;38918:18;;;54024:19;20285:17;54064:14;;;20265:38;20322:12;;;38904:245;39156:416;39356:2;39370:47;;;20573:2;39341:18;;;54024:19;20609:34;54064:14;;;20589:55;20678:4;20664:12;;;20657:26;20702:12;;;39327:245;39579:416;39779:2;39793:47;;;20953:2;39764:18;;;54024:19;20989:32;54064:14;;;20969:53;21041:12;;;39750:245;40002:416;40202:2;40216:47;;;21292:2;40187:18;;;54024:19;21328:34;54064:14;;;21308:55;21397:3;21383:12;;;21376:25;21420:12;;;40173:245;40425:416;40625:2;40639:47;;;40610:18;;;54024:19;21707:34;54064:14;;;21687:55;21761:12;;;40596:245;40848:416;41048:2;41062:47;;;22012:2;41033:18;;;54024:19;22048:32;54064:14;;;22028:53;22100:12;;;41019:245;41271:416;41471:2;41485:47;;;22351:2;41456:18;;;54024:19;22387:29;54064:14;;;22367:50;22436:12;;;41442:245;41694:416;41894:2;41908:47;;;22687:2;41879:18;;;54024:19;22723:30;54064:14;;;22703:51;22773:12;;;41865:245;42117:416;42317:2;42331:47;;;23024:2;42302:18;;;54024:19;23060:23;54064:14;;;23040:44;23103:12;;;42288:245;42540:416;42740:2;42754:47;;;23354:2;42725:18;;;54024:19;23390:21;54064:14;;;23370:42;23431:12;;;42711:245;42963:416;43163:2;43177:47;;;23682:2;43148:18;;;54024:19;23718:26;54064:14;;;23698:47;23764:12;;;43134:245;43386:416;43586:2;43600:47;;;24015:2;43571:18;;;54024:19;24051:31;54064:14;;;24031:52;24102:12;;;43557:245;43809:416;44009:2;44023:47;;;43994:18;;;54024:19;24389:34;54064:14;;;24369:55;24443:12;;;43980:245;44232:416;44432:2;44446:47;;;24694:2;44417:18;;;54024:19;24730:27;54064:14;;;24710:48;24777:12;;;44403:245;44655:416;44855:2;44869:47;;;25028:2;44840:18;;;54024:19;25064:31;54064:14;;;25044:52;25115:12;;;44826:245;45078:416;45278:2;45292:47;;;25366:2;45263:18;;;54024:19;25402:32;54064:14;;;25382:53;25454:12;;;45249:245;45501:416;45701:2;45715:47;;;25705:2;45686:18;;;54024:19;25741:23;54064:14;;;25721:44;25784:12;;;45672:245;45924:416;46124:2;46138:47;;;26035:2;46109:18;;;54024:19;26071:31;54064:14;;;26051:52;26122:12;;;46095:245;46347:416;46547:2;46561:47;;;26373:2;46532:18;;;54024:19;26409:31;54064:14;;;26389:52;26460:12;;;46518:245;46770:416;46970:2;46984:47;;;26711:2;46955:18;;;54024:19;26747:33;54064:14;;;26727:54;26800:12;;;46941:245;47193:326;28262:23;;14895:37;;47372:2;47357:18;;47343:176;47755:417;;14925:5;14902:3;14895:37;47928:2;48046;48035:9;48031:18;48024:48;48086:76;47928:2;47917:9;47913:18;48148:6;48086:76;;48515:440;14895:37;;;48858:2;48843:18;;14895:37;;;;48941:2;48926:18;;14895:37;48696:2;48681:18;;48667:288;49318:764;14895:37;;;28262:23;;49850:2;49835:18;;14895:37;28262:23;49985:2;49970:18;;14895:37;50068:2;50053:18;;14895:37;49633:3;49618:19;;49604:478;50429:506;;;50564:11;50551:25;50615:48;50639:8;50623:14;50619:29;50615:48;50595:18;50591:73;50581:2;;-1:-1;;50668:12;50581:2;50709:18;50699:8;50695:33;50762:4;50749:18;50739:28;;50787:18;50779:6;50776:30;50773:2;;;-1:-1;;50809:12;50773:2;50654:4;50837:13;;-1:-1;;50623:14;50869:38;;;50859:49;;50856:2;;;50921:1;;50911:12;50856:2;50519:416;;;;;;50942:321;;51089:11;51076:25;51140:48;51164:8;51148:14;51144:29;51140:48;51120:18;51116:73;51106:2;;-1:-1;;51193:12;51106:2;51220:33;;;;;51044:219;-1:-1;;51044:219;51270:256;51332:2;51326:9;51358:17;;;51433:18;51418:34;;51454:22;;;51415:62;51412:2;;;51490:1;;51480:12;51412:2;51332;51499:22;51310:216;;-1:-1;51310:216;57156:145;57237:6;57232:3;57227;57214:30;-1:-1;57293:1;57275:16;;57268:27;57207:94;58467:117;55839:42;58554:5;55828:54;58529:5;58526:35;58516:2;;58575:1;;58565:12;58516:2;58510:74;",
  "source": "pragma solidity ^0.6.0;\n\npragma experimental ABIEncoderV2;\n\nimport \"../Voting.sol\";\nimport \"../../../common/implementation/FixedPoint.sol\";\n\n\n// Test contract used to access internal variables in the Voting contract.\ncontract VotingTest is Voting {\n    constructor(\n        uint256 _phaseLength,\n        FixedPoint.Unsigned memory _gatPercentage,\n        FixedPoint.Unsigned memory _inflationRate,\n        uint256 _rewardsExpirationTimeout,\n        address _votingToken,\n        address _finder,\n        address _timerAddress\n    )\n        public\n        Voting(\n            _phaseLength,\n            _gatPercentage,\n            _inflationRate,\n            _rewardsExpirationTimeout,\n            _votingToken,\n            _finder,\n            _timerAddress\n        )\n    {}\n\n    function getPendingPriceRequestsArray() external view returns (bytes32[] memory) {\n        return pendingPriceRequests;\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/test/VotingTest.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        20679
      ]
    },
    "id": 20680,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20637,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:71"
      },
      {
        "id": 20638,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:71"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 20639,
        "nodeType": "ImportDirective",
        "scope": 20680,
        "sourceUnit": 20331,
        "src": "60:23:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 20640,
        "nodeType": "ImportDirective",
        "scope": 20680,
        "sourceUnit": 4556,
        "src": "84:55:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20641,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20330,
              "src": "240:6:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$20330",
                "typeString": "contract Voting"
              }
            },
            "id": 20642,
            "nodeType": "InheritanceSpecifier",
            "src": "240:6:71"
          }
        ],
        "contractDependencies": [
          5296,
          20330,
          20768,
          20976,
          21540,
          21914
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20679,
        "linearizedBaseContracts": [
          20679,
          20330,
          20976,
          20768,
          21914,
          21540,
          5296
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20668,
              "nodeType": "Block",
              "src": "771:2:71",
              "statements": []
            },
            "documentation": null,
            "id": 20669,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20659,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20644,
                    "src": "575:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20660,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20646,
                    "src": "601:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20661,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20648,
                    "src": "629:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20662,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20650,
                    "src": "657:25:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20663,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20652,
                    "src": "696:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20664,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20654,
                    "src": "722:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20665,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20656,
                    "src": "743:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 20666,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20658,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20330,
                  "src": "555:6:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$20330_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "555:211:71"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20644,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "274:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20646,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "304:41:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20645,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3868,
                    "src": "304:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20648,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "355:41:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20647,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3868,
                    "src": "355:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20650,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "406:33:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20652,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "449:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20654,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "479:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20656,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "504:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:267:71"
            },
            "returnParameters": {
              "id": 20667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:71"
            },
            "scope": 20679,
            "src": "253:520:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20677,
              "nodeType": "Block",
              "src": "860:44:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20675,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18570,
                    "src": "877:20:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 20674,
                  "id": 20676,
                  "nodeType": "Return",
                  "src": "870:27:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 20678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:2:71"
            },
            "returnParameters": {
              "id": 20674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20678,
                  "src": "842:16:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20671,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 20672,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "842:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:18:71"
            },
            "scope": 20679,
            "src": "779:125:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 20680,
        "src": "217:689:71"
      }
    ],
    "src": "0:907:71"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        20679
      ]
    },
    "id": 20680,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20637,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:71"
      },
      {
        "id": 20638,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:71"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 20639,
        "nodeType": "ImportDirective",
        "scope": 20680,
        "sourceUnit": 20331,
        "src": "60:23:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 20640,
        "nodeType": "ImportDirective",
        "scope": 20680,
        "sourceUnit": 4556,
        "src": "84:55:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20641,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20330,
              "src": "240:6:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$20330",
                "typeString": "contract Voting"
              }
            },
            "id": 20642,
            "nodeType": "InheritanceSpecifier",
            "src": "240:6:71"
          }
        ],
        "contractDependencies": [
          5296,
          20330,
          20768,
          20976,
          21540,
          21914
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20679,
        "linearizedBaseContracts": [
          20679,
          20330,
          20976,
          20768,
          21914,
          21540,
          5296
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20668,
              "nodeType": "Block",
              "src": "771:2:71",
              "statements": []
            },
            "documentation": null,
            "id": 20669,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20659,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20644,
                    "src": "575:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20660,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20646,
                    "src": "601:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20661,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20648,
                    "src": "629:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20662,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20650,
                    "src": "657:25:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20663,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20652,
                    "src": "696:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20664,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20654,
                    "src": "722:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 20665,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20656,
                    "src": "743:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 20666,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20658,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20330,
                  "src": "555:6:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$20330_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "555:211:71"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20644,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "274:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20646,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "304:41:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20645,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3868,
                    "src": "304:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20648,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "355:41:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3868_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20647,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3868,
                    "src": "355:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3868_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20650,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "406:33:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20652,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "449:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20654,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "479:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20656,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20669,
                  "src": "504:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:267:71"
            },
            "returnParameters": {
              "id": 20667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:71"
            },
            "scope": 20679,
            "src": "253:520:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20677,
              "nodeType": "Block",
              "src": "860:44:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20675,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18570,
                    "src": "877:20:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 20674,
                  "id": 20676,
                  "nodeType": "Return",
                  "src": "870:27:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 20678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:2:71"
            },
            "returnParameters": {
              "id": 20674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20678,
                  "src": "842:16:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20671,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 20672,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "842:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:18:71"
            },
            "scope": 20679,
            "src": "779:125:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 20680,
        "src": "217:689:71"
      }
    ],
    "src": "0:907:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-22T14:01:04.644Z",
  "devdoc": {
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "details": "Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.",
        "params": {
          "commits": "struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
        }
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "details": "For more information on reveals, review the comment for `revealVote`.",
        "params": {
          "reveals": "array of the Reveal struct which contains an identifier, time, price and salt."
        }
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "details": "An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.",
        "params": {
          "encryptedVote": "offchain encrypted blob containing the voters amount, time and salt.",
          "hash": "keccak256 hash of the price you want to vote for and a `int256 salt`.",
          "identifier": "unique price pair identifier. Eg: BTC/USD price pair.",
          "time": "unix timestamp of for the price request."
        }
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "details": "`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.",
        "params": {
          "hash": "keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.",
          "identifier": "uniquely identifies the committed vote. EG BTC/USD price pair.",
          "time": "unix timestamp of the price being voted on."
        }
      },
      "getCurrentRoundId()": {
        "returns": {
          "_0": "uint256 representing the unique round ID."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "getPendingRequests()": {
        "returns": {
          "_0": "pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests."
        }
      },
      "getPrice(bytes32,uint256)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "getPriceRequestStatuses((bytes32,uint256)[])": {
        "details": "If the status for a particular request is NotRequested, the lastVotingRound will always be 0.",
        "params": {
          "requests": "array of type PendingRequest which includes an identifier and timestamp for each request."
        },
        "returns": {
          "_0": "requestStates a list, in the same order as the input list, giving the status of each of the specified price requests."
        }
      },
      "getVotePhase()": {
        "returns": {
          "_0": "Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
        }
      },
      "hasPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "details": "Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).",
        "params": {
          "roundId": "the round from which voting rewards will be retrieved from.",
          "toRetrieve": "array of PendingRequests which rewards are retrieved from.",
          "voterAddress": "voter for which rewards will be retrieved. Does not have to be the caller."
        },
        "returns": {
          "totalRewardToIssue": "total amount of rewards returned to the voter."
        }
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "details": "The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.",
        "params": {
          "identifier": "voted on in the commit phase. EG BTC/USD price pair.",
          "price": "voted on during the commit phase.",
          "salt": "value used to hide the commitment price during the commit phase.",
          "time": "specifies the unix timestamp of the price being voted on."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "setGatPercentage((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newGatPercentage": "sets the next round's Gat percentage."
        }
      },
      "setInflationRate((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newInflationRate": "sets the next round's inflation rate."
        }
      },
      "setMigrated(address)": {
        "details": "Can only be called by the contract owner.",
        "params": {
          "newVotingAddress": "the newly migrated contract address."
        }
      },
      "setRewardsExpirationTimeout(uint256)": {
        "details": "This change only applies to rounds that have not yet begun.",
        "params": {
          "NewRewardsExpirationTimeout": "how long a caller can wait before choosing to withdraw their rewards."
        }
      },
      "snapshotCurrentRound(bytes)": {
        "details": "This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.",
        "params": {
          "signature": "signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "notice": "Submit a batch of commits in a single transaction."
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "notice": "Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction."
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "notice": "commits a vote and logs an event with a data blob, typically an encrypted version of the vote"
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "notice": "Commit a vote for a price request for `identifier` at `time`."
      },
      "getCurrentRoundId()": {
        "notice": "Returns the current round ID, as a function of the current time."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getPendingRequests()": {
        "notice": "Gets the queries that are being voted on this round."
      },
      "getPrice(bytes32,uint256)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "getPriceRequestStatuses((bytes32,uint256)[])": {
        "notice": "Gets the status of a list of price requests, identified by their identifier and time."
      },
      "getVotePhase()": {
        "notice": "Returns the current voting phase, as a function of the current time."
      },
      "hasPrice(bytes32,uint256)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "notice": "Retrieves rewards owed for a set of resolved price requests."
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "notice": "Reveal a previously committed vote for `identifier` at `time`."
      },
      "rounds(uint256)": {
        "notice": "**************************************          INTERNAL TRACKING           ****************************************"
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "setGatPercentage((uint256))": {
        "notice": "Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun."
      },
      "setInflationRate((uint256))": {
        "notice": "Resets the inflation rate. Note: this change only applies to rounds that have not yet begun."
      },
      "setMigrated(address)": {
        "notice": "Disables this Voting contract in favor of the migrated one."
      },
      "setRewardsExpirationTimeout(uint256)": {
        "notice": "Resets the rewards expiration timeout."
      },
      "snapshotCurrentRound(bytes)": {
        "notice": "Snapshot the current round's token balances and lock in the inflation rate and GAT."
      }
    }
  }
}