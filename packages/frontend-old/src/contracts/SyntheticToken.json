{
  "contractName": "SyntheticToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"constructor\":{\"params\":{\"tokenDecimals\":\"The number of decimals to define token precision.\",\"tokenName\":\"The name which describes the new token.\",\"tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isBurner(address)\":{\"params\":{\"account\":\"The address which is checked for the Burner role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Burner.\"}},\"isMinter(address)\":{\"params\":{\"account\":\"The address which is checked for the Minter role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Minter.\"}},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Burner role is removed.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"removeMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Minter role is removed.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Burnable and mintable ERC20.\"},\"userdoc\":{\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":\"Constructs the SyntheticToken.\",\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"isBurner(address)\":{\"notice\":\"Checks if a given account holds the Burner role.\"},\"isMinter(address)\":{\"notice\":\"Checks if a given account holds the Minter role.\"},\"removeBurner(address)\":{\"notice\":\"Removes Burner role from account.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"removeMinter(address)\":{\"notice\":\"Remove Minter role from account.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xfe828b4a29f9f4610081793374ace7d88d9cb3a3d6fe13fa28097a04de879406\",\"urls\":[\"bzz-raw://6eedeeeb92e1be8721def0edf794b05d5e279a03eb489da05050de765ca04397\",\"dweb:/ipfs/QmXkp7HvFbCkugbhnUDi1MNMNuvkuPPX4odUphgSGKUGAe\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x750b0eb91030fc42c6bf1cd9029b163a2b156f9c7d193b42b8256f7fc169d196\",\"urls\":[\"bzz-raw://e7b1fde83d251cedcbaeaffd7b3d21ed9b0d47a8dcc6778e0acfe97b03180bda\",\"dweb:/ipfs/QmfUPMfcKd9iYtoNmyAERK5sR8GrEYTyi1robnVxcqD3tD\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200272838038062002728833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491849184918491620001c4916003919085019062000693565b508051620001da90600490602084019062000693565b50506005805460ff1916601217905550620001fe816001600160e01b036200029916565b62000215600080336001600160e01b03620002af16565b6200023b60015b604080516000808252602082019092526001600160e01b03620003ca16565b6200024760026200021c565b50506007805460ff19166001179055506200026a6001600160e01b03620004df16565b6200027d6001600160e01b036200053916565b620002906001600160e01b036200054516565b50505062000738565b6005805460ff191660ff92909216919091179055565b826000808281526006602052604090206001015460ff166002811115620002d257fe5b1462000325576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526006602052604090206001808201805460ff19168280021790555083815562000363600282018462000554602090811b620012ad17901c565b60008481526006602052604081206001015460ff1660028111156200038457fe5b1415620003c35760405162461bcd60e51b815260040180806020018281038252603c81526020018062002691603c913960400191505060405180910390fd5b5050505050565b826000808281526006602052604090206001015460ff166002811115620003ed57fe5b1462000440576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b600084815260066020908152604090912060018101805460ff19166002179055848155906200047f9060038301908590620012b76200056d821b17901c565b60008481526006602052604081206001015460ff166002811115620004a057fe5b1415620003c35760405162461bcd60e51b8152600401808060200182810382526038815260200180620026f06038913960400191505060405180910390fd5b60075460ff1662000537576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b6200056982826001600160e01b03620005ae16565b5050565b60005b8151811015620005a957620005a0838383815181106200058c57fe5b60200260200101516200061260201b60201c565b60010162000570565b505050565b6001600160a01b038116620005f55760405162461bcd60e51b8152600401808060200182810382526023815260200180620026cd6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0381166200066e576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006d657805160ff191683800117855562000706565b8280016001018555821562000706579182015b8281111562000706578251825591602001919060010190620006e9565b506200071492915062000718565b5090565b6200073591905b808211156200071457600081556001016200071f565b90565b611f4980620007486000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806373cc802a116100ee578063a9059cbb11610097578063ab3545e511610071578063ab3545e514610630578063d97c05be14610676578063dd62ed3e146106af578063f44637ba146106ea576101ae565b8063a9059cbb146105a7578063aa271e1a146105e0578063aaa14ca314610613576101ae565b806395d89b41116100c857806395d89b4114610533578063983b2d561461053b578063a457c2d71461056e576101ae565b806373cc802a1461048e57806374d0a676146104c15780637cdc1cb9146104fa576101ae565b8063313ce5671161015b57806342966c681161013557806342966c68146103d25780634334614a146103ef5780636be7658b1461042257806370a082311461045b576101ae565b8063313ce56714610342578063395093511461036057806340c10f1914610399576101ae565b806318160ddd1161018c57806318160ddd146102b257806323b872dd146102cc5780633092afd51461030f576101ae565b806302846858146101b357806306fdde03146101e8578063095ea7b314610265575b600080fd5b6101e6600480360360208110156101c957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661071d565b005b6101f0610744565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022a578181015183820152602001610212565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029e6004803603604081101561027b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107f8565b604080519115158252519081900360200190f35b6102ba610816565b60408051918252519081900360200190f35b61029e600480360360608110156102e257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561081c565b6101e66004803603602081101561032557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108c3565b61034a6108dd565b6040805160ff9092168252519081900360200190f35b61029e6004803603604081101561037657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108e6565b61029e600480360360408110156103af57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610947565b6101e6600480360360208110156103e857600080fd5b50356109b4565b61029e6004803603602081101561040557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a23565b6101e66004803603604081101561043857600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610a39565b6102ba6004803603602081101561047157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b8e565b6101e6600480360360208110156104a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610bb6565b6101e6600480360360408110156104d757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610bd1565b61029e6004803603604081101561051057600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610d26565b6101f0610dfe565b6101e66004803603602081101561055157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e7d565b61029e6004803603604081101561058457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610e99565b61029e600480360360408110156105bd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610f14565b61029e600480360360208110156105f657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610f28565b6101e66004803603602081101561062957600080fd5b5035610f3c565b61064d6004803603602081101561064657600080fd5b503561106a565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e66004803603604081101561068c57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16611106565b6102ba600480360360408110156106c557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661125b565b6101e66004803603602081101561070057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611293565b6107256112ed565b61072d611360565b61073960025b82610a39565b61074161138a565b50565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b600061080c6108056113b7565b84846113bb565b5060015b92915050565b60025490565b6000610829848484611502565b6108b9846108356113b7565b6108b485604051806060016040528060288152602001611e166028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600160205260408120906108806113b7565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff6116de16565b6113bb565b5060019392505050565b6108cb6112ed565b6108d3611360565b6107396001610733565b60055460ff1690565b600061080c6108f36113b7565b846108b485600160006109046113b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61178f16565b600060016109558133610d26565b6109aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b6108b98484611803565b60026109c08133610d26565b610a15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b610a1f3383611940565b5050565b6000610a2d6112ed565b61081060025b83610d26565b81600260008281526006602052604090206001015460ff166002811115610a5c57fe5b14610ab2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b6000838152600660205260409020548390610acd9033610d26565b610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020610b43906003018463ffffffff611a9616565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610bbe6112ed565b610bc6611360565b610739600082611106565b81600260008281526006602052604090206001015460ff166002811115610bf457fe5b14610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b6000838152600660205260409020548390610c659033610d26565b610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020610cdb906003018463ffffffff611ae316565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260066020526040812060018082015460ff166002811115610d4857fe5b1415610d6957610d61600282018463ffffffff611bb516565b915050610810565b6002600182015460ff166002811115610d7e57fe5b1415610d9757610d61600382018463ffffffff611bd516565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ee5780601f106107c3576101008083540402835291602001916107ee565b610e856112ed565b610e8d611360565b61073960015b82610bd1565b600061080c610ea66113b7565b846108b485604051806060016040528060258152602001611eef6025913960016000610ed06113b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6116de16565b600061080c610f216113b7565b8484611502565b6000610f326112ed565b6108106001610a33565b80600260008281526006602052604090206001015460ff166002811115610f5f57fe5b14610fb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b81610fc08133610d26565b611015576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b6000838152600660205260409020611036906003013363ffffffff611a9616565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526006602052604090206001015460ff16600281111561108f57fe5b146110e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611d99602f913960400191505060405180910390fd5b60008381526006602052604090206110ff90600201611c01565b9392505050565b81600160008281526006602052604090206001015460ff16600281111561112957fe5b1461117f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611d99602f913960400191505060405180910390fd5b600083815260066020526040902054839061119a9033610d26565b6111ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020611210906002018463ffffffff611c1b16565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61129b6112ed565b6112a3611360565b6107396002610e93565b610a1f8282611c1b565b60005b81518110156112e8576112e0838383815181106112d357fe5b6020026020010151611ae3565b6001016112ba565b505050565b60075460ff1661135e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611427576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ea76024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611493576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611d516022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661156e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611e826025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166115da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d0c6023913960400191505060405180910390fd5b6115e58383836112e8565b61163581604051806060016040528060268152602001611d736026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff6116de16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054611677908263ffffffff61178f16565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611787576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561174c578181015183820152602001611734565b50505050905090810190601f1680156117795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156110ff57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821661188557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611891600083836112e8565b6002546118a4908263ffffffff61178f16565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546118dd908263ffffffff61178f16565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff82166119ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e3e6021913960400191505060405180910390fd5b6119b8826000836112e8565b611a0881604051806060016040528060228152602001611d2f6022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919063ffffffff6116de16565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600254611a41908263ffffffff611cc916565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116611b6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e5f6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b60006110ff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116de56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122049eb1511c589b98461439a7c4d78593a85058d4f4c0592d619dace4e2186ff7e64736f6c634300060a0033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ae5760003560e01c806373cc802a116100ee578063a9059cbb11610097578063ab3545e511610071578063ab3545e514610630578063d97c05be14610676578063dd62ed3e146106af578063f44637ba146106ea576101ae565b8063a9059cbb146105a7578063aa271e1a146105e0578063aaa14ca314610613576101ae565b806395d89b41116100c857806395d89b4114610533578063983b2d561461053b578063a457c2d71461056e576101ae565b806373cc802a1461048e57806374d0a676146104c15780637cdc1cb9146104fa576101ae565b8063313ce5671161015b57806342966c681161013557806342966c68146103d25780634334614a146103ef5780636be7658b1461042257806370a082311461045b576101ae565b8063313ce56714610342578063395093511461036057806340c10f1914610399576101ae565b806318160ddd1161018c57806318160ddd146102b257806323b872dd146102cc5780633092afd51461030f576101ae565b806302846858146101b357806306fdde03146101e8578063095ea7b314610265575b600080fd5b6101e6600480360360208110156101c957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661071d565b005b6101f0610744565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022a578181015183820152602001610212565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029e6004803603604081101561027b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107f8565b604080519115158252519081900360200190f35b6102ba610816565b60408051918252519081900360200190f35b61029e600480360360608110156102e257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561081c565b6101e66004803603602081101561032557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108c3565b61034a6108dd565b6040805160ff9092168252519081900360200190f35b61029e6004803603604081101561037657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108e6565b61029e600480360360408110156103af57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610947565b6101e6600480360360208110156103e857600080fd5b50356109b4565b61029e6004803603602081101561040557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a23565b6101e66004803603604081101561043857600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610a39565b6102ba6004803603602081101561047157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b8e565b6101e6600480360360208110156104a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610bb6565b6101e6600480360360408110156104d757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610bd1565b61029e6004803603604081101561051057600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610d26565b6101f0610dfe565b6101e66004803603602081101561055157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e7d565b61029e6004803603604081101561058457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610e99565b61029e600480360360408110156105bd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610f14565b61029e600480360360208110156105f657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610f28565b6101e66004803603602081101561062957600080fd5b5035610f3c565b61064d6004803603602081101561064657600080fd5b503561106a565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e66004803603604081101561068c57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16611106565b6102ba600480360360408110156106c557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661125b565b6101e66004803603602081101561070057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611293565b6107256112ed565b61072d611360565b61073960025b82610a39565b61074161138a565b50565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b600061080c6108056113b7565b84846113bb565b5060015b92915050565b60025490565b6000610829848484611502565b6108b9846108356113b7565b6108b485604051806060016040528060288152602001611e166028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600160205260408120906108806113b7565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff6116de16565b6113bb565b5060019392505050565b6108cb6112ed565b6108d3611360565b6107396001610733565b60055460ff1690565b600061080c6108f36113b7565b846108b485600160006109046113b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61178f16565b600060016109558133610d26565b6109aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b6108b98484611803565b60026109c08133610d26565b610a15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b610a1f3383611940565b5050565b6000610a2d6112ed565b61081060025b83610d26565b81600260008281526006602052604090206001015460ff166002811115610a5c57fe5b14610ab2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b6000838152600660205260409020548390610acd9033610d26565b610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020610b43906003018463ffffffff611a9616565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610bbe6112ed565b610bc6611360565b610739600082611106565b81600260008281526006602052604090206001015460ff166002811115610bf457fe5b14610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b6000838152600660205260409020548390610c659033610d26565b610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020610cdb906003018463ffffffff611ae316565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260066020526040812060018082015460ff166002811115610d4857fe5b1415610d6957610d61600282018463ffffffff611bb516565b915050610810565b6002600182015460ff166002811115610d7e57fe5b1415610d9757610d61600382018463ffffffff611bd516565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ee5780601f106107c3576101008083540402835291602001916107ee565b610e856112ed565b610e8d611360565b61073960015b82610bd1565b600061080c610ea66113b7565b846108b485604051806060016040528060258152602001611eef6025913960016000610ed06113b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6116de16565b600061080c610f216113b7565b8484611502565b6000610f326112ed565b6108106001610a33565b80600260008281526006602052604090206001015460ff166002811115610f5f57fe5b14610fb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611dc8602c913960400191505060405180910390fd5b81610fc08133610d26565b611015576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611df46022913960400191505060405180910390fd5b6000838152600660205260409020611036906003013363ffffffff611a9616565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526006602052604090206001015460ff16600281111561108f57fe5b146110e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611d99602f913960400191505060405180910390fd5b60008381526006602052604090206110ff90600201611c01565b9392505050565b81600160008281526006602052604090206001015460ff16600281111561112957fe5b1461117f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611d99602f913960400191505060405180910390fd5b600083815260066020526040902054839061119a9033610d26565b6111ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ecb6024913960400191505060405180910390fd5b6000848152600660205260409020611210906002018463ffffffff611c1b16565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61129b6112ed565b6112a3611360565b6107396002610e93565b610a1f8282611c1b565b60005b81518110156112e8576112e0838383815181106112d357fe5b6020026020010151611ae3565b6001016112ba565b505050565b60075460ff1661135e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611427576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ea76024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611493576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611d516022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661156e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611e826025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166115da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d0c6023913960400191505060405180910390fd5b6115e58383836112e8565b61163581604051806060016040528060268152602001611d736026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff6116de16565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054611677908263ffffffff61178f16565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611787576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561174c578181015183820152602001611734565b50505050905090810190601f1680156117795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156110ff57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821661188557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611891600083836112e8565b6002546118a4908263ffffffff61178f16565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546118dd908263ffffffff61178f16565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff82166119ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e3e6021913960400191505060405180910390fd5b6119b8826000836112e8565b611a0881604051806060016040528060228152602001611d2f6022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919063ffffffff6116de16565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600254611a41908263ffffffff611cc916565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116611b6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e5f6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b60006110ff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116de56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122049eb1511c589b98461439a7c4d78593a85058d4f4c0592d619dace4e2186ff7e64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "292:2795:34:-:0;;;635:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:192:34;;;;;;;;;;-1:-1:-1;635:192:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:192:34;;;;;;;;;;-1:-1:-1;635:192:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:192:34;;;;;;;2046:12:88;;635:192:34;;-1:-1:-1;771:9:34;;-1:-1:-1;782:11:34;;635:192;;771:9;;782:11;;2046:12:88;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2068:16:88;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2094:9:88;:14;;-1:-1:-1;2094:14:88;2106:2;2094:14;;;-1:-1:-1;1047:30:9::1;1062:14:::0;1047::::1;:30::i;:::-;1087:76;1116:11;::::0;1152:10:::1;1087:20;:76::i;:::-;1173:80;1199:12;1191:21;1236:16;::::0;;1222:11:::1;1236:16:::0;;;::::1;::::0;::::1;::::0;;;1173:17:::1;:80::i;:::-;1263;1289:12;1281:21;::::0;1263:80:::1;-1:-1:-1::0;;864:11:11;:18;;-1:-1:-1;864:18:11;878:4;864:18;;;-1:-1:-1;1298:19:11::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1365:20;:18;:20::i;:::-;635:192:34::0;;;292:2795;;9983:88:88;10043:9;:21;;-1:-1:-1;;10043:21:88;;;;;;;;;;;;9983:88::o;8777:519:12:-;8925:6;7520:16;7494:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;8943:17:::1;8963:13:::0;;;:5:::1;:13;::::0;;;;9002:18:::1;8986:13:::0;;::::1;:34:::0;;-1:-1:-1;;8986:34:12::1;9002:18:::0;;8986:34:::1;;::::0;;-1:-1:-1;9030:34:12;;;9074:48:::1;:28;::::0;::::1;9108:13:::0;9074:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9187:16;9153:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9132:157;;;;-1:-1:-1::0;;;9132:157:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;8777:519:::0;;;;:::o;7923:517::-;8078:6;7520:16;7494:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;8096:17:::1;8116:13:::0;;;:5:::1;:13;::::0;;;;;;;8139::::1;::::0;::::1;:31:::0;;-1:-1:-1;;8139:31:12::1;8155:15;8139:31;::::0;;8180:34;;;8116:13;8224:46:::1;::::0;:25:::1;::::0;::::1;::::0;8255:14;;8224:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;8335:16;8301:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;8280:153;;;;-1:-1:-1::0;;;8280:153:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186:11::0;2249:11;;;;2241:55;;;;;-1:-1:-1;;;2241:55:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2419:11;:19;;-1:-1:-1;2419:19:11;;;2309:136::o;2451:206::-;2632:11;:18;;-1:-1:-1;;2632:18:11;2646:4;2632:18;;;2451:206::o;654:144:12:-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;1474:232::-;1584:9;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;;;:44;;:::i;:::-;1626:3;;1579:121;;;;1474:232;;:::o;286:221::-;-1:-1:-1;392:25:12;;384:73;;;;-1:-1:-1;;;384:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;467:33:12;-1:-1:-1;467:33:12;;;;;;;286:221::o;1077:228::-;-1:-1:-1;1183:27:12;;1175:71;;;;;-1:-1:-1;;;1175:71:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1256:35:12;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;1256:42:12;-1:-1:-1;1256:42:12;;;1077:228::o;292:2795:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;292:2795:34;;;-1:-1:-1;292:2795:34;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "292:2795:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:124;;;;;;;;;;;;;;;;-1:-1:-1;1938:124:34;;;;:::i;:::-;;2180:81:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;;;;;;;;;;;-1:-1:-1;4216:166:88;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;4842:317;;;;;;;;;;;;;;;;-1:-1:-1;4842:317:88;;;;;;;;;;;;;;;;;;:::i;1320:124:34:-;;;;;;;;;;;;;;;;-1:-1:-1;1320:124:34;;;;:::i;3082:81:88:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5554:215;;;;;;;;;;;;;;;;-1:-1:-1;5554:215:88;;;;;;;;;:::i;1591:216:9:-;;;;;;;;;;;;;;;;-1:-1:-1;1591:216:9;;;;;;;;;:::i;1931:126::-;;;;;;;;;;;;;;;;-1:-1:-1;1931:126:9;;:::i;2939:146:34:-;;;;;;;;;;;;;;;;-1:-1:-1;2939:146:34;;;;:::i;6365:262:12:-;;;;;;;;;;;;;;;;-1:-1:-1;6365:262:12;;;;;;;;;:::i;3379:117:88:-;;;;;;;;;;;;;;;;-1:-1:-1;3379:117:88;;;;:::i;2233:120:34:-;;;;;;;;;;;;;;;;-1:-1:-1;2233:120:34;;;;:::i;5751:239:12:-;;;;;;;;;;;;;;;;-1:-1:-1;5751:239:12;;;;;;;;;:::i;3906:428::-;;;;;;;;;;;;;;;;-1:-1:-1;3906:428:12;;;;;;;;;:::i;2374:85:88:-;;;:::i;1010:118:34:-;;;;;;;;;;;;;;;;-1:-1:-1;1010:118:34;;;;:::i;6256:266:88:-;;;;;;;;;;;;;;;;-1:-1:-1;6256:266:88;;;;;;;;;:::i;3699:172::-;;;;;;;;;;;;;;;;-1:-1:-1;3699:172:88;;;;;;;;;:::i;2573:146:34:-;;;;;;;;;;;;;;;;-1:-1:-1;2573:146:34;;;;:::i;6894:235:12:-;;;;;;;;;;;;;;;;-1:-1:-1;6894:235:12;;:::i;5245:160::-;;;;;;;;;;;;;;;;-1:-1:-1;5245:160:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;4692:252;;;;;;;;;;;;;;;;-1:-1:-1;4692:252:12;;;;;;;;;:::i;3929:149:88:-;;;;;;;;;;;;;;;;-1:-1:-1;3929:149:88;;;;;;;;;;;:::i;1627:118:34:-;;;;;;;;;;;;;;;;-1:-1:-1;1627:118:34;;;;:::i;1938:124::-;1298:19:11;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;2011:44:34::1;2032:12;2024:21;2047:7;2011:12;:44::i;:::-;1365:20:11::0;:18;:20::i;:::-;1938:124:34;:::o;2180:81:88:-;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:13;;2242:12;;2249:5;;2242:12;;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;-1:-1:-1;4371:4:88;4216:166;;;;;:::o;3223:98::-;3302:12;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5061:12;:10;:12::i;:::-;5041:33;;;;;;;;;;;;;-1:-1:-1;5041:33:88;;;:89;;:37;:89;:::i;:::-;5010:8;:121::i;:::-;-1:-1:-1;5148:4:88;4842:317;;;;;:::o;1320:124:34:-;1298:19:11;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1393:44:34::1;1414:12;1406:21;::::0;3082:81:88;3147:9;;;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;5690:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5690:25:88;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1591:216:9:-;1736:4;1704:12;2674:29:12;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:23:9::1;1762:9;1773:5;1756;:23::i;1931:126::-:0;2001:12;2674:29:12;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:24:9::1;2032:10;2044:5;2026;:24::i;:::-;1931:126:::0;;:::o;2939:146:34:-;3014:4;1584:19:11;:17;:19::i;:::-;3037:41:34::1;3055:12;3047:21;3070:7;3037:9;:41::i;6365:262:12:-:0;6445:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;6469:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:13:::2;::::0;;;:5:::2;:13;::::0;;;;:63:::2;::::0;:34:::2;;6535:14:::0;6487:63:::2;:47;:63;:::i;:::-;6565:55;::::0;6609:10:::2;::::0;6565:55:::2;::::0;::::2;::::0;6585:6;;6565:55:::2;::::0;;;::::2;3586:1:::1;6365:262:::0;;;:::o;3379:117:88:-;3471:18;;3445:7;3471:18;;;;;;;;;;;;3379:117::o;2233:120:34:-;1298:19:11;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;2304:42:34::1;2324:11;2338:7;2304:11;:42::i;5751:239:12:-:0;5823:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5847:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:13:::2;::::0;;;:5:::2;:13;::::0;;;;:55:::2;::::0;:34:::2;;5910:9:::0;5865:55:::2;:44;:55;:::i;:::-;5935:48;::::0;5972:10:::2;::::0;5935:48:::2;::::0;::::2;::::0;5953:6;;5935:48:::2;::::0;;;::::2;3586:1:::1;5751:239:::0;;;:::o;3906:428::-;3985:4;4021:13;;;:5;:13;;;;;4065:18;4048:13;;;;;;:35;;;;;;;;;4044:250;;;4106:52;:28;;;4144:13;4106:52;:37;:52;:::i;:::-;4099:59;;;;;4044:250;4196:15;4179:13;;;;;;:32;;;;;;;;;4175:119;;;4234:49;:25;;;4269:13;4234:49;:34;:49;:::i;4175:119::-;4303:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:85:88;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:13;;2438:14;;2445:7;;2438:14;;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;1010:118:34;1298:19:11;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1080:41:34::1;1098:12;1090:21;1113:7;1080:9;:41::i;6256:266:88:-:0;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;6397:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6397:25:88;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3699:172::-;3785:4;3801:42;3811:12;:10;:12::i;:::-;3825:9;3836:6;3801:9;:42::i;2573:146:34:-;2648:4;1584:19:11;:17;:19::i;:::-;2671:41:34::1;2689:12;2681:21;::::0;6894:235:12;6956:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:6:::1;2674:29;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:13:::2;::::0;;;:5:::2;:13;::::0;;;;:59:::2;::::0;:34:::2;;7045:10;6997:59;:47;:59;:::i;:::-;7071:51;::::0;7111:10:::2;::::0;;;7091:6;;7071:51:::2;::::0;;;::::2;3586:1:::1;6894:235:::0;;:::o;5245:160::-;5323:7;5306:6;3239:18;3213:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:13:::1;::::0;;;:5:::1;:13;::::0;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5342:56:::0;5245:160;-1:-1:-1;;;5245:160:12:o;4692:252::-;4769:6;3239:18;3213:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4793:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4861:9:::0;4811:60:::2;:49;:60;:::i;:::-;4886:51;::::0;4926:10:::2;::::0;4886:51:::2;::::0;::::2;::::0;4907:6;;4886:51:::2;::::0;;;::::2;3319:1:::1;4692:252:::0;;;:::o;3929:149:88:-;4044:18;;;;4018:7;4044:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3929:149::o;1627:118:34:-;1298:19:11;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1697:41:34::1;1715:12;1707:21;::::0;654:144:12;749:42;761:14;777:13;749:11;:42::i;1474:232::-;1584:9;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;:44::i;:::-;1626:3;;1579:121;;;;1474:232;;:::o;2117:186:11:-;2249:11;;;;2241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2419:11;:19;;;;;;2309:136::o;2451:206::-;2632:11;:18;;;;2646:4;2632:18;;;2451:206::o;735:104:82:-;822:10;735:104;:::o;9320:340:88:-;9421:19;;;9413:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9499:21;;;9491:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9570:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9621:32;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;7101:20;;;7093:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7181:23;;;7173:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;7313:17;;;;:9;:17;;;;;;;;;;;:91;;;;7437:20;;;;;;;:32;;7462:6;7437:32;:24;:32;:::i;:::-;7414:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7484:35;;;;;;;7414:20;;7484:35;;;;;;;;;;;;;6996:530;;;:::o;1692:187:87:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:87;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:370:88;7879:21;;;7871:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:49;7976:1;7980:7;7989:6;7947:20;:49::i;:::-;8022:12;;:24;;8039:6;8022:24;:16;:24;:::i;:::-;8007:12;:39;8077:18;;;:9;:18;;;;;;;;;;;:30;;8100:6;8077:30;:22;:30;:::i;:::-;8056:18;;;:9;:18;;;;;;;;;;;:51;;;;8122:37;;;;;;;8056:18;;:9;;8122:37;;;;;;;;;;7796:370;;:::o;8485:410::-;8568:21;;;8560:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:49;8659:7;8676:1;8680:6;8638:20;:49::i;:::-;8719:68;8742:6;8719:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;8698:18;;;:9;:18;;;;;;;;;;:89;8812:12;;:24;;8829:6;8812:24;:16;:24;:::i;:::-;8797:12;:39;8851:37;;;;;;;;8877:1;;8851:37;;;;;;;;;;;;;8485:410;;:::o;1311:157:12:-;1415:38;;1456:5;1415:38;;;;;;;;;;;:46;;;;;;1311:157::o;1077:228::-;1183:27;;;1175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:35;;:22;:35;;;;;;;;;;;:42;;;;1294:4;1256:42;;;1077:228::o;109:171::-;235:21;;:38;;;;:21;;:38;;109:171::o;901:170::-;1027:37;;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;;;;513:135::o;286:221::-;392:25;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;;;;;;;;;;;286:221::o;1274:134:87:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "pragma solidity ^0.6.0;\nimport \"../../common/implementation/ExpandedERC20.sol\";\nimport \"../../common/implementation/Lockable.sol\";\n\n\n/**\n * @title Burnable and mintable ERC20.\n * @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\n */\n\ncontract SyntheticToken is ExpandedERC20, Lockable {\n    /**\n     * @notice Constructs the SyntheticToken.\n     * @param tokenName The name which describes the new token.\n     * @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals The number of decimals to define token precision.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        uint8 tokenDecimals\n    ) public ExpandedERC20(tokenName, tokenSymbol, tokenDecimals) nonReentrant() {}\n\n    /**\n     * @notice Add Minter role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Minter role is added.\n     */\n    function addMinter(address account) external nonReentrant() {\n        addMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Remove Minter role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Minter role is removed.\n     */\n    function removeMinter(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Add Burner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Burner role is added.\n     */\n    function addBurner(address account) external nonReentrant() {\n        addMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Removes Burner role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Burner role is removed.\n     */\n    function removeBurner(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Reset Owner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The new holder of the Owner role.\n     */\n    function resetOwner(address account) external nonReentrant() {\n        resetMember(uint256(Roles.Owner), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Minter role.\n     * @param account The address which is checked for the Minter role.\n     * @return bool True if the provided account is a Minter.\n     */\n    function isMinter(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Burner role.\n     * @param account The address which is checked for the Burner role.\n     * @return bool True if the provided account is a Burner.\n     */\n    function isBurner(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Burner), account);\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        7836
      ]
    },
    "id": 7837,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7680,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 7681,
        "nodeType": "ImportDirective",
        "scope": 7837,
        "sourceUnit": 3854,
        "src": "24:55:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 7682,
        "nodeType": "ImportDirective",
        "scope": 7837,
        "sourceUnit": 4617,
        "src": "80:50:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7684,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3853,
              "src": "319:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$3853",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 7685,
            "nodeType": "InheritanceSpecifier",
            "src": "319:13:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7686,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4616,
              "src": "334:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$4616",
                "typeString": "contract Lockable"
              }
            },
            "id": 7687,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:34"
          }
        ],
        "contractDependencies": [
          3853,
          4616,
          5224,
          5500,
          21540,
          22788,
          23199
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7683,
          "nodeType": "StructuredDocumentation",
          "src": "133:157:34",
          "text": " @title Burnable and mintable ERC20.\n @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 7836,
        "linearizedBaseContracts": [
          7836,
          4616,
          3853,
          5224,
          22788,
          5500,
          23199,
          21540
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7704,
              "nodeType": "Block",
              "src": "825:2:34",
              "statements": []
            },
            "documentation": {
              "id": 7688,
              "nodeType": "StructuredDocumentation",
              "src": "349:281:34",
              "text": " @notice Constructs the SyntheticToken.\n @param tokenName The name which describes the new token.\n @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals The number of decimals to define token precision."
            },
            "id": 7705,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7697,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7690,
                    "src": "771:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7698,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7692,
                    "src": "782:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7699,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7694,
                    "src": "795:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 7700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7696,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3853,
                  "src": "757:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$3853_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "757:52:34"
              },
              {
                "arguments": [],
                "id": 7702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7701,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "810:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:14:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7690,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "656:23:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7692,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "689:25:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7694,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "724:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7693,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "646:103:34"
            },
            "returnParameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:34"
            },
            "scope": 7836,
            "src": "635:192:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7722,
              "nodeType": "Block",
              "src": "1070:58:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7716,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1098:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1090:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7714,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1090:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7719,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "1113:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7713,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5022,
                      "src": "1080:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7721,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:41:34"
                }
              ]
            },
            "documentation": {
              "id": 7706,
              "nodeType": "StructuredDocumentation",
              "src": "833:172:34",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 7723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7710,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1055:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:34"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7723,
                  "src": "1029:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1028:17:34"
            },
            "returnParameters": {
              "id": 7712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:34"
            },
            "scope": 7836,
            "src": "1010:118:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7740,
              "nodeType": "Block",
              "src": "1383:61:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7734,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1414:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1414:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7732,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7737,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "1429:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7731,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "1393:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7739,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:44:34"
                }
              ]
            },
            "documentation": {
              "id": 7724,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:34",
              "text": " @notice Remove Minter role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 7741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7728,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1368:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1368:14:34"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7726,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7741,
                  "src": "1342:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:34"
            },
            "returnParameters": {
              "id": 7730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:34"
            },
            "scope": 7836,
            "src": "1320:124:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7758,
              "nodeType": "Block",
              "src": "1687:58:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7752,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1715:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1715:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1707:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7750,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1707:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7744,
                        "src": "1730:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7749,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5022,
                      "src": "1697:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:41:34"
                }
              ]
            },
            "documentation": {
              "id": 7742,
              "nodeType": "StructuredDocumentation",
              "src": "1450:172:34",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 7759,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7746,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1672:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:14:34"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7759,
                  "src": "1646:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:17:34"
            },
            "returnParameters": {
              "id": 7748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1687:0:34"
            },
            "scope": 7836,
            "src": "1627:118:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7776,
              "nodeType": "Block",
              "src": "2001:61:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7770,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2032:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2032:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2024:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7768,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2024:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7773,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7762,
                        "src": "2047:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7767,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "2011:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7775,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:44:34"
                }
              ]
            },
            "documentation": {
              "id": 7760,
              "nodeType": "StructuredDocumentation",
              "src": "1751:182:34",
              "text": " @notice Removes Burner role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 7777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7765,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7764,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1986:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:14:34"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7762,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7777,
                  "src": "1960:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1959:17:34"
            },
            "returnParameters": {
              "id": 7766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:34"
            },
            "scope": 7836,
            "src": "1938:124:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7794,
              "nodeType": "Block",
              "src": "2294:59:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7788,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2324:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2324:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2316:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7786,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2316:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:20:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7791,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "2338:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7785,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4973,
                      "src": "2304:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:42:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:42:34"
                }
              ]
            },
            "documentation": {
              "id": 7778,
              "nodeType": "StructuredDocumentation",
              "src": "2068:160:34",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 7795,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7783,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7782,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "2279:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:14:34"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7795,
                  "src": "2253:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:17:34"
            },
            "returnParameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2294:0:34"
            },
            "scope": 7836,
            "src": "2233:120:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7814,
              "nodeType": "Block",
              "src": "2654:65:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7808,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2689:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2689:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2681:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7806,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2681:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2681:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7811,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7798,
                        "src": "2704:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7805,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4943,
                      "src": "2671:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7804,
                  "id": 7813,
                  "nodeType": "Return",
                  "src": "2664:48:34"
                }
              ]
            },
            "documentation": {
              "id": 7796,
              "nodeType": "StructuredDocumentation",
              "src": "2359:209:34",
              "text": " @notice Checks if a given account holds the Minter role.\n @param account The address which is checked for the Minter role.\n @return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 7815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7801,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7800,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4590,
                  "src": "2620:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:18:34"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7798,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7815,
                  "src": "2591:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2590:17:34"
            },
            "returnParameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7815,
                  "src": "2648:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7802,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:6:34"
            },
            "scope": 7836,
            "src": "2573:146:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7834,
              "nodeType": "Block",
              "src": "3020:65:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7828,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "3055:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3055:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3047:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7826,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3047:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7831,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7818,
                        "src": "3070:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7825,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4943,
                      "src": "3037:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 7832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7824,
                  "id": 7833,
                  "nodeType": "Return",
                  "src": "3030:48:34"
                }
              ]
            },
            "documentation": {
              "id": 7816,
              "nodeType": "StructuredDocumentation",
              "src": "2725:209:34",
              "text": " @notice Checks if a given account holds the Burner role.\n @param account The address which is checked for the Burner role.\n @return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 7835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7820,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4590,
                  "src": "2986:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2986:18:34"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7818,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7835,
                  "src": "2957:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:17:34"
            },
            "returnParameters": {
              "id": 7824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7823,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7835,
                  "src": "3014:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7822,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3013:6:34"
            },
            "scope": 7836,
            "src": "2939:146:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7837,
        "src": "292:2795:34"
      }
    ],
    "src": "0:3088:34"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        7836
      ]
    },
    "id": 7837,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7680,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 7681,
        "nodeType": "ImportDirective",
        "scope": 7837,
        "sourceUnit": 3854,
        "src": "24:55:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 7682,
        "nodeType": "ImportDirective",
        "scope": 7837,
        "sourceUnit": 4617,
        "src": "80:50:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7684,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3853,
              "src": "319:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$3853",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 7685,
            "nodeType": "InheritanceSpecifier",
            "src": "319:13:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7686,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4616,
              "src": "334:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$4616",
                "typeString": "contract Lockable"
              }
            },
            "id": 7687,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:34"
          }
        ],
        "contractDependencies": [
          3853,
          4616,
          5224,
          5500,
          21540,
          22788,
          23199
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7683,
          "nodeType": "StructuredDocumentation",
          "src": "133:157:34",
          "text": " @title Burnable and mintable ERC20.\n @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 7836,
        "linearizedBaseContracts": [
          7836,
          4616,
          3853,
          5224,
          22788,
          5500,
          23199,
          21540
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7704,
              "nodeType": "Block",
              "src": "825:2:34",
              "statements": []
            },
            "documentation": {
              "id": 7688,
              "nodeType": "StructuredDocumentation",
              "src": "349:281:34",
              "text": " @notice Constructs the SyntheticToken.\n @param tokenName The name which describes the new token.\n @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals The number of decimals to define token precision."
            },
            "id": 7705,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7697,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7690,
                    "src": "771:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7698,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7692,
                    "src": "782:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7699,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7694,
                    "src": "795:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 7700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7696,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3853,
                  "src": "757:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$3853_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "757:52:34"
              },
              {
                "arguments": [],
                "id": 7702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7701,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "810:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:14:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7690,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "656:23:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7692,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "689:25:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7694,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7705,
                  "src": "724:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7693,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "646:103:34"
            },
            "returnParameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:34"
            },
            "scope": 7836,
            "src": "635:192:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7722,
              "nodeType": "Block",
              "src": "1070:58:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7716,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1098:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1090:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7714,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1090:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7719,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "1113:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7713,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5022,
                      "src": "1080:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7721,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:41:34"
                }
              ]
            },
            "documentation": {
              "id": 7706,
              "nodeType": "StructuredDocumentation",
              "src": "833:172:34",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 7723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7710,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1055:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:34"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7723,
                  "src": "1029:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1028:17:34"
            },
            "returnParameters": {
              "id": 7712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:34"
            },
            "scope": 7836,
            "src": "1010:118:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7740,
              "nodeType": "Block",
              "src": "1383:61:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7734,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1414:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1414:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7732,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7737,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "1429:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7731,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "1393:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7739,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:44:34"
                }
              ]
            },
            "documentation": {
              "id": 7724,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:34",
              "text": " @notice Remove Minter role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 7741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7728,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1368:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1368:14:34"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7726,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7741,
                  "src": "1342:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:34"
            },
            "returnParameters": {
              "id": 7730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:34"
            },
            "scope": 7836,
            "src": "1320:124:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7758,
              "nodeType": "Block",
              "src": "1687:58:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7752,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1715:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1715:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1707:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7750,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1707:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7744,
                        "src": "1730:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7749,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5022,
                      "src": "1697:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:41:34"
                }
              ]
            },
            "documentation": {
              "id": 7742,
              "nodeType": "StructuredDocumentation",
              "src": "1450:172:34",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 7759,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7746,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1672:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:14:34"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7759,
                  "src": "1646:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:17:34"
            },
            "returnParameters": {
              "id": 7748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1687:0:34"
            },
            "scope": 7836,
            "src": "1627:118:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7776,
              "nodeType": "Block",
              "src": "2001:61:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7770,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2032:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2032:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2024:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7768,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2024:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7773,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7762,
                        "src": "2047:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7767,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "2011:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7775,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:44:34"
                }
              ]
            },
            "documentation": {
              "id": 7760,
              "nodeType": "StructuredDocumentation",
              "src": "1751:182:34",
              "text": " @notice Removes Burner role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 7777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7765,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7764,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "1986:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:14:34"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7762,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7777,
                  "src": "1960:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1959:17:34"
            },
            "returnParameters": {
              "id": 7766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:34"
            },
            "scope": 7836,
            "src": "1938:124:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7794,
              "nodeType": "Block",
              "src": "2294:59:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7788,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2324:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2324:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2316:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7786,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2316:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:20:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7791,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "2338:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7785,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4973,
                      "src": "2304:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:42:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:42:34"
                }
              ]
            },
            "documentation": {
              "id": 7778,
              "nodeType": "StructuredDocumentation",
              "src": "2068:160:34",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 7795,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7783,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7782,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4582,
                  "src": "2279:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:14:34"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7795,
                  "src": "2253:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:17:34"
            },
            "returnParameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2294:0:34"
            },
            "scope": 7836,
            "src": "2233:120:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7814,
              "nodeType": "Block",
              "src": "2654:65:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7808,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "2689:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2689:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2681:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7806,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2681:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2681:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7811,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7798,
                        "src": "2704:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7805,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4943,
                      "src": "2671:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7804,
                  "id": 7813,
                  "nodeType": "Return",
                  "src": "2664:48:34"
                }
              ]
            },
            "documentation": {
              "id": 7796,
              "nodeType": "StructuredDocumentation",
              "src": "2359:209:34",
              "text": " @notice Checks if a given account holds the Minter role.\n @param account The address which is checked for the Minter role.\n @return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 7815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7801,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7800,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4590,
                  "src": "2620:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:18:34"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7798,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7815,
                  "src": "2591:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2590:17:34"
            },
            "returnParameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7815,
                  "src": "2648:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7802,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:6:34"
            },
            "scope": 7836,
            "src": "2573:146:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7834,
              "nodeType": "Block",
              "src": "3020:65:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7828,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "3055:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3735_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 7829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3055:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3735",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 7827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3047:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 7826,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3047:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7831,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7818,
                        "src": "3070:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7825,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4943,
                      "src": "3037:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 7832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7824,
                  "id": 7833,
                  "nodeType": "Return",
                  "src": "3030:48:34"
                }
              ]
            },
            "documentation": {
              "id": 7816,
              "nodeType": "StructuredDocumentation",
              "src": "2725:209:34",
              "text": " @notice Checks if a given account holds the Burner role.\n @param account The address which is checked for the Burner role.\n @return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 7835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7820,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4590,
                  "src": "2986:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2986:18:34"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7818,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7835,
                  "src": "2957:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:17:34"
            },
            "returnParameters": {
              "id": 7824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7823,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7835,
                  "src": "3014:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7822,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3013:6:34"
            },
            "scope": 7836,
            "src": "2939:146:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7837,
        "src": "292:2795:34"
      }
    ],
    "src": "0:3088:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-22T14:01:04.308Z",
  "devdoc": {
    "details": "The contract deployer will initially be the only minter, burner and owner capable of adding new roles.",
    "methods": {
      "addBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Burner role is added."
        }
      },
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "addMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Minter role is added."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `value` tokens owned by `msg.sender`.",
        "params": {
          "value": "amount of tokens to burn."
        }
      },
      "constructor": {
        "params": {
          "tokenDecimals": "The number of decimals to define token precision.",
          "tokenName": "The name which describes the new token.",
          "tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isBurner(address)": {
        "params": {
          "account": "The address which is checked for the Burner role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Burner."
        }
      },
      "isMinter(address)": {
        "params": {
          "account": "The address which is checked for the Minter role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Minter."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints `value` tokens to `recipient`, returning true on success.",
        "params": {
          "recipient": "address to mint to.",
          "value": "amount of tokens to mint."
        },
        "returns": {
          "_0": "True if the mint succeeded, or False."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Burner role is removed."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "removeMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Minter role is removed."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "resetOwner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The new holder of the Owner role."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Burnable and mintable ERC20."
  },
  "userdoc": {
    "methods": {
      "addBurner(address)": {
        "notice": "Add Burner role to account."
      },
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "addMinter(address)": {
        "notice": "Add Minter role to account."
      },
      "constructor": "Constructs the SyntheticToken.",
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "isBurner(address)": {
        "notice": "Checks if a given account holds the Burner role."
      },
      "isMinter(address)": {
        "notice": "Checks if a given account holds the Minter role."
      },
      "removeBurner(address)": {
        "notice": "Removes Burner role from account."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "removeMinter(address)": {
        "notice": "Remove Minter role from account."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "resetOwner(address)": {
        "notice": "Reset Owner role to account."
      }
    }
  }
}