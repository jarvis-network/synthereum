{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe4ed9d633e8e678e8ece3756e4002cc7989b72cd29a17ecdacdabf4fd48820a7\",\"urls\":[\"bzz-raw://03a55c81a7d4c93a1ca6d9b931830c1fde2799bfbbf5841321f67e7b056c36c2\",\"dweb:/ipfs/QmbcgdfB278NvzVZKjA7Jf1NjSeCCQ2277mJGL4UskyS56\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x818233b2467c3cd7375f29a0ce2288ea6be2f28ab88e5f47c1456988967a4b52\",\"urls\":[\"bzz-raw://35508a62ba887f4e210f1a3e73912f88f88d9461bbafb30542757512cd004159\",\"dweb:/ipfs/QmeHzez7YWqiqqnoKdLjD6vhJoL7ct6rbbDC8wPSWQnra8\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xc547c79e93885c12382ce5418c778cf35530fe2dec58ec7589b88f80fd403441\",\"urls\":[\"bzz-raw://ca00c24d18261a841d86908e05b28488682ffc275cc8e705cd43ecc5066a95d1\",\"dweb:/ipfs/QmetjXHEufQ86honw7zFAp1F5pxr33gxkhtpZRy6H9445u\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x53b5f24782d9b652d7a6c474f59775b728aeae6182c8226e3127a1b1ebc0094e\",\"urls\":[\"bzz-raw://f4131d6e2be088c1d6f534d72a650b12257a6bcbcff94c2c9438cbb872c1caff\",\"dweb:/ipfs/QmTcc8eNuneJ1ZhpwAfYREjN4DjGyuMyh5Wzh826BCzd9T\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x6c5f4342f7caa1e312f54a2e23d7096bd5edbdb1bd5018d71d31191ef96bc94c\",\"urls\":[\"bzz-raw://086c9a4ca228edc46f84a72ef5cf2e7a3cc7ec21779f50f134d6465fdafeca82\",\"dweb:/ipfs/QmXGRya8Gg6aTxcwjPniDxVmUUeFyD2qhXrCAqhrdaHEuU\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x289cea8081b3796fa10df273d903a1467332ac2edf008b51c03872c1a33e1ec2\",\"urls\":[\"bzz-raw://f1cf1f1ecb61b8b4990ed8a55efb0e9e3d6bbe9bedb2b46dde27a0f8a46b35d7\",\"dweb:/ipfs/QmdXJevKLPLvrPpLtGJtq5xEeLz3wv96vSwZSBjvUfjvkf\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x0a4e294dc71ba22f4464a26c30c44b19abe94c80fbdd6f3258da70e2cbeca0d2\",\"urls\":[\"bzz-raw://50bd4f8196d9a4faa2aeb518d783ebdb8081a7ad3d98b42cb09661325d65049b\",\"dweb:/ipfs/QmbtTja1Qo3oZyGM7qTTp4M6dPcVRX9bWEYQa9D9ifipA8\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xbc0bed5d8dd8ce1c539f826a7bf171e26255fe0c1553866b3354215a33757fd6\",\"urls\":[\"bzz-raw://956162cf2a1f4e6aec23a691c95fd32fb67e3ca717d5c54c49a4268b57e76101\",\"dweb:/ipfs/QmXGWhMF57mqAerPWd62XYD1zoh8zogA5fkQkGkduzPepw\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dda04d1cbd7c09e7187c8d5c30074cc32f17e247adb84034c0b3e40dd96c74f\",\"urls\":[\"bzz-raw://2f06fa27e220da3d4e949b69ffc6225091ec031ad64cd5f9e9ea7c66c54304ae\",\"dweb:/ipfs/QmYBiLxdMBbhevWsGLLLSjpV92FqDVv5tB2LwiQsgwvLQz\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620022bc380380620022bc833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250839150829050620001be6301ffc9a760e01b6001600160e01b036200024516565b620001d96380ac58cd60e01b6001600160e01b036200024516565b620001f463780e9d6360e01b6001600160e01b036200024516565b815162000209906009906020850190620002ca565b5080516200021f90600a906020840190620002ca565b506200023b635b5e139f60e01b6001600160e01b036200024516565b505050506200036f565b6001600160e01b03198082161415620002a5576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200030d57805160ff19168380011785556200033d565b828001600101855582156200033d579182015b828111156200033d57825182559160200191906001019062000320565b506200034b9291506200034f565b5090565b6200036c91905b808211156200034b576000815560010162000356565b90565b611f3d806200037f6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80634f6ccce7116100b257806395d89b4111610081578063b88d4fde11610066578063b88d4fde14610402578063c87b56dd146104d5578063e985e9c5146104f25761011b565b806395d89b41146103bf578063a22cb465146103c75761011b565b80634f6ccce71461034a5780636352211e146103675780636c0360eb1461038457806370a082311461038c5761011b565b806318160ddd116100ee57806318160ddd1461027157806323b872dd1461028b5780632f745c59146102ce57806342842e0e146103075761011b565b806301ffc9a71461012057806306fdde0314610173578063081812fc146101f0578063095ea7b314610236575b600080fd5b61015f6004803603602081101561013657600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661052d565b604080519115158252519081900360200190f35b61017b610568565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020d6004803603602081101561020657600080fd5b503561061d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61026f6004803603604081101561024c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106a6565b005b6102796107e9565b60408051918252519081900360200190f35b61026f600480360360608110156102a157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107ef565b610279600480360360408110156102e457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610860565b61026f6004803603606081101561031d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610906565b6102796004803603602081101561036057600080fd5b5035610921565b61020d6004803603602081101561037d57600080fd5b50356109a1565b61017b610a22565b610279600480360360208110156103a257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa1565b61017b610b3d565b61026f600480360360408110156103dd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610bbc565b61026f6004803603608081101561041857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561046057600080fd5b82018360208201111561047257600080fd5b8035906020019184600183028401116401000000008311171561049457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2d945050505050565b61017b600480360360208110156104eb57600080fd5b5035610da5565b61015f6004803603604081101561050857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610fc7565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60098054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b820191906000526020600020905b8154815290600101906020018083116105f557829003601f168201915b505050505090505b90565b600061062882611002565b61067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611e06602c913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006106b1826109a1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610738576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e8a6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661075761102c565b73ffffffffffffffffffffffffffffffffffffffff16148061078557506107858161078061102c565b610fc7565b6107da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611d7b6038913960400191505060405180910390fd5b6107e48383611030565b505050565b60075490565b6108006107fa61102c565b826110d0565b610855576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611eab6031913960400191505060405180910390fd5b6107e48383836111c2565b600061086b83610aa1565b82106108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611cce602b913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090208054839081106108f357fe5b9060005260206000200154905092915050565b6107e483838360405180602001604052806000815250610d2d565b600061092b6107e9565b8210610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611edc602c913960400191505060405180910390fd5b6007828154811061098f57fe5b90600052602060002001549050919050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610a1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611ddd6029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b600073ffffffffffffffffffffffffffffffffffffffff8216610b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611db3602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610a1c906113ad565b600a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b610bc461102c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c5e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610c6b61102c565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610cda61102c565b604080518415158152905173ffffffffffffffffffffffffffffffffffffffff92909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3e610d3861102c565b836110d0565b610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611eab6031913960400191505060405180910390fd5b610d9f848484846113b1565b50505050565b6060610db082611002565b610e05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611e5b602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b50505050509050805160001415610edf575050604080516020810190915260008152610563565b600b816040516020018083805460018160011615610100020316600290048015610f405780601f10610f1e576101008083540402835291820191610f40565b820191906000526020600020905b815481529060010190602001808311610f2c575b5050825160208401908083835b60208310610f8a57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f4d565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610563565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b3390565b600081815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155819061108a826109a1565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110db82611002565b611130576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611d4f602c913960400191505060405180910390fd5b600061113b836109a1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111aa57508373ffffffffffffffffffffffffffffffffffffffff166111928461061d565b73ffffffffffffffffffffffffffffffffffffffff16145b806111ba57506111ba8185610fc7565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166111e2826109a1565b73ffffffffffffffffffffffffffffffffffffffff161461124e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611e326029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166112ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611d2b6024913960400191505060405180910390fd5b6112c583838361141d565b6112d0600082611030565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090206112fe90611428565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061132c9061143f565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b6113bc8484846111c2565b6113c884848484611448565b610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611cf96032913960400191505060405180910390fd5b6107e483838361179e565b805461143b90600163ffffffff61182016565b9055565b80546001019055565b60006114698473ffffffffffffffffffffffffffffffffffffffff16611869565b611475575060016111ba565b6000606073ffffffffffffffffffffffffffffffffffffffff86167f150b7a02000000000000000000000000000000000000000000000000000000006114b961102c565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561156657818101518382015260200161154e565b50505050905090810190601f1680156115935780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b6020831061166457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611627565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146116c6576040519150601f19603f3d011682016040523d82523d6000602084013e6116cb565b606091505b509150915081611736578051156116e55780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611cf96032913960400191505060405180910390fd5b600081806020019051602081101561174d57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001493506111ba92505050565b6117a98383836118a2565b73ffffffffffffffffffffffffffffffffffffffff82166107e4576000818152600c602052604090205460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001841615020190911604156107e4576000818152600c602052604081206107e491611c68565b600061186283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611931565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111ba575050151592915050565b6118ad8383836107e4565b73ffffffffffffffffffffffffffffffffffffffff83166118e0576118d282826119e2565b6118db81611a2d565b6107e4565b73ffffffffffffffffffffffffffffffffffffffff821661191d576119058382611a71565b6000818152600660205260408120556118db81611bb4565b6119278382611a71565b6107e482826119e2565b600081848411156119da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561199f578181015183820152602001611987565b50505050905090810190601f1680156119cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040812054611aa890600163ffffffff61182016565b600083815260066020526040902054909150808214611b6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805484908110611af257fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b4a57fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260409020805480611b9857fe5b6001900381819060005260206000200160009055905550505050565b600754600090611bcb90600163ffffffff61182016565b60008381526008602052604081205460078054939450909284908110611bed57fe5b906000526020600020015490508060078381548110611c0857fe5b60009182526020808320909101929092558281526008909152604090208290556007805480611c3357fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f10611c8e5750611cac565b601f016020900490600052602060002090810190611cac9190611caf565b50565b61061a91905b80821115611cc95760008155600101611cb5565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a2646970667358221220ee580d028f511139ccf28d1c7fbe6a98d1b69b76a863128452dd0c301e00549764736f6c63430006040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c80634f6ccce7116100b257806395d89b4111610081578063b88d4fde11610066578063b88d4fde14610402578063c87b56dd146104d5578063e985e9c5146104f25761011b565b806395d89b41146103bf578063a22cb465146103c75761011b565b80634f6ccce71461034a5780636352211e146103675780636c0360eb1461038457806370a082311461038c5761011b565b806318160ddd116100ee57806318160ddd1461027157806323b872dd1461028b5780632f745c59146102ce57806342842e0e146103075761011b565b806301ffc9a71461012057806306fdde0314610173578063081812fc146101f0578063095ea7b314610236575b600080fd5b61015f6004803603602081101561013657600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661052d565b604080519115158252519081900360200190f35b61017b610568565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020d6004803603602081101561020657600080fd5b503561061d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61026f6004803603604081101561024c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106a6565b005b6102796107e9565b60408051918252519081900360200190f35b61026f600480360360608110156102a157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107ef565b610279600480360360408110156102e457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610860565b61026f6004803603606081101561031d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610906565b6102796004803603602081101561036057600080fd5b5035610921565b61020d6004803603602081101561037d57600080fd5b50356109a1565b61017b610a22565b610279600480360360208110156103a257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa1565b61017b610b3d565b61026f600480360360408110156103dd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610bbc565b61026f6004803603608081101561041857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561046057600080fd5b82018360208201111561047257600080fd5b8035906020019184600183028401116401000000008311171561049457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2d945050505050565b61017b600480360360208110156104eb57600080fd5b5035610da5565b61015f6004803603604081101561050857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610fc7565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60098054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b820191906000526020600020905b8154815290600101906020018083116105f557829003601f168201915b505050505090505b90565b600061062882611002565b61067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611e06602c913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006106b1826109a1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610738576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e8a6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661075761102c565b73ffffffffffffffffffffffffffffffffffffffff16148061078557506107858161078061102c565b610fc7565b6107da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611d7b6038913960400191505060405180910390fd5b6107e48383611030565b505050565b60075490565b6108006107fa61102c565b826110d0565b610855576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611eab6031913960400191505060405180910390fd5b6107e48383836111c2565b600061086b83610aa1565b82106108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611cce602b913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090208054839081106108f357fe5b9060005260206000200154905092915050565b6107e483838360405180602001604052806000815250610d2d565b600061092b6107e9565b8210610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611edc602c913960400191505060405180910390fd5b6007828154811061098f57fe5b90600052602060002001549050919050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610a1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611ddd6029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b600073ffffffffffffffffffffffffffffffffffffffff8216610b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611db3602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610a1c906113ad565b600a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106125780601f106105e757610100808354040283529160200191610612565b610bc461102c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c5e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610c6b61102c565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610cda61102c565b604080518415158152905173ffffffffffffffffffffffffffffffffffffffff92909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3e610d3861102c565b836110d0565b610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611eab6031913960400191505060405180910390fd5b610d9f848484846113b1565b50505050565b6060610db082611002565b610e05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611e5b602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b50505050509050805160001415610edf575050604080516020810190915260008152610563565b600b816040516020018083805460018160011615610100020316600290048015610f405780601f10610f1e576101008083540402835291820191610f40565b820191906000526020600020905b815481529060010190602001808311610f2c575b5050825160208401908083835b60208310610f8a57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f4d565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610563565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b3390565b600081815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155819061108a826109a1565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110db82611002565b611130576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611d4f602c913960400191505060405180910390fd5b600061113b836109a1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111aa57508373ffffffffffffffffffffffffffffffffffffffff166111928461061d565b73ffffffffffffffffffffffffffffffffffffffff16145b806111ba57506111ba8185610fc7565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166111e2826109a1565b73ffffffffffffffffffffffffffffffffffffffff161461124e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611e326029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166112ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611d2b6024913960400191505060405180910390fd5b6112c583838361141d565b6112d0600082611030565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090206112fe90611428565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061132c9061143f565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b6113bc8484846111c2565b6113c884848484611448565b610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611cf96032913960400191505060405180910390fd5b6107e483838361179e565b805461143b90600163ffffffff61182016565b9055565b80546001019055565b60006114698473ffffffffffffffffffffffffffffffffffffffff16611869565b611475575060016111ba565b6000606073ffffffffffffffffffffffffffffffffffffffff86167f150b7a02000000000000000000000000000000000000000000000000000000006114b961102c565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561156657818101518382015260200161154e565b50505050905090810190601f1680156115935780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b6020831061166457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611627565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146116c6576040519150601f19603f3d011682016040523d82523d6000602084013e6116cb565b606091505b509150915081611736578051156116e55780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611cf96032913960400191505060405180910390fd5b600081806020019051602081101561174d57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001493506111ba92505050565b6117a98383836118a2565b73ffffffffffffffffffffffffffffffffffffffff82166107e4576000818152600c602052604090205460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001841615020190911604156107e4576000818152600c602052604081206107e491611c68565b600061186283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611931565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111ba575050151592915050565b6118ad8383836107e4565b73ffffffffffffffffffffffffffffffffffffffff83166118e0576118d282826119e2565b6118db81611a2d565b6107e4565b73ffffffffffffffffffffffffffffffffffffffff821661191d576119058382611a71565b6000818152600660205260408120556118db81611bb4565b6119278382611a71565b6107e482826119e2565b600081848411156119da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561199f578181015183820152602001611987565b50505050905090810190601f1680156119cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040812054611aa890600163ffffffff61182016565b600083815260066020526040902054909150808214611b6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805484908110611af257fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b4a57fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260409020805480611b9857fe5b6001900381819060005260206000200160009055905550505050565b600754600090611bcb90600163ffffffff61182016565b60008381526008602052604081205460078054939450909284908110611bed57fe5b906000526020600020015490508060078381548110611c0857fe5b60009182526020808320909101929092558281526008909152604090208290556007805480611c3357fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f10611c8e5750611cac565b601f016020900490600052602060002090810190611cac9190611caf565b50565b61061a91905b80821115611cc95760008155600101611cb5565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a2646970667358221220ee580d028f511139ccf28d1c7fbe6a98d1b69b76a863128452dd0c301e00549764736f6c63430006040033",
  "sourceMap": "363:387:42:-:0;;;425:94;5:9:-1;2:2;;;27:1;24;17:12;2:2;425:94:42;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;425:94:42;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;425:94:42;;420:4:-1;411:14;;;;425:94:42;;;;;411:14:-1;425:94:42;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;425:94:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;425:94:42;;420:4:-1;411:14;;;;425:94:42;;;;;411:14:-1;425:94:42;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;425:94:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;425:94:42;;-1:-1:-1;502:4:42;;-1:-1:-1;508:6:42;;-1:-1:-1;718:40:15;-1:-1:-1;;;;;;;;718:18:15;:40;:::i;:::-;2262::39;-1:-1:-1;;;;;;;;2262:18:39;:40;:::i;:::-;1357:51:41;-1:-1:-1;;;;;;;;1357:18:41;:51;:::i;:::-;912:12:44;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;934:16:44;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1038:49:44;-1:-1:-1;;;;;;;;1038:18:44;:49;:::i;:::-;840:254;;425:94:42;;363:387;;1451:198:15;-1:-1:-1;;;;;;1534:25:15;;;;;1526:66;;;;;-1:-1:-1;;;1526:66:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1602:33:15;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1602:40:15;1638:4;1602:40;;;1451:198::o;363:387:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;363:387:42;;;-1:-1:-1;363:387:42;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "363:387:42:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;363:387:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:142:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:142:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1199:92:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1199:92:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:209:39;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4267:209:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;3601:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3601:381:39;;;;;;;;;:::i;:::-;;2180:103:41;;;:::i;:::-;;;;;;;;;;;;;;;;5978:304:39;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5978:304:39;;;;;;;;;;;;;;;;;;:::i;1789:238:41:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1789:238:41;;;;;;;;;:::i;6931:149:39:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6931:149:39;;;;;;;;;;;;;;;;;;:::i;2621:205:41:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2621:205:41;;:::i;2948:232:39:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2948:232:39;;:::i;3430:89:44:-;;;:::i;2513:216:39:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2513:216:39;;;;:::i;1400:96:44:-;;;:::i;4775:290:39:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4775:290:39;;;;;;;;;;;:::i;7803:286::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;7803:286:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7803:286:39;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7803:286:39;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7803:286:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7803:286:39;;-1:-1:-1;7803:286:39;;-1:-1:-1;;;;;7803:286:39:i;1799:554:44:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1799:554:44;;:::i;5387:154:39:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5387:154:39;;;;;;;;;;;:::i;915:142:15:-;1017:33;;;994:4;1017:33;;;;;;;;;;;;;915:142;;;;:::o;1199:92:44:-;1279:5;1272:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:13;;1272:12;;1279:5;;1272:12;;1279:5;1272:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:92;;:::o;4267:209:39:-;4335:7;4362:16;4370:7;4362;:16::i;:::-;4354:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4445:24:39;;;;:15;:24;;;;;;;;;4267:209::o;3601:381::-;3681:13;3697:16;3705:7;3697;:16::i;:::-;3681:32;;3737:5;3731:11;;:2;:11;;;;3723:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3815:5;3799:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3824:37;3841:5;3848:12;:10;:12::i;:::-;3824:16;:37::i;:::-;3791:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3954:21;3963:2;3967:7;3954:8;:21::i;:::-;3601:381;;;:::o;2180:103:41:-;2259:10;:17;2180:103;:::o;5978:304:39:-;6137:41;6156:12;:10;:12::i;:::-;6170:7;6137:18;:41::i;:::-;6129:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6243:32;6257:4;6263:2;6267:7;6243:13;:32::i;1789:238:41:-;1878:7;1913:16;1923:5;1913:9;:16::i;:::-;1905:5;:24;1897:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:19;;;;;;;:12;:19;;;;;:26;;2014:5;;1994:26;;;;;;;;;;;;;;1987:33;;1789:238;;;;:::o;6931:149:39:-;7034:39;7051:4;7057:2;7061:7;7034:39;;;;;;;;;;;;:16;:39::i;2621:205:41:-;2688:7;2723:13;:11;:13::i;:::-;2715:5;:21;2707:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2802:10;2813:5;2802:17;;;;;;;;;;;;;;;;2795:24;;2621:205;;;:::o;2948:232:39:-;3012:7;3047:20;;;:11;:20;;;;;;;;3085:19;3077:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3168:5;2948:232;-1:-1:-1;;2948:232:39:o;3430:89:44:-;3504:8;3497:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3472:13;;3497:15;;3504:8;;3497:15;;3504:8;3497:15;;;;;;;;;;;;;;;;;;;;;;;;2513:216:39;2577:7;2604:19;;;2596:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2688:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;1400:96:44:-;1482:7;1475:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:13;;1475:14;;1482:7;;1475:14;;1482:7;1475:14;;;;;;;;;;;;;;;;;;;;;;;;4775:290:39;4889:12;:10;:12::i;:::-;4877:24;;:8;:24;;;;4869:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4987:8;4942:18;:32;4961:12;:10;:12::i;:::-;4942:32;;;;;;;;;;;;;;;;;;-1:-1:-1;4942:32:39;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;5025:12;:10;:12::i;:::-;5010:48;;;;;;;;;;;;;;;;;;;;;;;;;4775:290;;:::o;7803:286::-;7934:41;7953:12;:10;:12::i;:::-;7967:7;7934:18;:41::i;:::-;7926:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8039:43;8057:4;8063:2;8067:7;8076:5;8039:17;:43::i;:::-;7803:286;;;;:::o;1799:554:44:-;1866:13;1899:16;1907:7;1899;:16::i;:::-;1891:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:19;;;;:10;:19;;;;;;;;;1978:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2004:19;1978:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:9;2131:23;2158:1;2131:28;2127:220;;;-1:-1:-1;;2175:9:44;;;;;;;;;-1:-1:-1;2175:9:44;;;;2127:220;2315:8;2325:9;2298:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2298:37:44;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2298:37:44;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2298:37:44;;;2284:52;;;;;5387:154:39;5499:25;;;;5476:4;5499:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5387:154::o;9266:152::-;9323:4;9355:20;;;:11;:20;;;;;;;;9392:19;;;9266:152::o;735:104:0:-;822:10;735:104;:::o;15819:155:39:-;15884:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;15937:16;15884:24;15937:7;:16::i;:::-;15928:39;;;;;;;;;;;;15819:155;;:::o;9779:329::-;9864:4;9888:16;9896:7;9888;:16::i;:::-;9880:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9963:13;9979:16;9987:7;9979;:16::i;:::-;9963:32;;10024:5;10013:16;;:7;:16;;;:51;;;;10057:7;10033:31;;:20;10045:7;10033:11;:20::i;:::-;:31;;;10013:51;:87;;;;10068:32;10085:5;10092:7;10068:16;:32::i;:::-;10005:96;9779:329;-1:-1:-1;;;;9779:329:39:o;13577:538::-;13698:4;13678:24;;:16;13686:7;13678;:16::i;:::-;:24;;;13670:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13766:16;;;13758:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13834:39;13855:4;13861:2;13865:7;13834:20;:39::i;:::-;13911:29;13928:1;13932:7;13911:8;:29::i;:::-;13951:23;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;13996:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;14040:20;;;;:11;:20;;;;;;:25;;;;;;;;;;;;;;14081:27;;14040:20;;14081:27;;;;;;;13577:538;;;:::o;1065:112:9:-;1156:14;;1065:112::o;8794:277:39:-;8911:32;8925:4;8931:2;8935:7;8911:13;:32::i;:::-;8961:48;8984:4;8990:2;8994:7;9003:5;8961:22;:48::i;:::-;8953:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:223:42;696:45;723:4;729:2;733:7;696:26;:45::i;1367:108:9:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;14754:1059:39:-;14883:4;14908:15;:2;:13;;;:15::i;:::-;14903:58;;-1:-1:-1;14946:4:39;14939:11;;14903:58;15030:12;15044:23;15071:7;;;15115:45;15174:12;:10;:12::i;:::-;15200:4;15218:7;15239:5;15079:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15079:175:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15079:175:39;;;22:32:-1;26:21;;;22:32;6:49;;15079:175:39;;;49:4:-1;25:18;;61:17;;15079:175:39;182:15:-1;15079:175:39;;;;179:29:-1;;;;160:49;;15071:184:39;;;15079:175;;15071:184;;-1:-1:-1;15071:184:39;;-1:-1:-1;25:18;-1:-1;15071:184:39;-1:-1:-1;15071:184:39;;-1:-1:-1;15071:184:39;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15071:184:39;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15029:226:39;;;;15270:7;15265:542;;15297:17;;:21;15293:376;;15462:10;15456:17;15522:15;15509:10;15505:2;15501:19;15494:44;15411:145;15594:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15265:542;15699:13;15726:10;15715:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;15715:32:39;15769:26;;15779:16;15769:26;;-1:-1:-1;15761:35:39;;-1:-1:-1;;;15761:35:39;3526:382:44;3635:45;3662:4;3668:2;3672:7;3635:26;:45::i;:::-;3695:16;;;3691:211;;3799:19;;;;:10;:19;;;;;3793:33;;;;;;;;;;;;;;:38;3789:103;;3858:19;;;;:10;:19;;;;;3851:26;;;:::i;1274:134:23:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:23:o;685:610:55:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:55;;;1237:51;-1:-1:-1;;685:610:55:o;2832:819:41:-;2941:45;2968:4;2974:2;2978:7;2941:26;:45::i;:::-;3001:18;;;2997:648;;3063:40;3091:2;3095:7;3063:27;:40::i;:::-;3117;3149:7;3117:31;:40::i;:::-;2997:648;;;3178:16;;;3174:471;;3238:47;3271:4;3277:7;3238:32;:47::i;:::-;3441:1;3412:26;;;:17;:26;;;;;:30;3457:45;3430:7;3457:36;:45::i;3174:471::-;3533:47;3566:4;3572:7;3533:32;:47::i;:::-;3594:40;3622:2;3626:7;3594:27;:40::i;1732:187:23:-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:23;;;1732:187::o;4274:183:41:-;4387:16;;;;;;;;:12;:16;;;;;;;;:23;;4358:26;;;:17;:26;;;;;:52;;;4420:16;;;39:1:-1;23:18;;45:23;;4420:30:41;;;;;;;;4274:183::o;4652:161::-;4755:10;:17;;4728:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4782:24:41;;;;;;;4652:161::o;5430:1115::-;5717:18;;;5692:22;5717:18;;;:12;:18;;;;;:25;:32;;5747:1;5717:32;:29;:32;:::i;:::-;5759:18;5780:26;;;:17;:26;;;;;;5692:57;;-1:-1:-1;5910:28:41;;;5906:323;;5976:18;;;5954:19;5976:18;;;:12;:18;;;;;:34;;5995:14;;5976:34;;;;;;;;;;;;;;5954:56;;6058:11;6025:12;:18;6038:4;6025:18;;;;;;;;;;;;;;;6044:10;6025:30;;;;;;;;;;;;;;;;;;;:44;;;;6141:30;;;:17;:30;;;;;:43;;;5906:323;6305:18;;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5430:1115;;;;:::o;6833:1051::-;7107:10;:17;7082:22;;7107:24;;7129:1;7107:24;:21;:24;:::i;:::-;7141:18;7162:24;;;:15;:24;;;;;;7530:10;:26;;7082:49;;-1:-1:-1;7162:24:41;;7082:49;;7530:26;;;;;;;;;;;;;;7508:48;;7592:11;7567:10;7578;7567:22;;;;;;;;;;;;;;;;;;;:36;;;;7671:28;;;:15;:28;;;;;;:41;;;7822:10;:16;;;;;;;;;;;;;;;;;;;;;;;;7876:1;7849:15;:24;7865:7;7849:24;;;;;;;;;;;:28;;;;6833:1051;;;;:::o;363:387:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology.\n *\n * See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) { }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId)\n        virtual\n        override(ERC721Enumerable, ERC721Metadata)\n        internal\n    {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        6475
      ]
    },
    "id": 6476,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6434,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:42"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 6435,
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6433,
        "src": "25:32:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 6436,
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6699,
        "src": "58:30:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6438,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6432,
              "src": "386:16:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$6432",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 6439,
            "nodeType": "InheritanceSpecifier",
            "src": "386:16:42"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6440,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6698,
              "src": "404:14:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$6698",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 6441,
            "nodeType": "InheritanceSpecifier",
            "src": "404:14:42"
          }
        ],
        "contractDependencies": [
          26,
          2582,
          2829,
          6061,
          6432,
          6698,
          6842,
          6870,
          6907
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6437,
          "nodeType": "StructuredDocumentation",
          "src": "90:272:42",
          "text": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 6475,
        "linearizedBaseContracts": [
          6475,
          6698,
          6907,
          6432,
          6870,
          6061,
          6842,
          2582,
          2829,
          26
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6452,
              "nodeType": "Block",
              "src": "516:3:42",
              "statements": []
            },
            "documentation": null,
            "id": 6453,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6448,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6443,
                    "src": "502:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6449,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6445,
                    "src": "508:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6450,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6447,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6698,
                  "src": "487:14:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$6698_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "487:28:42"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6443,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6453,
                  "src": "438:18:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6442,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6445,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6453,
                  "src": "458:20:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6444,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:42:42"
            },
            "returnParameters": {
              "id": 6451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:42"
            },
            "scope": 6475,
            "src": "425:94:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6264,
              6697
            ],
            "body": {
              "id": 6473,
              "nodeType": "Block",
              "src": "686:62:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6468,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6455,
                        "src": "723:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6469,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6457,
                        "src": "729:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6470,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6459,
                        "src": "733:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6465,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "696:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Full_$6475",
                          "typeString": "contract super ERC721Full"
                        }
                      },
                      "id": 6467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6697,
                      "src": "696:26:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:45:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6472,
                  "nodeType": "ExpressionStatement",
                  "src": "696:45:42"
                }
              ]
            },
            "documentation": null,
            "id": 6474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6463,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 6461,
                  "name": "ERC721Enumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6432,
                  "src": "631:16:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Enumerable_$6432",
                    "typeString": "contract ERC721Enumerable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 6462,
                  "name": "ERC721Metadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6698,
                  "src": "649:14:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Metadata_$6698",
                    "typeString": "contract ERC721Metadata"
                  }
                }
              ],
              "src": "622:42:42"
            },
            "parameters": {
              "id": 6460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6455,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "555:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6457,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "569:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6459,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "581:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:43:42"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:42"
            },
            "scope": 6475,
            "src": "525:223:42",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6476,
        "src": "363:387:42"
      }
    ],
    "src": "0:751:42"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        6475
      ]
    },
    "id": 6476,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6434,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:42"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 6435,
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6433,
        "src": "25:32:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 6436,
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6699,
        "src": "58:30:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6438,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6432,
              "src": "386:16:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$6432",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 6439,
            "nodeType": "InheritanceSpecifier",
            "src": "386:16:42"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6440,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6698,
              "src": "404:14:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$6698",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 6441,
            "nodeType": "InheritanceSpecifier",
            "src": "404:14:42"
          }
        ],
        "contractDependencies": [
          26,
          2582,
          2829,
          6061,
          6432,
          6698,
          6842,
          6870,
          6907
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6437,
          "nodeType": "StructuredDocumentation",
          "src": "90:272:42",
          "text": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 6475,
        "linearizedBaseContracts": [
          6475,
          6698,
          6907,
          6432,
          6870,
          6061,
          6842,
          2582,
          2829,
          26
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6452,
              "nodeType": "Block",
              "src": "516:3:42",
              "statements": []
            },
            "documentation": null,
            "id": 6453,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6448,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6443,
                    "src": "502:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6449,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6445,
                    "src": "508:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6450,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6447,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6698,
                  "src": "487:14:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$6698_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "487:28:42"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6443,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6453,
                  "src": "438:18:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6442,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6445,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6453,
                  "src": "458:20:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6444,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:42:42"
            },
            "returnParameters": {
              "id": 6451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:0:42"
            },
            "scope": 6475,
            "src": "425:94:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6264,
              6697
            ],
            "body": {
              "id": 6473,
              "nodeType": "Block",
              "src": "686:62:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6468,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6455,
                        "src": "723:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6469,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6457,
                        "src": "729:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6470,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6459,
                        "src": "733:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6465,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "696:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Full_$6475",
                          "typeString": "contract super ERC721Full"
                        }
                      },
                      "id": 6467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6697,
                      "src": "696:26:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:45:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6472,
                  "nodeType": "ExpressionStatement",
                  "src": "696:45:42"
                }
              ]
            },
            "documentation": null,
            "id": 6474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6463,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 6461,
                  "name": "ERC721Enumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6432,
                  "src": "631:16:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Enumerable_$6432",
                    "typeString": "contract ERC721Enumerable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 6462,
                  "name": "ERC721Metadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6698,
                  "src": "649:14:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Metadata_$6698",
                    "typeString": "contract ERC721Metadata"
                  }
                }
              ],
              "src": "622:42:42"
            },
            "parameters": {
              "id": 6460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6455,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "555:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6457,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "569:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6459,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6474,
                  "src": "581:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:43:42"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:42"
            },
            "scope": 6475,
            "src": "525:223:42",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6476,
        "src": "363:387:42"
      }
    ],
    "src": "0:751:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-09T12:52:48.832Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}