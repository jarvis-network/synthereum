{
  "contractName": "WithdrawableTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\"},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\"},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role.\"}}},\"userdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/test/WithdrawableTest.sol\":\"WithdrawableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x292293332467c5c7b70566f0027258a8f19004e969f851821a49aff9a561ed04\",\"urls\":[\"bzz-raw://310333655fb54c503cf4c1fc0218cbe2a367ef766632f4202594f8f4aa277216\",\"dweb:/ipfs/Qma6YduUK1GYww9as1u6mov1TbnMn2FSobPMBPV5TyhGUu\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0xd2e752d45d19e78d208db345e8fbd94517ad0a9600f99f7974b986cc434e2257\",\"urls\":[\"bzz-raw://2d5adc9f8f58c478d20a701f6864ba179675ecf1429914b9443c784b6cd3ad01\",\"dweb:/ipfs/QmaZJ9dXQqifvR15fM53Q7hNLyVREvhyEJ4DmBWSJqCBXk\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/test/WithdrawableTest.sol\":{\"keccak256\":\"0x9a4e1c530c437acfb23e84a1d3f48b0d42b3e58b85dca6fcc2b484de8b05103a\",\"urls\":[\"bzz-raw://0a4c12f5a06e8e124b9cfb1298e3b03d02ebc0742b8bccb08f511f2528d43f99\",\"dweb:/ipfs/QmSmbuKEXJuK11AuHaBbwu6rK2UNfsLrVgfx3zmm6G7HFv\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610026600080336001600160e01b0361004116565b61003c60016000336001600160e01b0361015416565b6101eb565b826000808281526020819052604090206001015460ff16600281111561006357fe5b146100b5576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526020819052604090206001808201805460ff1916828002179055508381556100f06002820184610172602090811b610a7a17901c565b60008481526020819052604081206001015460ff16600281111561011057fe5b141561014d5760405162461bcd60e51b815260040180806020018281038252603c815260200180610d7c603c913960400191505060405180910390fd5b5050505050565b600183905561016d8383836001600160e01b0361004116565b505050565b61018582826001600160e01b0361018916565b5050565b6001600160a01b0381166101ce5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610b82806101fa6000396000f3fe60806040526004361061007b5760003560e01c80637cdc1cb91161004e5780637cdc1cb914610140578063ab3545e51461019a578063bd1f4b52146101ed578063d97c05be146102335761007b565b80631b9265b8146100805780632e1a7d4d1461008a5780636be7658b146100b457806374d0a676146100fa575b600080fd5b610088610279565b005b34801561009657600080fd5b50610088600480360360208110156100ad57600080fd5b5035610288565b3480156100c057600080fd5b50610088600480360360408110156100d757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661031c565b34801561010657600080fd5b506100886004803603604081101561011d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661042c565b34801561014c57600080fd5b506101866004803603604081101561016357600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610536565b604080519115158252519081900360200190f35b3480156101a657600080fd5b506101c4600480360360208110156101bd57600080fd5b5035610614565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156101f957600080fd5b506100886004803603604081101561021057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106b0565b34801561023f57600080fd5b506100886004803603604081101561025657600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166107bf565b6000341161028657600080fd5b565b6001546102958133610536565b6102ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae46022913960400191505060405180910390fd5b604051339083156108fc029084906000818181858888f19350505050158015610317573d6000803e3d6000fd5b505050565b81600260008281526020819052604090206001015460ff16600281111561033f57fe5b14610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ab8602c913960400191505060405180910390fd5b60008381526020819052604090205483906103b09033610536565b610405576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906003018463ffffffff6108c916565b50505050565b81600260008281526020819052604090206001015460ff16600281111561044f57fe5b146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ab8602c913960400191505060405180910390fd5b60008381526020819052604090205483906104c09033610536565b610515576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906003018463ffffffff61091616565b600082815260208190526040812060018082015460ff16600281111561055857fe5b141561057957610571600282018463ffffffff61096616565b91505061060e565b6002600182015460ff16600281111561058e57fe5b14156105a757610571600382018463ffffffff61098616565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b92915050565b600081600160008281526020819052604090206001015460ff16600281111561063957fe5b1461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610a89602f913960400191505060405180910390fd5b60008381526020819052604090206106a9906002016109b2565b9392505050565b6001546106bd8133610536565b610712576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae46022913960400191505060405180910390fd5b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490529051849173ffffffffffffffffffffffffffffffffffffffff83169163a9059cbb916044808201926020929091908290030181600087803b15801561078a57600080fd5b505af115801561079e573d6000803e3d6000fd5b505050506040513d60208110156107b457600080fd5b505161042657600080fd5b81600160008281526020819052604090206001015460ff1660028111156107e257fe5b14610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610a89602f913960400191505060405180910390fd5b60008381526020819052604090205483906108539033610536565b6108a8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906002018463ffffffff6109cc16565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610b066023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b610a8482826109cc565b505056fe4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e61676572a26469706673582212203df4fd6020ecc15510e457cb8cf92c2eee4c3e89d10f051e7da66cd2a9872a0e64736f6c63430006040033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637cdc1cb91161004e5780637cdc1cb914610140578063ab3545e51461019a578063bd1f4b52146101ed578063d97c05be146102335761007b565b80631b9265b8146100805780632e1a7d4d1461008a5780636be7658b146100b457806374d0a676146100fa575b600080fd5b610088610279565b005b34801561009657600080fd5b50610088600480360360208110156100ad57600080fd5b5035610288565b3480156100c057600080fd5b50610088600480360360408110156100d757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661031c565b34801561010657600080fd5b506100886004803603604081101561011d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661042c565b34801561014c57600080fd5b506101866004803603604081101561016357600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610536565b604080519115158252519081900360200190f35b3480156101a657600080fd5b506101c4600480360360208110156101bd57600080fd5b5035610614565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156101f957600080fd5b506100886004803603604081101561021057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106b0565b34801561023f57600080fd5b506100886004803603604081101561025657600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166107bf565b6000341161028657600080fd5b565b6001546102958133610536565b6102ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae46022913960400191505060405180910390fd5b604051339083156108fc029084906000818181858888f19350505050158015610317573d6000803e3d6000fd5b505050565b81600260008281526020819052604090206001015460ff16600281111561033f57fe5b14610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ab8602c913960400191505060405180910390fd5b60008381526020819052604090205483906103b09033610536565b610405576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906003018463ffffffff6108c916565b50505050565b81600260008281526020819052604090206001015460ff16600281111561044f57fe5b146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ab8602c913960400191505060405180910390fd5b60008381526020819052604090205483906104c09033610536565b610515576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906003018463ffffffff61091616565b600082815260208190526040812060018082015460ff16600281111561055857fe5b141561057957610571600282018463ffffffff61096616565b91505061060e565b6002600182015460ff16600281111561058e57fe5b14156105a757610571600382018463ffffffff61098616565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b92915050565b600081600160008281526020819052604090206001015460ff16600281111561063957fe5b1461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610a89602f913960400191505060405180910390fd5b60008381526020819052604090206106a9906002016109b2565b9392505050565b6001546106bd8133610536565b610712576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae46022913960400191505060405180910390fd5b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490529051849173ffffffffffffffffffffffffffffffffffffffff83169163a9059cbb916044808201926020929091908290030181600087803b15801561078a57600080fd5b505af115801561079e573d6000803e3d6000fd5b505050506040513d60208110156107b457600080fd5b505161042657600080fd5b81600160008281526020819052604090206001015460ff1660028111156107e257fe5b14610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610a89602f913960400191505060405180910390fd5b60008381526020819052604090205483906108539033610536565b6108a8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b296024913960400191505060405180910390fd5b6000848152602081905260409020610426906002018463ffffffff6109cc16565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610b066023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b610a8482826109cc565b505056fe4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e61676572a26469706673582212203df4fd6020ecc15510e457cb8cf92c2eee4c3e89d10f051e7da66cd2a9872a0e64736f6c63430006040033",
  "sourceMap": "165:421:22:-:0;;;303:204;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;334:80:22;360:16;384;403:10;-1:-1:-1;;;;;334:20:22;:80;:::i;:::-;424:76;448:14;470:16;489:10;-1:-1:-1;;;;;424:18:22;:76;:::i;:::-;165:421;;6988:503:12;7116:6;5747:16;5721:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;5713:85;;;;;-1:-1:-1;;;5713:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:17:::1;7158:13:::0;;;::::1;::::0;;;;;;7197:18:::1;7181:13:::0;;::::1;:34:::0;;-1:-1:-1;;7181:34:12::1;7197:18:::0;;7181:34:::1;;::::0;;-1:-1:-1;7225:34:12;;;7269:48:::1;:28;::::0;::::1;7303:13:::0;7269:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;7382:16;7348:21:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;7327:157;;;;-1:-1:-1::0;;;7327:157:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5808:1;6988:503:::0;;;;:::o;1036:180:15:-;1132:7;:16;;;1158:51;1142:6;1187:14;1203:5;-1:-1:-1;;;;;1158:20:15;:51;:::i;:::-;1036:180;;;:::o;654:144:12:-;749:42;761:14;777:13;-1:-1:-1;;;;;749:11:12;:42;:::i;:::-;654:144;;:::o;286:221::-;-1:-1:-1;;;;;392:25:12;;384:73;;;;-1:-1:-1;;;384:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:12;-1:-1:-1;;;;;467:33:12;;;;;;;286:221::o;165:421:22:-;;;;;;;",
  "deployedSourceMap": "165:421:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;513:71:22;;;:::i;:::-;;402:108:15;;5:9:-1;2:2;;;27:1;24;17:12;2:2;402:108:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;402:108:15;;:::i;5173:189:12:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5173:189:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5173:189:12;;;;;;;;;:::i;4752:173::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4752:173:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4752:173:12;;;;;;;;;:::i;3320:433::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3320:433:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3320:433:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4357:157;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4357:157:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4357:157:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;589:196:15;;5:9:-1;2:2;;;27:1;24;17:12;2:2;589:196:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;589:196:15;;;;;;;;;:::i;3997:183:12:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3997:183:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3997:183:12;;;;;;;;;:::i;513:71:22:-;575:1;563:9;:13;555:22;;12:1:-1;9;2:12;555:22:22;513:71::o;402:108:15:-;457:7;;2251:29:12;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;476:27:15::1;::::0;:10:::1;::::0;:27;::::1;;;::::0;496:6;;476:27:::1;::::0;;;496:6;476:10;:27;::::1;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;476:27:15;402:108:::0;;:::o;5173:189:12:-;5250:6;3080:15;3054:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;5274:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5292:5:::2;:13:::0;;;::::2;::::0;;;;;;:63:::2;::::0;:34:::2;;5340:14:::0;5292:63:::2;:47;:63;:::i;:::-;3154:1:::1;5173:189:::0;;;:::o;4752:173::-;4821:6;3080:15;3054:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;4845:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4863:5:::2;:13:::0;;;::::2;::::0;;;;;;:55:::2;::::0;:34:::2;;4908:9:::0;4863:55:::2;:44;:55;:::i;3320:433::-:0;3396:4;3432:13;;;;;;;;;;3476:18;3459:13;;;;;;:35;;;;;;;;;3455:250;;;3517:52;:28;;;3555:13;3517:52;:37;:52;:::i;:::-;3510:59;;;;;3455:250;3607:15;3590:13;;;;;;:32;;;;;;;;;3586:119;;;3645:49;:25;;;3680:13;3645:49;:34;:49;:::i;3586:119::-;3714:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3320:433;;;;;:::o;4357:157::-;4432:7;4415:6;2810:18;2784:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4458:5:::1;:13:::0;;;::::1;::::0;;;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;4451:56:::0;4357:157;-1:-1:-1;;;4357:157:12:o;589:196:15:-;671:7;;2251:29:12;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:34:15::1;::::0;;;;;758:10:::1;743:34;::::0;::::1;::::0;;;;;;;;;712:12;;743:14:::1;::::0;::::1;::::0;::::1;::::0;:34;;;;;::::1;::::0;;;;;;;;;690:12:::1;743:14:::0;:34;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;743:34:15;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;743:34:15;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;743:34:15;735:43:::1;;12:1:-1;9::::0;2:12:::1;3997:183:12::0;4071:6;2810:18;2784:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;4095:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:5:::2;:13:::0;;;::::2;::::0;;;;;;:60:::2;::::0;:37:::2;;4163:9:::0;4113:60:::2;:49;:60;:::i;1230:157::-:0;1334:38;;1375:5;1334:38;;;;;;;;;;;:46;;;;;;1230:157::o;1077:147::-;1175:35;;:22;:35;;;;;;;;;;;:42;;;;1213:4;1175:42;;;1077:147::o;109:171::-;235:21;;:38;;;;:21;;:38;;109:171::o;901:170::-;1027:37;;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;;;;513:135::o;286:221::-;392:25;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;;;;;;;;;;;286:221::o;654:144::-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../implementation/Withdrawable.sol\";\n\n\n// WithdrawableTest is derived from the abstract contract Withdrawable for testing purposes.\ncontract WithdrawableTest is Withdrawable {\n    enum Roles { Governance, Withdraw }\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor() public {\n        _createExclusiveRole(uint(Roles.Governance), uint(Roles.Governance), msg.sender);\n        createWithdrawRole(uint(Roles.Withdraw), uint(Roles.Governance), msg.sender);\n    }\n\n    function pay() external payable {\n        require(msg.value > 0);\n    }\n}\n",
  "sourcePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/test/WithdrawableTest.sol",
  "ast": {
    "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        5658
      ]
    },
    "id": 5659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5606,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 5607,
        "nodeType": "ImportDirective",
        "scope": 5659,
        "sourceUnit": 4835,
        "src": "25:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5608,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4834,
              "src": "194:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$4834",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 5609,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:22"
          }
        ],
        "contractDependencies": [
          4636,
          4834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5658,
        "linearizedBaseContracts": [
          5658,
          4834,
          4636
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 5612,
            "members": [
              {
                "id": 5610,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:22"
              },
              {
                "id": 5611,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:22"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:22"
          },
          {
            "body": {
              "id": 5645,
              "nodeType": "Block",
              "src": "324:183:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5618,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "360:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "360:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5616,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5623,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "384:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "384:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "379:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5621,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "379:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "379:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "403:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "403:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5615,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "334:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5629,
                  "nodeType": "ExpressionStatement",
                  "src": "334:80:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5633,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "448:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "448:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "443:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5631,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "443:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5638,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "470:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "470:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "465:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5636,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "465:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "465:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "489:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "489:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5630,
                      "name": "createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4822,
                      "src": "424:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:76:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5644,
                  "nodeType": "ExpressionStatement",
                  "src": "424:76:22"
                }
              ]
            },
            "documentation": null,
            "id": 5646,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:22"
            },
            "returnParameters": {
              "id": 5614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:22"
            },
            "scope": 5658,
            "src": "303:204:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5656,
              "nodeType": "Block",
              "src": "545:39:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5650,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "563:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "563:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "575:1:22",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "563:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "555:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5655,
                  "nodeType": "ExpressionStatement",
                  "src": "555:22:22"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 5657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:22"
            },
            "returnParameters": {
              "id": 5648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:22"
            },
            "scope": 5658,
            "src": "513:71:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5659,
        "src": "165:421:22"
      }
    ],
    "src": "0:587:22"
  },
  "legacyAST": {
    "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        5658
      ]
    },
    "id": 5659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5606,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 5607,
        "nodeType": "ImportDirective",
        "scope": 5659,
        "sourceUnit": 4835,
        "src": "25:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5608,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4834,
              "src": "194:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$4834",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 5609,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:22"
          }
        ],
        "contractDependencies": [
          4636,
          4834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5658,
        "linearizedBaseContracts": [
          5658,
          4834,
          4636
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 5612,
            "members": [
              {
                "id": 5610,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:22"
              },
              {
                "id": 5611,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:22"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:22"
          },
          {
            "body": {
              "id": 5645,
              "nodeType": "Block",
              "src": "324:183:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5618,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "360:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "360:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5616,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5623,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "384:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "384:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "379:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5621,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "379:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "379:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "403:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "403:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5615,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "334:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5629,
                  "nodeType": "ExpressionStatement",
                  "src": "334:80:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5633,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "448:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "448:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "443:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5631,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "443:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5638,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5612,
                              "src": "470:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5612_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "470:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5612",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "465:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5636,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "465:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "465:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "489:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "489:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5630,
                      "name": "createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4822,
                      "src": "424:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:76:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5644,
                  "nodeType": "ExpressionStatement",
                  "src": "424:76:22"
                }
              ]
            },
            "documentation": null,
            "id": 5646,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:22"
            },
            "returnParameters": {
              "id": 5614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:22"
            },
            "scope": 5658,
            "src": "303:204:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5656,
              "nodeType": "Block",
              "src": "545:39:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5650,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "563:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "563:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "575:1:22",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "563:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "555:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5655,
                  "nodeType": "ExpressionStatement",
                  "src": "555:22:22"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 5657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:22"
            },
            "returnParameters": {
              "id": 5648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:22"
            },
            "scope": 5658,
            "src": "513:71:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5659,
        "src": "165:421:22"
      }
    ],
    "src": "0:587:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T17:18:31.330Z",
  "devdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role."
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role."
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    }
  }
}