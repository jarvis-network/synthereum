{
  "contractName": "WithdrawableTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "setRoleId",
          "type": "uint256"
        }
      ],
      "name": "setInternalWithdrawRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setRoleId\",\"type\":\"uint256\"}],\"name\":\"setInternalWithdrawRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"withdrawErc20(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to withdraw.\",\"erc20Address\":\"ERC20 token to withdraw.\"}}}},\"userdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/WithdrawableTest.sol\":\"WithdrawableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x14ee8a3748c18299f330c86e802af4520528e8e999e69961fdaed4bd7dfdbe22\",\"urls\":[\"bzz-raw://ac15e925f11f5b09d5665ebf941df67b0b5c5a90715b79bb5afbaf84469201ea\",\"dweb:/ipfs/QmZUKbxXx1cTmNnSTbuBwpu9beUCD8Fi5Nfg86sf99m1ZB\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/WithdrawableTest.sol\":{\"keccak256\":\"0xcfbc2969d7ccb7189b139130271d4f015f25f477abe274c38d0c272831556d8e\",\"urls\":[\"bzz-raw://1432fc10da33302fb5bb834721eab9ee47350ca83bafaba4423e6944ab0515cf\",\"dweb:/ipfs/QmP9WQejH3XJhEqPYoxf4Ro86sTugp2vy3pXHAATH7Z1Es\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000029600080336001600160e01b036200004716565b6200004160016000336001600160e01b036200016216565b620001ff565b826000808281526020819052604090206001015460ff1660028111156200006a57fe5b14620000bd576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620000fb600282018462000182602090811b62000ac517901c565b60008481526020819052604081206001015460ff1660028111156200011c57fe5b14156200015b5760405162461bcd60e51b815260040180806020018281038252603c81526020018062001542603c913960400191505060405180910390fd5b5050505050565b60018390556200017d8383836001600160e01b036200004716565b505050565b6200019782826001600160e01b036200019b16565b5050565b6001600160a01b038116620001e25760405162461bcd60e51b81526004018080602001828103825260238152602001806200157e6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b611333806200020f6000396000f3fe6080604052600436106100b15760003560e01c80637cdc1cb911610069578063ab3545e51161004e578063ab3545e514610224578063bd1f4b5214610277578063d97c05be146102bd576100b1565b80637cdc1cb9146101a0578063aaa14ca3146101fa576100b1565b80636b85f1b01161009a5780636b85f1b0146100ea5780636be7658b1461011457806374d0a6761461015a576100b1565b80631b9265b8146100b65780632e1a7d4d146100c0575b600080fd5b6100be610303565b005b3480156100cc57600080fd5b506100be600480360360208110156100e357600080fd5b5035610312565b3480156100f657600080fd5b506100be6004803603602081101561010d57600080fd5b5035610382565b34801561012057600080fd5b506100be6004803603604081101561013757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661038e565b34801561016657600080fd5b506100be6004803603604081101561017d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166104e3565b3480156101ac57600080fd5b506101e6600480360360408110156101c357600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610638565b604080519115158252519081900360200190f35b34801561020657600080fd5b506100be6004803603602081101561021d57600080fd5b5035610716565b34801561023057600080fd5b5061024e6004803603602081101561024757600080fd5b5035610844565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561028357600080fd5b506100be6004803603604081101561029a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108e0565b3480156102c957600080fd5b506100be600480360360408110156102e057600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610970565b6000341161031057600080fd5b565b60015461031f8133610638565b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b61037e3383610acf565b5050565b61038b81610bfa565b50565b81600260008281526020819052604090206001015460ff1660028111156103b157fe5b14610407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b60008381526020819052604090205483906104229033610638565b610477576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b6000848152602081905260409020610498906003018463ffffffff610c7916565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561050657fe5b1461055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b60008381526020819052604090205483906105779033610638565b6105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b60008481526020819052604090206105ed906003018463ffffffff610cc616565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561065a57fe5b141561067b57610673600282018463ffffffff610d9816565b915050610710565b6002600182015460ff16600281111561069057fe5b14156106a957610673600382018463ffffffff610db816565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff16600281111561073957fe5b1461078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b8161079a8133610638565b6107ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b6000838152602081905260409020610810906003013363ffffffff610c7916565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff16600281111561086957fe5b146108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111d6602f913960400191505060405180910390fd5b60008381526020819052604090206108d990600201610de4565b9392505050565b6001546108ed8133610638565b610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b8261096a73ffffffffffffffffffffffffffffffffffffffff8216338563ffffffff610dfe16565b50505050565b81600160008281526020819052604090206001015460ff16600281111561099357fe5b146109e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111d6602f913960400191505060405180910390fd5b6000838152602081905260409020548390610a049033610638565b610a59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b6000848152602081905260409020610a7a906002018463ffffffff610e8b16565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b61037e8282610e8b565b80471015610b3e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b60405160009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b96576040519150601f19603f3d011682016040523d82523d6000602084013e610b9b565b606091505b5050905080610bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611205603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff166002811115610c1c57fe5b1415610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111b46022913960400191505060405180910390fd5b50600155565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116610d4857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610bf5908490610f39565b73ffffffffffffffffffffffffffffffffffffffff8116610ef7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061128d6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b610f588273ffffffffffffffffffffffffffffffffffffffff16611177565b610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061102c57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610fef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461108e576040519150601f19603f3d011682016040523d82523d6000602084013e611093565b606091505b50915091508161110457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561096a5780806020019051602081101561112057600080fd5b505161096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806112d4602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111ab57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200b7211420be78bbb6f36b4e619a4e3a14eebaa6442c6748dc6496822b11d637a64736f6c634300060a0033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830",
  "deployedBytecode": "0x6080604052600436106100b15760003560e01c80637cdc1cb911610069578063ab3545e51161004e578063ab3545e514610224578063bd1f4b5214610277578063d97c05be146102bd576100b1565b80637cdc1cb9146101a0578063aaa14ca3146101fa576100b1565b80636b85f1b01161009a5780636b85f1b0146100ea5780636be7658b1461011457806374d0a6761461015a576100b1565b80631b9265b8146100b65780632e1a7d4d146100c0575b600080fd5b6100be610303565b005b3480156100cc57600080fd5b506100be600480360360208110156100e357600080fd5b5035610312565b3480156100f657600080fd5b506100be6004803603602081101561010d57600080fd5b5035610382565b34801561012057600080fd5b506100be6004803603604081101561013757600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661038e565b34801561016657600080fd5b506100be6004803603604081101561017d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166104e3565b3480156101ac57600080fd5b506101e6600480360360408110156101c357600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610638565b604080519115158252519081900360200190f35b34801561020657600080fd5b506100be6004803603602081101561021d57600080fd5b5035610716565b34801561023057600080fd5b5061024e6004803603602081101561024757600080fd5b5035610844565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561028357600080fd5b506100be6004803603604081101561029a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108e0565b3480156102c957600080fd5b506100be600480360360408110156102e057600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610970565b6000341161031057600080fd5b565b60015461031f8133610638565b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b61037e3383610acf565b5050565b61038b81610bfa565b50565b81600260008281526020819052604090206001015460ff1660028111156103b157fe5b14610407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b60008381526020819052604090205483906104229033610638565b610477576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b6000848152602081905260409020610498906003018463ffffffff610c7916565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561050657fe5b1461055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b60008381526020819052604090205483906105779033610638565b6105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b60008481526020819052604090206105ed906003018463ffffffff610cc616565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561065a57fe5b141561067b57610673600282018463ffffffff610d9816565b915050610710565b6002600182015460ff16600281111561069057fe5b14156106a957610673600382018463ffffffff610db816565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff16600281111561073957fe5b1461078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061123f602c913960400191505060405180910390fd5b8161079a8133610638565b6107ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b6000838152602081905260409020610810906003013363ffffffff610c7916565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff16600281111561086957fe5b146108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111d6602f913960400191505060405180910390fd5b60008381526020819052604090206108d990600201610de4565b9392505050565b6001546108ed8133610638565b610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061126b6022913960400191505060405180910390fd5b8261096a73ffffffffffffffffffffffffffffffffffffffff8216338563ffffffff610dfe16565b50505050565b81600160008281526020819052604090206001015460ff16600281111561099357fe5b146109e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111d6602f913960400191505060405180910390fd5b6000838152602081905260409020548390610a049033610638565b610a59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112b06024913960400191505060405180910390fd5b6000848152602081905260409020610a7a906002018463ffffffff610e8b16565b604051339073ffffffffffffffffffffffffffffffffffffffff85169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b61037e8282610e8b565b80471015610b3e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b60405160009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b96576040519150601f19603f3d011682016040523d82523d6000602084013e610b9b565b606091505b5050905080610bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611205603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff166002811115610c1c57fe5b1415610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111b46022913960400191505060405180910390fd5b50600155565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116610d4857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610bf5908490610f39565b73ffffffffffffffffffffffffffffffffffffffff8116610ef7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061128d6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b610f588273ffffffffffffffffffffffffffffffffffffffff16611177565b610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061102c57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610fef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461108e576040519150601f19603f3d011682016040523d82523d6000602084013e611093565b606091505b50915091508161110457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561096a5780806020019051602081101561112057600080fd5b505161096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806112d4602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111ab57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200b7211420be78bbb6f36b4e619a4e3a14eebaa6442c6748dc6496822b11d637a64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "165:543:31:-:0;;;303:217;;;;;;;;;-1:-1:-1;334:86:31;363:16;390;409:10;-1:-1:-1;;;;;334:20:31;:86;:::i;:::-;430:83;458:14;483:16;502:10;-1:-1:-1;;;;;430:19:31;:83;:::i;:::-;165:543;;8777:519:13;8925:6;7520:16;7494:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;8943:17:::1;8963:13:::0;;;::::1;::::0;;;;;;9002:18:::1;8986:13:::0;;::::1;:34:::0;;-1:-1:-1;;8986:34:13::1;9002:18:::0;;8986:34:::1;;::::0;;-1:-1:-1;9030:34:13;;;9074:48:::1;:28;::::0;::::1;9108:13:::0;9074:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9187:16;9153:21:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9132:157;;;;-1:-1:-1::0;;;9132:157:13::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;8777:519:::0;;;;:::o;1563:249:17:-;1711:6;:18;;;1739:66;1720:9;1771:14;1787:17;-1:-1:-1;;;;;1739:20:17;:66;:::i;:::-;1563:249;;;:::o;654:144:13:-;749:42;761:14;777:13;-1:-1:-1;;;;;749:11:13;:42;:::i;:::-;654:144;;:::o;286:221::-;-1:-1:-1;;;;;392:25:13;;384:73;;;;-1:-1:-1;;;384:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:13;-1:-1:-1;;;;;467:33:13;;;;;;;286:221::o;165:543:31:-;;;;;;;",
  "deployedSourceMap": "165:543:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:71;;;:::i;:::-;;559:120:17;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;559:120:17;;:::i;603:103:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:103:31;;:::i;6365:262:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6365:262:13;;;;;;;;;:::i;5751:239::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5751:239:13;;;;;;;;;:::i;3906:428::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:428:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6894:235;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6894:235:13;;:::i;5245:160::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5245:160:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;861:193:17;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:193:17;;;;;;;;;:::i;4692:252:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4692:252:13;;;;;;;;;:::i;526:71:31:-;588:1;576:9;:13;568:22;;;;;;526:71::o;559:120:17:-;617:6;;2674:29:13;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:37:17::1;653:10;665:6;635:17;:37::i;:::-;559:120:::0;;:::o;603:103:31:-;672:27;689:9;672:16;:27::i;:::-;603:103;:::o;6365:262:13:-;6445:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;6469:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:5:::2;:13:::0;;;::::2;::::0;;;;;;:63:::2;::::0;:34:::2;;6535:14:::0;6487:63:::2;:47;:63;:::i;:::-;6565:55;::::0;6609:10:::2;::::0;6565:55:::2;::::0;::::2;::::0;6585:6;;6565:55:::2;::::0;;;::::2;3586:1:::1;6365:262:::0;;;:::o;5751:239::-;5823:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;5847:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:5:::2;:13:::0;;;::::2;::::0;;;;;;:55:::2;::::0;:34:::2;;5910:9:::0;5865:55:::2;:44;:55;:::i;:::-;5935:48;::::0;5972:10:::2;::::0;5935:48:::2;::::0;::::2;::::0;5953:6;;5935:48:::2;::::0;;;::::2;3586:1:::1;5751:239:::0;;;:::o;3906:428::-;3985:4;4021:13;;;;;;;;;;4065:18;4048:13;;;;;;:35;;;;;;;;;4044:250;;;4106:52;:28;;;4144:13;4106:52;:37;:52;:::i;:::-;4099:59;;;;;4044:250;4196:15;4179:13;;;;;;:32;;;;;;;;;4175:119;;;4234:49;:25;;;4269:13;4234:49;:34;:49;:::i;4175:119::-;4303:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:428;;;;;:::o;6894:235::-;6956:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:6:::1;2674:29;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:5:::2;:13:::0;;;::::2;::::0;;;;;;:59:::2;::::0;:34:::2;;7045:10;6997:59;:47;:59;:::i;:::-;7071:51;::::0;7111:10:::2;::::0;;;7091:6;;7071:51:::2;::::0;;;::::2;3586:1:::1;6894:235:::0;;:::o;5245:160::-;5323:7;5306:6;3239:18;3213:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:5:::1;:13:::0;;;::::1;::::0;;;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5342:56:::0;5245:160;-1:-1:-1;;;5245:160:13:o;861:193:17:-;946:6;;2674:29:13;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:12:17;1009:38:::1;:18;::::0;::::1;1028:10;1040:6:::0;1009:38:::1;:18;:38;:::i;:::-;2752:1:13;861:193:17::0;;;:::o;4692:252:13:-;4769:6;3239:18;3213:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;4793:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:5:::2;:13:::0;;;::::2;::::0;;;;;;:60:::2;::::0;:37:::2;;4861:9:::0;4811:60:::2;:49;:60;:::i;:::-;4886:51;::::0;4926:10:::2;::::0;4886:51:::2;::::0;::::2;::::0;4907:6;;4886:51:::2;::::0;;;::::2;3319:1:::1;4692:252:::0;;;:::o;654:144::-;749:42;761:14;777:13;749:11;:42::i;2212:391:80:-;2326:6;2301:21;:31;;2293:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:35;;2455:12;;2473:14;;;;2496:6;;2455:12;2473:35;2455:12;2473:35;2496:6;2473:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2454:54;;;2526:7;2518:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:391;;;:::o;2179:114:17:-;2247:9;7289:16:13;7263:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;;7255:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2268:6:17::1;:18:::0;2179:114::o;1311:157:13:-;1415:38;;1456:5;1415:38;;;;;;;;;;;:46;;;;;;1311:157::o;1077:228::-;1183:27;;;1175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:35;;:22;:35;;;;;;;;;;;:42;;;;1294:4;1256:42;;;1077:228::o;109:171::-;235:21;;:38;;;;:21;;:38;;109:171::o;901:170::-;1027:37;;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;;;;513:135::o;662:175:79:-;771:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:23;771:58;;;744:86;;764:5;;744:19;:86::i;286:221:13:-;392:25;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;;;;;;;;;;;286:221::o;2671:1096:79:-;3267:27;3275:5;3267:25;;;:27::i;:::-;3259:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:12;3415:23;3450:5;3442:19;;3462:4;3442:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3400:67;;;;3485:7;3477:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:17;;:21;3540:221;;3684:10;3673:30;;;;;;;;;;;;;;;-1:-1:-1;3673:30:79;3665:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:610:80;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:80;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:80:o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../implementation/Withdrawable.sol\";\n\n\n// WithdrawableTest is derived from the abstract contract Withdrawable for testing purposes.\ncontract WithdrawableTest is Withdrawable {\n    enum Roles { Governance, Withdraw }\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor() public {\n        _createExclusiveRole(uint256(Roles.Governance), uint256(Roles.Governance), msg.sender);\n        _createWithdrawRole(uint256(Roles.Withdraw), uint256(Roles.Governance), msg.sender);\n    }\n\n    function pay() external payable {\n        require(msg.value > 0);\n    }\n\n    function setInternalWithdrawRole(uint256 setRoleId) public {\n        _setWithdrawRole(setRoleId);\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/WithdrawableTest.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        6492
      ]
    },
    "id": 6493,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6430,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 6431,
        "nodeType": "ImportDirective",
        "scope": 6493,
        "sourceUnit": 5148,
        "src": "25:44:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6432,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5147,
              "src": "194:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$5147",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 6433,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:31"
          }
        ],
        "contractDependencies": [
          4907,
          5147
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6492,
        "linearizedBaseContracts": [
          6492,
          5147,
          4907
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 6436,
            "members": [
              {
                "id": 6434,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:31"
              },
              {
                "id": 6435,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:31"
          },
          {
            "body": {
              "id": 6469,
              "nodeType": "Block",
              "src": "324:196:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6442,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "363:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "363:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6440,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6447,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "390:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "382:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6445,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "382:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "382:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "409:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6439,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "334:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 6452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6453,
                  "nodeType": "ExpressionStatement",
                  "src": "334:86:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6457,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "458:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "458:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "450:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6455,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "450:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6462,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "483:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "483:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "475:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6460,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "475:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "475:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "502:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "502:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6454,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5132,
                      "src": "430:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 6467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:83:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6468,
                  "nodeType": "ExpressionStatement",
                  "src": "430:83:31"
                }
              ]
            },
            "documentation": null,
            "id": 6470,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:31"
            },
            "returnParameters": {
              "id": 6438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:31"
            },
            "scope": 6492,
            "src": "303:217:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6480,
              "nodeType": "Block",
              "src": "558:39:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "576:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "576:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "588:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "576:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "568:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6479,
                  "nodeType": "ExpressionStatement",
                  "src": "568:22:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 6481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:31"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:31"
            },
            "scope": 6492,
            "src": "526:71:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6490,
              "nodeType": "Block",
              "src": "662:44:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6487,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6483,
                        "src": "689:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6486,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5146,
                      "src": "672:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "672:27:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 6491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6483,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6491,
                  "src": "636:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:19:31"
            },
            "returnParameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:31"
            },
            "scope": 6492,
            "src": "603:103:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6493,
        "src": "165:543:31"
      }
    ],
    "src": "0:709:31"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        6492
      ]
    },
    "id": 6493,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6430,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 6431,
        "nodeType": "ImportDirective",
        "scope": 6493,
        "sourceUnit": 5148,
        "src": "25:44:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6432,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5147,
              "src": "194:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$5147",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 6433,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:31"
          }
        ],
        "contractDependencies": [
          4907,
          5147
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6492,
        "linearizedBaseContracts": [
          6492,
          5147,
          4907
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 6436,
            "members": [
              {
                "id": 6434,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:31"
              },
              {
                "id": 6435,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:31"
          },
          {
            "body": {
              "id": 6469,
              "nodeType": "Block",
              "src": "324:196:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6442,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "363:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "363:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6440,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6447,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "390:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "382:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6445,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "382:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "382:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "409:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6439,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "334:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 6452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6453,
                  "nodeType": "ExpressionStatement",
                  "src": "334:86:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6457,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "458:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "458:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "450:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6455,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "450:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6462,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "483:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$6436_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 6463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "483:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$6436",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 6461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "475:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6460,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "475:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "475:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "502:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "502:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6454,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5132,
                      "src": "430:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 6467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:83:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6468,
                  "nodeType": "ExpressionStatement",
                  "src": "430:83:31"
                }
              ]
            },
            "documentation": null,
            "id": 6470,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:31"
            },
            "returnParameters": {
              "id": 6438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:31"
            },
            "scope": 6492,
            "src": "303:217:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6480,
              "nodeType": "Block",
              "src": "558:39:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "576:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "576:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "588:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "576:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "568:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6479,
                  "nodeType": "ExpressionStatement",
                  "src": "568:22:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 6481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:31"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:31"
            },
            "scope": 6492,
            "src": "526:71:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6490,
              "nodeType": "Block",
              "src": "662:44:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6487,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6483,
                        "src": "689:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6486,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5146,
                      "src": "672:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "672:27:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 6491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6483,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6491,
                  "src": "636:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:19:31"
            },
            "returnParameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:31"
            },
            "scope": 6492,
            "src": "603:103:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6493,
        "src": "165:543:31"
      }
    ],
    "src": "0:709:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-09-30T12:21:56.812Z",
  "devdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "withdrawErc20(address,uint256)": {
        "params": {
          "amount": "amount of tokens to withdraw.",
          "erc20Address": "ERC20 token to withdraw."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    }
  }
}