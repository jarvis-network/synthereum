{
  "contractName": "RegistryInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "parties",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "registerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "isContractRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party",
          "type": "address"
        }
      ],
      "name": "getRegisteredContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRegisteredContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party",
          "type": "address"
        }
      ],
      "name": "addPartyToContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party",
          "type": "address"
        }
      ],
      "name": "removePartyFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "isPartyMemberOfContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party\",\"type\":\"address\"}],\"name\":\"addPartyToContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRegisteredContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party\",\"type\":\"address\"}],\"name\":\"getRegisteredContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isContractRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isPartyMemberOfContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"parties\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"registerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party\",\"type\":\"address\"}],\"name\":\"removePartyFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addPartyToContract(address)\":{\"details\":\"msg.sender must be the contract to which the party member is added.\",\"params\":{\"party\":\"address to be added to the contract.\"}},\"getAllRegisteredContracts()\":{\"returns\":{\"_0\":\"all registered contract addresses within the system.\"}},\"getRegisteredContracts(address)\":{\"params\":{\"party\":\"address of the party.\"},\"returns\":{\"_0\":\"an array of the contracts the party is registered to.\"}},\"isContractRegistered(address)\":{\"details\":\"If it is registered, it is an authorized participant in the UMA system.\",\"params\":{\"contractAddress\":\"address of the contract.\"},\"returns\":{\"_0\":\"bool indicates whether the contract is registered.\"}},\"isPartyMemberOfContract(address,address)\":{\"params\":{\"contractAddress\":\"address to check against the party.\",\"party\":\"party to check.\"},\"returns\":{\"_0\":\"bool indicating if the address is a party of the contract.\"}},\"registerContract(address[],address)\":{\"details\":\"Only authorized contract creators can call this method.\",\"params\":{\"contractAddress\":\"defines the address of the deployed contract.\",\"parties\":\"an array of addresses who become parties in the contract.\"}},\"removePartyFromContract(address)\":{\"details\":\"msg.sender must be the contract to which the party member is added.\",\"params\":{\"party\":\"address to be removed from the contract.\"}}},\"title\":\"Interface for a registry of contracts and contract creators.\"},\"userdoc\":{\"methods\":{\"addPartyToContract(address)\":{\"notice\":\"Adds a party to the calling contract.\"},\"getAllRegisteredContracts()\":{\"notice\":\"Returns all registered contracts.\"},\"getRegisteredContracts(address)\":{\"notice\":\"Returns a list of all contracts that are associated with a particular party.\"},\"isContractRegistered(address)\":{\"notice\":\"Returns whether the contract has been registered with the registry.\"},\"isPartyMemberOfContract(address,address)\":{\"notice\":\"checks if an address is a party in a contract.\"},\"registerContract(address[],address)\":{\"notice\":\"Registers a new contract.\"},\"removePartyFromContract(address)\":{\"notice\":\"Removes a party member to the calling contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol\":\"RegistryInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol\":{\"keccak256\":\"0x9945a1e0c23bf6dfeb768de35c3a3b1cb5325b229add6cf480cccf2fb90c5600\",\"urls\":[\"bzz-raw://95be068d174428524e76fdfbc8b30067e54fd241dc5e05c657741f53a5946b83\",\"dweb:/ipfs/QmYz8AiEkCpPeZSTo3CqjGZHDZW5c6Pj2jKyzrYeSpvkjh\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\n\npragma experimental ABIEncoderV2;\n\n\n/**\n * @title Interface for a registry of contracts and contract creators.\n */\ninterface RegistryInterface {\n    /**\n     * @notice Registers a new contract.\n     * @dev Only authorized contract creators can call this method.\n     * @param parties an array of addresses who become parties in the contract.\n     * @param contractAddress defines the address of the deployed contract.\n     */\n    function registerContract(address[] calldata parties, address contractAddress) external;\n\n    /**\n     * @notice Returns whether the contract has been registered with the registry.\n     * @dev If it is registered, it is an authorized participant in the UMA system.\n     * @param contractAddress address of the contract.\n     * @return bool indicates whether the contract is registered.\n     */\n    function isContractRegistered(address contractAddress) external view returns (bool);\n\n    /**\n     * @notice Returns a list of all contracts that are associated with a particular party.\n     * @param party address of the party.\n     * @return an array of the contracts the party is registered to.\n     */\n    function getRegisteredContracts(address party) external view returns (address[] memory);\n\n    /**\n     * @notice Returns all registered contracts.\n     * @return all registered contract addresses within the system.\n     */\n    function getAllRegisteredContracts() external view returns (address[] memory);\n\n    /**\n     * @notice Adds a party to the calling contract.\n     * @dev msg.sender must be the contract to which the party member is added.\n     * @param party address to be added to the contract.\n     */\n    function addPartyToContract(address party) external;\n\n    /**\n     * @notice Removes a party member to the calling contract.\n     * @dev msg.sender must be the contract to which the party member is added.\n     * @param party address to be removed from the contract.\n     */\n    function removePartyFromContract(address party) external;\n\n    /**\n     * @notice checks if an address is a party in a contract.\n     * @param party party to check.\n     * @param contractAddress address to check against the party.\n     * @return bool indicating if the address is a party of the contract.\n     */\n    function isPartyMemberOfContract(address party, address contractAddress) external view returns (bool);\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol",
    "exportedSymbols": {
      "RegistryInterface": [
        16817
      ]
    },
    "id": 16818,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16759,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:66"
      },
      {
        "id": 16760,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:66"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16761,
          "nodeType": "StructuredDocumentation",
          "src": "61:78:66",
          "text": " @title Interface for a registry of contracts and contract creators."
        },
        "fullyImplemented": false,
        "id": 16817,
        "linearizedBaseContracts": [
          16817
        ],
        "name": "RegistryInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 16762,
              "nodeType": "StructuredDocumentation",
              "src": "174:276:66",
              "text": " @notice Registers a new contract.\n @dev Only authorized contract creators can call this method.\n @param parties an array of addresses who become parties in the contract.\n @param contractAddress defines the address of the deployed contract."
            },
            "functionSelector": "66c8c250",
            "id": 16770,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16765,
                  "mutability": "mutable",
                  "name": "parties",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16770,
                  "src": "481:26:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16763,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "481:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16764,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "481:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16767,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16770,
                  "src": "509:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "480:53:66"
            },
            "returnParameters": {
              "id": 16769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:66"
            },
            "scope": 16817,
            "src": "455:88:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16771,
              "nodeType": "StructuredDocumentation",
              "src": "549:299:66",
              "text": " @notice Returns whether the contract has been registered with the registry.\n @dev If it is registered, it is an authorized participant in the UMA system.\n @param contractAddress address of the contract.\n @return bool indicates whether the contract is registered."
            },
            "functionSelector": "f9f6b49b",
            "id": 16778,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isContractRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16773,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16778,
                  "src": "883:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:25:66"
            },
            "returnParameters": {
              "id": 16777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16776,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16778,
                  "src": "931:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:6:66"
            },
            "scope": 16817,
            "src": "853:84:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16779,
              "nodeType": "StructuredDocumentation",
              "src": "943:214:66",
              "text": " @notice Returns a list of all contracts that are associated with a particular party.\n @param party address of the party.\n @return an array of the contracts the party is registered to."
            },
            "functionSelector": "188c6ff8",
            "id": 16787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisteredContracts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16781,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16787,
                  "src": "1194:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:15:66"
            },
            "returnParameters": {
              "id": 16786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16785,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16787,
                  "src": "1232:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16783,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1232:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16784,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1232:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1231:18:66"
            },
            "scope": 16817,
            "src": "1162:88:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16788,
              "nodeType": "StructuredDocumentation",
              "src": "1256:128:66",
              "text": " @notice Returns all registered contracts.\n @return all registered contract addresses within the system."
            },
            "functionSelector": "1676ddc3",
            "id": 16794,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllRegisteredContracts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:2:66"
            },
            "returnParameters": {
              "id": 16793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16792,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16794,
                  "src": "1449:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16790,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1449:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16791,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1449:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1448:18:66"
            },
            "scope": 16817,
            "src": "1389:78:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16795,
              "nodeType": "StructuredDocumentation",
              "src": "1473:201:66",
              "text": " @notice Adds a party to the calling contract.\n @dev msg.sender must be the contract to which the party member is added.\n @param party address to be added to the contract."
            },
            "functionSelector": "167cdde7",
            "id": 16800,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPartyToContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16797,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16800,
                  "src": "1707:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1706:15:66"
            },
            "returnParameters": {
              "id": 16799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1730:0:66"
            },
            "scope": 16817,
            "src": "1679:52:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16801,
              "nodeType": "StructuredDocumentation",
              "src": "1737:215:66",
              "text": " @notice Removes a party member to the calling contract.\n @dev msg.sender must be the contract to which the party member is added.\n @param party address to be removed from the contract."
            },
            "functionSelector": "303118d0",
            "id": 16806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePartyFromContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16803,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16806,
                  "src": "1990:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1989:15:66"
            },
            "returnParameters": {
              "id": 16805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:0:66"
            },
            "scope": 16817,
            "src": "1957:57:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16807,
              "nodeType": "StructuredDocumentation",
              "src": "2020:249:66",
              "text": " @notice checks if an address is a party in a contract.\n @param party party to check.\n @param contractAddress address to check against the party.\n @return bool indicating if the address is a party of the contract."
            },
            "functionSelector": "7a3edab0",
            "id": 16816,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPartyMemberOfContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16809,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2307:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16811,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2322:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2306:40:66"
            },
            "returnParameters": {
              "id": 16815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2370:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:6:66"
            },
            "scope": 16817,
            "src": "2274:102:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16818,
        "src": "140:2238:66"
      }
    ],
    "src": "0:2379:66"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/RegistryInterface.sol",
    "exportedSymbols": {
      "RegistryInterface": [
        16817
      ]
    },
    "id": 16818,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16759,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:66"
      },
      {
        "id": 16760,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:66"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16761,
          "nodeType": "StructuredDocumentation",
          "src": "61:78:66",
          "text": " @title Interface for a registry of contracts and contract creators."
        },
        "fullyImplemented": false,
        "id": 16817,
        "linearizedBaseContracts": [
          16817
        ],
        "name": "RegistryInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 16762,
              "nodeType": "StructuredDocumentation",
              "src": "174:276:66",
              "text": " @notice Registers a new contract.\n @dev Only authorized contract creators can call this method.\n @param parties an array of addresses who become parties in the contract.\n @param contractAddress defines the address of the deployed contract."
            },
            "functionSelector": "66c8c250",
            "id": 16770,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16765,
                  "mutability": "mutable",
                  "name": "parties",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16770,
                  "src": "481:26:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16763,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "481:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16764,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "481:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16767,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16770,
                  "src": "509:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "480:53:66"
            },
            "returnParameters": {
              "id": 16769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:66"
            },
            "scope": 16817,
            "src": "455:88:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16771,
              "nodeType": "StructuredDocumentation",
              "src": "549:299:66",
              "text": " @notice Returns whether the contract has been registered with the registry.\n @dev If it is registered, it is an authorized participant in the UMA system.\n @param contractAddress address of the contract.\n @return bool indicates whether the contract is registered."
            },
            "functionSelector": "f9f6b49b",
            "id": 16778,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isContractRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16773,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16778,
                  "src": "883:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:25:66"
            },
            "returnParameters": {
              "id": 16777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16776,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16778,
                  "src": "931:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:6:66"
            },
            "scope": 16817,
            "src": "853:84:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16779,
              "nodeType": "StructuredDocumentation",
              "src": "943:214:66",
              "text": " @notice Returns a list of all contracts that are associated with a particular party.\n @param party address of the party.\n @return an array of the contracts the party is registered to."
            },
            "functionSelector": "188c6ff8",
            "id": 16787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisteredContracts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16781,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16787,
                  "src": "1194:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:15:66"
            },
            "returnParameters": {
              "id": 16786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16785,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16787,
                  "src": "1232:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16783,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1232:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16784,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1232:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1231:18:66"
            },
            "scope": 16817,
            "src": "1162:88:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16788,
              "nodeType": "StructuredDocumentation",
              "src": "1256:128:66",
              "text": " @notice Returns all registered contracts.\n @return all registered contract addresses within the system."
            },
            "functionSelector": "1676ddc3",
            "id": 16794,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllRegisteredContracts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:2:66"
            },
            "returnParameters": {
              "id": 16793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16792,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16794,
                  "src": "1449:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16790,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1449:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16791,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1449:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1448:18:66"
            },
            "scope": 16817,
            "src": "1389:78:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16795,
              "nodeType": "StructuredDocumentation",
              "src": "1473:201:66",
              "text": " @notice Adds a party to the calling contract.\n @dev msg.sender must be the contract to which the party member is added.\n @param party address to be added to the contract."
            },
            "functionSelector": "167cdde7",
            "id": 16800,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPartyToContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16797,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16800,
                  "src": "1707:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1706:15:66"
            },
            "returnParameters": {
              "id": 16799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1730:0:66"
            },
            "scope": 16817,
            "src": "1679:52:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16801,
              "nodeType": "StructuredDocumentation",
              "src": "1737:215:66",
              "text": " @notice Removes a party member to the calling contract.\n @dev msg.sender must be the contract to which the party member is added.\n @param party address to be removed from the contract."
            },
            "functionSelector": "303118d0",
            "id": 16806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePartyFromContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16803,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16806,
                  "src": "1990:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1989:15:66"
            },
            "returnParameters": {
              "id": 16805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:0:66"
            },
            "scope": 16817,
            "src": "1957:57:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16807,
              "nodeType": "StructuredDocumentation",
              "src": "2020:249:66",
              "text": " @notice checks if an address is a party in a contract.\n @param party party to check.\n @param contractAddress address to check against the party.\n @return bool indicating if the address is a party of the contract."
            },
            "functionSelector": "7a3edab0",
            "id": 16816,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPartyMemberOfContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16809,
                  "mutability": "mutable",
                  "name": "party",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2307:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16811,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2322:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2306:40:66"
            },
            "returnParameters": {
              "id": 16815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16816,
                  "src": "2370:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:6:66"
            },
            "scope": 16817,
            "src": "2274:102:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16818,
        "src": "140:2238:66"
      }
    ],
    "src": "0:2379:66"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-19T18:33:22.446Z",
  "devdoc": {
    "methods": {
      "addPartyToContract(address)": {
        "details": "msg.sender must be the contract to which the party member is added.",
        "params": {
          "party": "address to be added to the contract."
        }
      },
      "getAllRegisteredContracts()": {
        "returns": {
          "_0": "all registered contract addresses within the system."
        }
      },
      "getRegisteredContracts(address)": {
        "params": {
          "party": "address of the party."
        },
        "returns": {
          "_0": "an array of the contracts the party is registered to."
        }
      },
      "isContractRegistered(address)": {
        "details": "If it is registered, it is an authorized participant in the UMA system.",
        "params": {
          "contractAddress": "address of the contract."
        },
        "returns": {
          "_0": "bool indicates whether the contract is registered."
        }
      },
      "isPartyMemberOfContract(address,address)": {
        "params": {
          "contractAddress": "address to check against the party.",
          "party": "party to check."
        },
        "returns": {
          "_0": "bool indicating if the address is a party of the contract."
        }
      },
      "registerContract(address[],address)": {
        "details": "Only authorized contract creators can call this method.",
        "params": {
          "contractAddress": "defines the address of the deployed contract.",
          "parties": "an array of addresses who become parties in the contract."
        }
      },
      "removePartyFromContract(address)": {
        "details": "msg.sender must be the contract to which the party member is added.",
        "params": {
          "party": "address to be removed from the contract."
        }
      }
    },
    "title": "Interface for a registry of contracts and contract creators."
  },
  "userdoc": {
    "methods": {
      "addPartyToContract(address)": {
        "notice": "Adds a party to the calling contract."
      },
      "getAllRegisteredContracts()": {
        "notice": "Returns all registered contracts."
      },
      "getRegisteredContracts(address)": {
        "notice": "Returns a list of all contracts that are associated with a particular party."
      },
      "isContractRegistered(address)": {
        "notice": "Returns whether the contract has been registered with the registry."
      },
      "isPartyMemberOfContract(address,address)": {
        "notice": "checks if an address is a party in a contract."
      },
      "registerContract(address[],address)": {
        "notice": "Registers a new contract."
      },
      "removePartyFromContract(address)": {
        "notice": "Removes a party member to the calling contract."
      }
    }
  }
}