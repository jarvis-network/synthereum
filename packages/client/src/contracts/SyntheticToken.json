{
  "contractName": "SyntheticToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract deployer will initially be the only minter and burner as well as the owner  who is capable of adding new roles.\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\"},\"constructor\":{\"params\":{\"tokenDecimals\":\"The number of decimals to define token precision.\",\"tokenName\":\"The name which describes the new token.\",\"tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\"},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isBurner(address)\":{\"params\":{\"account\":\"The address which is checked for the Burner role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Burner.\"}},\"isMinter(address)\":{\"params\":{\"account\":\"The address which is checked for the Minter role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Minter.\"}},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Burner role is removed.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"removeMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Minter role is removed.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role.\"},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Burnable and mintable ERC20.\"},\"userdoc\":{\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":\"Constructs the SyntheticToken.\",\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"isBurner(address)\":{\"notice\":\"Checks if a given account holds the Burner role.\"},\"isMinter(address)\":{\"notice\":\"Checks if a given account holds the Minter role.\"},\"removeBurner(address)\":{\"notice\":\"Removes Burner role from account.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"removeMinter(address)\":{\"notice\":\"Remove Minter role from account.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x63955c0414bf21fdf62cd8a18e0a58084836aa3099137330add653db999d9e77\",\"urls\":[\"bzz-raw://c667ee90d983472ca676ff2e357e58f78576045e37589f97a6aad07e946cd488\",\"dweb:/ipfs/QmVrBe716duKKXuWHXp39hgWd5T5cdQnD5cPCFZYHufT35\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x292293332467c5c7b70566f0027258a8f19004e969f851821a49aff9a561ed04\",\"urls\":[\"bzz-raw://310333655fb54c503cf4c1fc0218cbe2a367ef766632f4202594f8f4aa277216\",\"dweb:/ipfs/Qma6YduUK1GYww9as1u6mov1TbnMn2FSobPMBPV5TyhGUu\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x6c4c90297aee292b99eedeb39f4e65701034ef6f49642ae628d4b0ad12e9c78d\",\"urls\":[\"bzz-raw://17d100eb81c1cacd0d5b459f7a983c58a69032e6a1538ff0204744e49476ee2e\",\"dweb:/ipfs/QmTJYi7up1wVhHWbPi21XJEmw7wNwfZZLNLtjLfoKc4ewe\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol\":{\"keccak256\":\"0x328f819d0e87f6dc8ec322289b7f6a932d9a2f6fd4f892e5ce16d6b0c4cc8a0f\",\"urls\":[\"bzz-raw://037e87cdde8ffbef2d2013015f01ed5d4b6cc041146d2cd9977ff486d23f7d76\",\"dweb:/ipfs/QmY85B5MGfJeo7DFockSSqeNMW2SwykXkEfcPcEtc5d6q6\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe4ed9d633e8e678e8ece3756e4002cc7989b72cd29a17ecdacdabf4fd48820a7\",\"urls\":[\"bzz-raw://03a55c81a7d4c93a1ca6d9b931830c1fde2799bfbbf5841321f67e7b056c36c2\",\"dweb:/ipfs/QmbcgdfB278NvzVZKjA7Jf1NjSeCCQ2277mJGL4UskyS56\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa43329c05d4d75bb1f2e952b54cd40c7c197d3923b5927e61815cdac21a14dce\",\"urls\":[\"bzz-raw://f3c6697a015140d3a341499debb51032ec681f1d7123f54a9a272086cf606bbc\",\"dweb:/ipfs/QmRT1hwHzNoCWLLDBEBRXfGNjRZZyawi2wgrtRz24B8jLa\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x060d944bc6f17414d07853a46d056bf594e5b3a7899e0e76b4520cdbe384e231\",\"urls\":[\"bzz-raw://5142118f78f0ea251eabf2d6688a04027898cb1ddfa885e27f781a2fde3a7a86\",\"dweb:/ipfs/QmQjAwm2oREFKkBEZDVod5LVPJ11ucgswnPFoZ1sZwYpTH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021f6380380620021f6833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020015191508390508282620001be600080336001600160e01b036200023316565b620001db60015b604080516000808252602082019092526200034e565b620001e76002620001c5565b8251620001fc90600490602086019062000544565b5081516200021290600590602085019062000544565b506006805460ff191660ff9290921691909117905550620005e99350505050565b826000808281526003602052604090206001015460ff1660028111156200025657fe5b14620002a9576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526003602052604090206001808201805460ff191682800217905550838155620002e7600282018462000461602090811b620018ed17901c565b60008481526003602052604081206001015460ff1660028111156200030857fe5b1415620003475760405162461bcd60e51b815260040180806020018281038252603c8152602001806200215f603c913960400191505060405180910390fd5b5050505050565b826000808281526003602052604090206001015460ff1660028111156200037157fe5b14620003c4576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b600084815260036020818152604090922060018101805460ff191660021790558581559162000401918301908590620018f76200047a821b17901c565b60008481526003602052604081206001015460ff1660028111156200042257fe5b1415620003475760405162461bcd60e51b8152600401808060200182810382526038815260200180620021be6038913960400191505060405180910390fd5b6200047682826001600160e01b03620004bb16565b5050565b60005b8151811015620004b657620004ad838383815181106200049957fe5b60200260200101516200051f60201b60201c565b6001016200047d565b505050565b6001600160a01b038116620005025760405162461bcd60e51b81526004018080602001828103825260238152602001806200219b6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200058757805160ff1916838001178555620005b7565b82800160010185558215620005b7579182015b82811115620005b75782518255916020019190600101906200059a565b50620005c5929150620005c9565b5090565b620005e691905b80821115620005c55760008155600101620005d0565b90565b611b6680620005f96000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806370a08231116100ee578063a457c2d711610097578063ab3545e511610071578063ab3545e514610608578063d97c05be1461064e578063dd62ed3e14610687578063f44637ba146106c2576101a3565b8063a457c2d714610563578063a9059cbb1461059c578063aa271e1a146105d5576101a3565b80637cdc1cb9116100c85780637cdc1cb9146104ef57806395d89b4114610528578063983b2d5614610530576101a3565b806370a082311461045057806373cc802a1461048357806374d0a676146104b6576101a3565b8063313ce5671161015057806342966c681161012a57806342966c68146103c75780634334614a146103e45780636be7658b14610417576101a3565b8063313ce56714610337578063395093511461035557806340c10f191461038e576101a3565b806318160ddd1161018157806318160ddd146102a757806323b872dd146102c15780633092afd514610304576101a3565b806302846858146101a857806306fdde03146101dd578063095ea7b31461025a575b600080fd5b6101db600480360360208110156101be57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106f5565b005b6101e5610704565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021f578181015183820152602001610207565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107b8565b604080519115158252519081900360200190f35b6102af6107d6565b60408051918252519081900360200190f35b610293600480360360608110156102d757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107dc565b6101db6004803603602081101561031a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610883565b61033f61088d565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561036b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610896565b610293600480360360408110156103a457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108f7565b6101db600480360360208110156103dd57600080fd5b5035610964565b610293600480360360208110156103fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109d3565b6101db6004803603604081101561042d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166109e1565b6102af6004803603602081101561046657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610af2565b6101db6004803603602081101561049957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b1a565b6101db600480360360408110156104cc57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610b25565b6102936004803603604081101561050557600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610c30565b6101e5610d08565b6101db6004803603602081101561054657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d87565b6102936004803603604081101561057957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610d93565b610293600480360360408110156105b257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610e0e565b610293600480360360208110156105eb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e22565b6106256004803603602081101561061e57600080fd5b5035610e2e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101db6004803603604081101561066457600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610eca565b6102af6004803603604081101561069d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610fd4565b6101db600480360360208110156106d857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661100c565b61070160025b826109e1565b50565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ae5780601f10610783576101008083540402835291602001916107ae565b820191906000526020600020905b81548152906001019060200180831161079157829003601f168201915b5050505050905090565b60006107cc6107c5611016565b848461101a565b5060015b92915050565b60025490565b60006107e9848484611161565b610879846107f5611016565b61087485604051806060016040528060288152602001611a336028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610840611016565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff61133d16565b61101a565b5060019392505050565b61070160016106fb565b60065460ff1690565b60006107cc6108a3611016565b8461087485600160006108b4611016565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6113ee16565b600060016109058133610c30565b61095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a116022913960400191505060405180910390fd5b6108798484611462565b60026109708133610c30565b6109c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a116022913960400191505060405180910390fd5b6109cf338361159f565b5050565b60006107d060025b83610c30565b81600260008281526003602052604090206001015460ff166002811115610a0457fe5b14610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806119e5602c913960400191505060405180910390fd5b6000838152600360205260409020548390610a759033610c30565b610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360208190526040909120610aec91018463ffffffff6116f516565b50505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610701600082610eca565b81600260008281526003602052604090206001015460ff166002811115610b4857fe5b14610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806119e5602c913960400191505060405180910390fd5b6000838152600360205260409020548390610bb99033610c30565b610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360208190526040909120610aec91018463ffffffff61174216565b600082815260036020526040812060018082015460ff166002811115610c5257fe5b1415610c7357610c6b600282018463ffffffff61179216565b9150506107d0565b6002600182015460ff166002811115610c8857fe5b1415610ca157610c6b600382018463ffffffff6117b216565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b60058054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ae5780601f10610783576101008083540402835291602001916107ae565b61070160015b82610b25565b60006107cc610da0611016565b8461087485604051806060016040528060258152602001611b0c6025913960016000610dca611016565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61133d16565b60006107cc610e1b611016565b8484611161565b60006107d060016109db565b600081600160008281526003602052604090206001015460ff166002811115610e5357fe5b14610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119b6602f913960400191505060405180910390fd5b6000838152600360205260409020610ec3906002016117de565b9392505050565b81600160008281526003602052604090206001015460ff166002811115610eed57fe5b14610f43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119b6602f913960400191505060405180910390fd5b6000838152600360205260409020548390610f5e9033610c30565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360205260409020610aec906002018463ffffffff6117f816565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6107016002610d8d565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611086576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ac46024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061196e6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166111cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611a9f6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119296023913960400191505060405180910390fd5b6112448383836118a6565b611294816040518060600160405280602681526020016119906026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff61133d16565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546112d6908263ffffffff6113ee16565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113ab578181015183820152602001611393565b50505050905090810190601f1680156113d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ec357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff82166114e457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6114f0600083836118a6565b600254611503908263ffffffff6113ee16565b60025573ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461153c908263ffffffff6113ee16565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff821661160b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a5b6021913960400191505060405180910390fd5b611617826000836118a6565b6116678160405180606001604052806022815260200161194c6022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919063ffffffff61133d16565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546116a0908263ffffffff6118ab16565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611864576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a7c6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b505050565b6000610ec383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061133d565b6109cf82826117f8565b60005b81518110156118a6576119208383838151811061191357fe5b6020026020010151611742565b6001016118fa56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bfd05e4a93ddcc1aeb168a671ddfa2b8a744d0d9e8919f8669383007f74a629d64736f6c63430006040033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c806370a08231116100ee578063a457c2d711610097578063ab3545e511610071578063ab3545e514610608578063d97c05be1461064e578063dd62ed3e14610687578063f44637ba146106c2576101a3565b8063a457c2d714610563578063a9059cbb1461059c578063aa271e1a146105d5576101a3565b80637cdc1cb9116100c85780637cdc1cb9146104ef57806395d89b4114610528578063983b2d5614610530576101a3565b806370a082311461045057806373cc802a1461048357806374d0a676146104b6576101a3565b8063313ce5671161015057806342966c681161012a57806342966c68146103c75780634334614a146103e45780636be7658b14610417576101a3565b8063313ce56714610337578063395093511461035557806340c10f191461038e576101a3565b806318160ddd1161018157806318160ddd146102a757806323b872dd146102c15780633092afd514610304576101a3565b806302846858146101a857806306fdde03146101dd578063095ea7b31461025a575b600080fd5b6101db600480360360208110156101be57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106f5565b005b6101e5610704565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021f578181015183820152602001610207565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107b8565b604080519115158252519081900360200190f35b6102af6107d6565b60408051918252519081900360200190f35b610293600480360360608110156102d757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107dc565b6101db6004803603602081101561031a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610883565b61033f61088d565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561036b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610896565b610293600480360360408110156103a457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108f7565b6101db600480360360208110156103dd57600080fd5b5035610964565b610293600480360360208110156103fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109d3565b6101db6004803603604081101561042d57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166109e1565b6102af6004803603602081101561046657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610af2565b6101db6004803603602081101561049957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b1a565b6101db600480360360408110156104cc57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610b25565b6102936004803603604081101561050557600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610c30565b6101e5610d08565b6101db6004803603602081101561054657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d87565b6102936004803603604081101561057957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610d93565b610293600480360360408110156105b257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610e0e565b610293600480360360208110156105eb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e22565b6106256004803603602081101561061e57600080fd5b5035610e2e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101db6004803603604081101561066457600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610eca565b6102af6004803603604081101561069d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610fd4565b6101db600480360360208110156106d857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661100c565b61070160025b826109e1565b50565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ae5780601f10610783576101008083540402835291602001916107ae565b820191906000526020600020905b81548152906001019060200180831161079157829003601f168201915b5050505050905090565b60006107cc6107c5611016565b848461101a565b5060015b92915050565b60025490565b60006107e9848484611161565b610879846107f5611016565b61087485604051806060016040528060288152602001611a336028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610840611016565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff61133d16565b61101a565b5060019392505050565b61070160016106fb565b60065460ff1690565b60006107cc6108a3611016565b8461087485600160006108b4611016565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6113ee16565b600060016109058133610c30565b61095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a116022913960400191505060405180910390fd5b6108798484611462565b60026109708133610c30565b6109c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a116022913960400191505060405180910390fd5b6109cf338361159f565b5050565b60006107d060025b83610c30565b81600260008281526003602052604090206001015460ff166002811115610a0457fe5b14610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806119e5602c913960400191505060405180910390fd5b6000838152600360205260409020548390610a759033610c30565b610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360208190526040909120610aec91018463ffffffff6116f516565b50505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610701600082610eca565b81600260008281526003602052604090206001015460ff166002811115610b4857fe5b14610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806119e5602c913960400191505060405180910390fd5b6000838152600360205260409020548390610bb99033610c30565b610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360208190526040909120610aec91018463ffffffff61174216565b600082815260036020526040812060018082015460ff166002811115610c5257fe5b1415610c7357610c6b600282018463ffffffff61179216565b9150506107d0565b6002600182015460ff166002811115610c8857fe5b1415610ca157610c6b600382018463ffffffff6117b216565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c696420726f6c654964000000000000000000000000000000000000604482015290519081900360640190fd5b60058054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107ae5780601f10610783576101008083540402835291602001916107ae565b61070160015b82610b25565b60006107cc610da0611016565b8461087485604051806060016040528060258152602001611b0c6025913960016000610dca611016565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61133d16565b60006107cc610e1b611016565b8484611161565b60006107d060016109db565b600081600160008281526003602052604090206001015460ff166002811115610e5357fe5b14610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119b6602f913960400191505060405180910390fd5b6000838152600360205260409020610ec3906002016117de565b9392505050565b81600160008281526003602052604090206001015460ff166002811115610eed57fe5b14610f43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119b6602f913960400191505060405180910390fd5b6000838152600360205260409020548390610f5e9033610c30565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae86024913960400191505060405180910390fd5b6000848152600360205260409020610aec906002018463ffffffff6117f816565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6107016002610d8d565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611086576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ac46024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061196e6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166111cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611a9f6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119296023913960400191505060405180910390fd5b6112448383836118a6565b611294816040518060600160405280602681526020016119906026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff61133d16565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546112d6908263ffffffff6113ee16565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113ab578181015183820152602001611393565b50505050905090810190601f1680156113d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ec357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff82166114e457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6114f0600083836118a6565b600254611503908263ffffffff6113ee16565b60025573ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461153c908263ffffffff6113ee16565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff821661160b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a5b6021913960400191505060405180910390fd5b611617826000836118a6565b6116678160405180606001604052806022815260200161194c6022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919063ffffffff61133d16565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546116a0908263ffffffff6118ab16565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b905473ffffffffffffffffffffffffffffffffffffffff91821691161490565b73ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611864576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a7c6023913960400191505060405180910390fd5b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b505050565b6000610ec383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061133d565b6109cf82826117f8565b60005b81518110156118a6576119208383838151811061191357fe5b6020026020010151611742565b6001016118fa56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bfd05e4a93ddcc1aeb168a671ddfa2b8a744d0d9e8919f8669383007f74a629d64736f6c63430006040033",
  "sourceMap": "330:2641:28:-:0;;;678:167;5:9:-1;2:2;;;27:1;24;17:12;2:2;678:167:28;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;678:167:28;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;678:167:28;;420:4:-1;411:14;;;;678:167:28;;;;;411:14:-1;678:167:28;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;678:167:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;678:167:28;;420:4:-1;411:14;;;;678:167:28;;;;;411:14:-1;678:167:28;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;678:167:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;678:167:28;;;;;;-1:-1:-1;800:9:28;;-1:-1:-1;811:11:28;678:167;623:70:10;649:11;;682:10;623:20;:70::i;:::-;703:74;726:12;721:18;760:16;;;746:11;760:16;;;;;;;;;703:17;:74::i;:::-;787;810:12;805:18;;787:74;513:12:71;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;535:16:71;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;561:9:71;:20;;-1:-1:-1;;561:20:71;;;;;;;;;;;;-1:-1:-1;330:2641:28;;-1:-1:-1;;;;330:2641:28;6988:503:12;7116:6;5747:16;5721:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;5713:85;;;;;-1:-1:-1;;;5713:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:17:::1;7158:13:::0;;;:5:::1;:13;::::0;;;;7197:18:::1;7181:13:::0;;::::1;:34:::0;;-1:-1:-1;;7181:34:12::1;7197:18:::0;;7181:34:::1;;::::0;;-1:-1:-1;7225:34:12;;;7269:48:::1;:28;::::0;::::1;7303:13:::0;7269:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;7382:16;7348:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;7327:157;;;;-1:-1:-1::0;;;7327:157:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5808:1;6988:503:::0;;;;:::o;6150:501::-;6285:6;5747:16;5721:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;5713:85;;;;;-1:-1:-1;;;5713:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:17:::1;6327:13:::0;;;:5:::1;:13;::::0;;;;;;;6350::::1;::::0;::::1;:31:::0;;-1:-1:-1;;6350:31:12::1;6366:15;6350:31;::::0;;6391:34;;;6327:13;6435:46:::1;::::0;:25;::::1;::::0;6466:14;;6435:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;6546:16;6512:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;6491:153;;;;-1:-1:-1::0;;;6491:153:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:144:::0;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;1393:229::-;1503:6;1498:118;1519:14;:21;1515:1;:25;1498:118;;;1561:44;1571:14;1587;1602:1;1587:17;;;;;;;;;;;;;;1561:9;;;:44;;:::i;:::-;1542:3;;1498:118;;;;1393:229;;:::o;286:221::-;-1:-1:-1;392:25:12;;384:73;;;;-1:-1:-1;;;384:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;467:33:12;-1:-1:-1;467:33:12;;;;;;;286:221::o;1077:147::-;-1:-1:-1;1175:35:12;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;1175:42:12;-1:-1:-1;1175:42:12;;;1077:147::o;330:2641:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;330:2641:28;;;-1:-1:-1;330:2641:28;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "330:2641:28:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;330:2641:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1902:106:28;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1902:106:28;;;;:::i;:::-;;653:81:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;653:81:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:166:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2552:166:70;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:98;;;:::i;:::-;;;;;;;;;;;;;;;;3176:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3176:317:70;;;;;;;;;;;;;;;;;;:::i;1320:106:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1320:106:28;;;;:::i;1481:81:71:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3888:215:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3888:215:70;;;;;;;;;:::i;1079:174:10:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1079:174:10;;;;;;;;;:::i;1444:120::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1444:120:10;;:::i;2845:124:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2845:124:28;;;;:::i;5173:189:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5173:189:12;;;;;;;;;:::i;1715:117:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1715:117:70;;;;:::i;2179:102:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2179:102:28;;;;:::i;4752:173:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4752:173:12;;;;;;;;;:::i;3320:433::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3320:433:12;;;;;;;;;:::i;847:85:71:-;;;:::i;1028:100:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1028:100:28;;;;:::i;4590:266:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4590:266:70;;;;;;;;;:::i;2035:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2035:172:70;;;;;;;;;:::i;2501:124:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2501:124:28;;;;:::i;4357:157:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4357:157:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;3997:183;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3997:183:12;;;;;;;;;:::i;2265:149:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2265:149:70;;;;;;;;;;;:::i;1609:100:28:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1609:100:28;;;;:::i;1902:106::-;1960:41;1978:12;1973:18;1993:7;1960:12;:41::i;:::-;1902:106;:::o;653:81:71:-;722:5;715:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:13;;715:12;;722:5;;715:12;;722:5;715:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:81;:::o;2552:166:70:-;2635:4;2651:39;2660:12;:10;:12::i;:::-;2674:7;2683:6;2651:8;:39::i;:::-;-1:-1:-1;2707:4:70;2552:166;;;;;:::o;1559:98::-;1638:12;;1559:98;:::o;3176:317::-;3282:4;3298:36;3308:6;3316:9;3327:6;3298:9;:36::i;:::-;3344:121;3353:6;3361:12;:10;:12::i;:::-;3375:89;3413:6;3375:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3395:12;:10;:12::i;:::-;3375:33;;;;;;;;;;;;;-1:-1:-1;3375:33:70;;;:89;;:37;:89;:::i;:::-;3344:8;:121::i;:::-;-1:-1:-1;3482:4:70;3176:317;;;;;:::o;1320:106:28:-;1378:41;1396:12;1391:18;;1481:81:71;1546:9;;;;1481:81;:::o;3888:215:70:-;3976:4;3992:83;4001:12;:10;:12::i;:::-;4015:7;4024:50;4063:10;4024:11;:25;4036:12;:10;:12::i;:::-;4024:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4024:25:70;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1079:174:10:-;1186:4;1162:12;2251:29:12;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:23:10::1;1208:9;1219:5;1202;:23::i;1444:120::-:0;1508:12;2251:29:12;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:24:10::1;1539:10;1551:5;1533;:24::i;:::-;1444:120:::0;;:::o;2845:124:28:-;2901:4;2924:38;2939:12;2934:18;2954:7;2924:9;:38::i;5173:189:12:-;5250:6;3080:15;3054:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5274:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5292:13:::2;::::0;;;:5:::2;:13;::::0;;;;;;;:63:::2;::::0;:34:::2;5340:14:::0;5292:63:::2;:47;:63;:::i;:::-;3154:1:::1;5173:189:::0;;;:::o;1715:117:70:-;1807:18;;1781:7;1807:18;;;;;;;;;;;;1715:117::o;2179:102:28:-;2235:39;2252:11;2266:7;2235:11;:39::i;4752:173:12:-;4821:6;3080:15;3054:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4845:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4863:13:::2;::::0;;;:5:::2;:13;::::0;;;;;;;:55:::2;::::0;:34:::2;4908:9:::0;4863:55:::2;:44;:55;:::i;3320:433::-:0;3396:4;3432:13;;;:5;:13;;;;;3476:18;3459:13;;;;;;:35;;;;;;;;;3455:250;;;3517:52;:28;;;3555:13;3517:52;:37;:52;:::i;:::-;3510:59;;;;;3455:250;3607:15;3590:13;;;;;;:32;;;;;;;;;3586:119;;;3645:49;:25;;;3680:13;3645:49;:34;:49;:::i;3586:119::-;3714:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:85:71;918:7;911:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:13;;911:14;;918:7;;911:14;;918:7;911:14;;;;;;;;;;;;;;;;;;;;;;;;1028:100:28;1083:38;1098:12;1093:18;1113:7;1083:9;:38::i;4590:266:70:-;4683:4;4699:129;4708:12;:10;:12::i;:::-;4722:7;4731:96;4770:15;4731:96;;;;;;;;;;;;;;;;;:11;:25;4743:12;:10;:12::i;:::-;4731:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4731:25:70;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2035:172::-;2121:4;2137:42;2147:12;:10;:12::i;:::-;2161:9;2172:6;2137:9;:42::i;2501:124:28:-;2557:4;2580:38;2595:12;2590:18;;4357:157:12;4432:7;4415:6;2810:18;2784:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4458:13:::1;::::0;;;:5:::1;:13;::::0;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;4451:56:::0;4357:157;-1:-1:-1;;;4357:157:12:o;3997:183::-;4071:6;2810:18;2784:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4095:6;;2514:49:::1;::::0;2552:10:::1;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4163:9:::0;4113:60:::2;:49;:60;:::i;2265:149:70:-:0;2380:18;;;;2354:7;2380:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2265:149::o;1609:100:28:-;1664:38;1679:12;1674:18;;735:104:63;822:10;735:104;:::o;7654:340:70:-;7755:19;;;7747:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7833:21;;;7825:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7904:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7955:32;;;;;;;;;;;;;;;;;7654:340;;;:::o;5330:530::-;5435:20;;;5427:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5515:23;;;5507:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5589:47;5610:6;5618:9;5629:6;5589:20;:47::i;:::-;5667:71;5689:6;5667:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;5647:17;;;;:9;:17;;;;;;;;;;;:91;;;;5771:20;;;;;;;:32;;5796:6;5771:32;:24;:32;:::i;:::-;5748:20;;;;:9;:20;;;;;;;;;;;;:55;;;;5818:35;;;;;;;5748:20;;5818:35;;;;;;;;;;;;;5330:530;;;:::o;1732:187:68:-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:68;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6130:370:70;6213:21;;;6205:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6281:49;6310:1;6314:7;6323:6;6281:20;:49::i;:::-;6356:12;;:24;;6373:6;6356:24;:16;:24;:::i;:::-;6341:12;:39;6411:18;;;:9;:18;;;;;;;;;;;:30;;6434:6;6411:30;:22;:30;:::i;:::-;6390:18;;;:9;:18;;;;;;;;;;;:51;;;;6456:37;;;;;;;6390:18;;:9;;6456:37;;;;;;;;;;6130:370;;:::o;6819:410::-;6902:21;;;6894:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6972:49;6993:7;7010:1;7014:6;6972:20;:49::i;:::-;7053:68;7076:6;7053:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;7032:18;;;:9;:18;;;;;;;;;;:89;7146:12;;:24;;7163:6;7146:24;:16;:24;:::i;:::-;7131:12;:39;7185:37;;;;;;;;7211:1;;7185:37;;;;;;;;;;;;;6819:410;;:::o;1230:157:12:-;1334:38;;1375:5;1334:38;;;;;;;;;;;:46;;;;;;1230:157::o;1077:147::-;1175:35;;:22;:35;;;;;;;;;;;:42;;;;1213:4;1175:42;;;1077:147::o;109:171::-;235:21;;:38;;;;:21;;:38;;109:171::o;901:170::-;1027:37;;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;;;;513:135::o;286:221::-;392:25;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;;;;;;;;;;;286:221::o;8972:92:70:-;;;;:::o;1274:134:68:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;654:144:12:-;749:42;761:14;777:13;749:11;:42::i;1393:229::-;1503:6;1498:118;1519:14;:21;1515:1;:25;1498:118;;;1561:44;1571:14;1587;1602:1;1587:17;;;;;;;;;;;;;;1561:9;:44::i;:::-;1542:3;;1498:118;",
  "source": "pragma solidity ^0.6.0;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"../../common/implementation/ExpandedERC20.sol\";\n\n\n/**\n * @title Burnable and mintable ERC20.\n * @dev The contract deployer will initially be the only minter and burner as well as the owner  who\n * is capable of adding new roles.\n */\n\ncontract SyntheticToken is ExpandedERC20, ERC20Detailed {\n    /**\n     * @notice Constructs the SyntheticToken.\n     * @param tokenName The name which describes the new token.\n     * @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals The number of decimals to define token precision.\n     */\n    constructor(string memory tokenName, string memory tokenSymbol, uint8 tokenDecimals)\n        public\n        ERC20Detailed(tokenName, tokenSymbol, tokenDecimals)\n    {}\n\n    /**\n     * @notice Add Minter role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Minter role is added.\n     */\n    function addMinter(address account) external {\n        addMember(uint(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Remove Minter role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Minter role is removed.\n     */\n    function removeMinter(address account) external {\n        removeMember(uint(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Add Burner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Burner role is added.\n     */\n    function addBurner(address account) external {\n        addMember(uint(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Removes Burner role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Burner role is removed.\n     */\n    function removeBurner(address account) external {\n        removeMember(uint(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Reset Owner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The new holder of the Owner role.\n     */\n    function resetOwner(address account) external {\n        resetMember(uint(Roles.Owner), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Minter role.\n     * @param account The address which is checked for the Minter role.\n     * @return bool True if the provided account is a Minter.\n     */\n    function isMinter(address account) public view returns (bool) {\n        return holdsRole(uint(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Burner role.\n     * @param account The address which is checked for the Burner role.\n     * @return bool True if the provided account is a Burner.\n     */\n    function isBurner(address account) public view returns (bool) {\n        return holdsRole(uint(Roles.Burner), account);\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        9113
      ]
    },
    "id": 9114,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8973,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 8974,
        "nodeType": "ImportDirective",
        "scope": 9114,
        "sourceUnit": 20631,
        "src": "24:63:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 8975,
        "nodeType": "ImportDirective",
        "scope": 9114,
        "sourceUnit": 3245,
        "src": "88:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8977,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3244,
              "src": "357:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$3244",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 8978,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:28"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8979,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20630,
              "src": "372:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$20630",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 8980,
            "nodeType": "InheritanceSpecifier",
            "src": "372:13:28"
          }
        ],
        "contractDependencies": [
          3244,
          4468,
          4689,
          19142,
          20567,
          20630,
          20708
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8976,
          "nodeType": "StructuredDocumentation",
          "src": "146:182:28",
          "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter and burner as well as the owner  who\nis capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 9113,
        "linearizedBaseContracts": [
          9113,
          20630,
          3244,
          4468,
          20567,
          4689,
          20708,
          19142
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8995,
              "nodeType": "Block",
              "src": "843:2:28",
              "statements": []
            },
            "documentation": {
              "id": 8981,
              "nodeType": "StructuredDocumentation",
              "src": "392:281:28",
              "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
            },
            "id": 8996,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8990,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8983,
                    "src": "800:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8991,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8985,
                    "src": "811:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8992,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8987,
                    "src": "824:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8993,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8989,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20630,
                  "src": "786:13:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20630_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "786:52:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8983,
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "690:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8985,
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "715:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8984,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8987,
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "742:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8986,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:73:28"
            },
            "returnParameters": {
              "id": 8994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:28"
            },
            "scope": 9113,
            "src": "678:167:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9011,
              "nodeType": "Block",
              "src": "1073:55:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9005,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1098:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1093:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9003,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1093:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1093:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9008,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8999,
                        "src": "1113:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9002,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "1083:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9010,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:38:28"
                }
              ]
            },
            "documentation": {
              "id": 8997,
              "nodeType": "StructuredDocumentation",
              "src": "851:172:28",
              "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 9012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8999,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9012,
                  "src": "1047:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1046:17:28"
            },
            "returnParameters": {
              "id": 9001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:28"
            },
            "scope": 9113,
            "src": "1028:100:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9027,
              "nodeType": "Block",
              "src": "1368:58:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9021,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1396:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1396:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1391:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9019,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1391:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1391:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9024,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9015,
                        "src": "1411:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9018,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "1378:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9026,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:41:28"
                }
              ]
            },
            "documentation": {
              "id": 9013,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:28",
              "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 9028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9015,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9028,
                  "src": "1342:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:28"
            },
            "returnParameters": {
              "id": 9017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:28"
            },
            "scope": 9113,
            "src": "1320:106:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9043,
              "nodeType": "Block",
              "src": "1654:55:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9037,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1679:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1679:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1674:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9035,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1674:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1674:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9040,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9031,
                        "src": "1694:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9034,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "1664:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9042,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:38:28"
                }
              ]
            },
            "documentation": {
              "id": 9029,
              "nodeType": "StructuredDocumentation",
              "src": "1432:172:28",
              "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 9044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9031,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9044,
                  "src": "1628:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1627:17:28"
            },
            "returnParameters": {
              "id": 9033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:28"
            },
            "scope": 9113,
            "src": "1609:100:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9059,
              "nodeType": "Block",
              "src": "1950:58:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9053,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1978:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1978:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1973:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9051,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1973:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1973:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9056,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9047,
                        "src": "1993:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9050,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "1960:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9058,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:41:28"
                }
              ]
            },
            "documentation": {
              "id": 9045,
              "nodeType": "StructuredDocumentation",
              "src": "1715:182:28",
              "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 9060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9047,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9060,
                  "src": "1924:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1923:17:28"
            },
            "returnParameters": {
              "id": 9049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:28"
            },
            "scope": 9113,
            "src": "1902:106:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9075,
              "nodeType": "Block",
              "src": "2225:56:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9069,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2252:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2252:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2247:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9067,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2247:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2247:17:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9072,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9063,
                        "src": "2266:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9066,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4261,
                      "src": "2235:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9074,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:39:28"
                }
              ]
            },
            "documentation": {
              "id": 9061,
              "nodeType": "StructuredDocumentation",
              "src": "2014:160:28",
              "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 9076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9063,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9076,
                  "src": "2199:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2198:17:28"
            },
            "returnParameters": {
              "id": 9065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:28"
            },
            "scope": 9113,
            "src": "2179:102:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9093,
              "nodeType": "Block",
              "src": "2563:62:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9087,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2595:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2595:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2590:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9085,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2590:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9090,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9079,
                        "src": "2610:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9084,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "2580:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 9091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9083,
                  "id": 9092,
                  "nodeType": "Return",
                  "src": "2573:45:28"
                }
              ]
            },
            "documentation": {
              "id": 9077,
              "nodeType": "StructuredDocumentation",
              "src": "2287:209:28",
              "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 9094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9079,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9094,
                  "src": "2519:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2518:17:28"
            },
            "returnParameters": {
              "id": 9083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9082,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9094,
                  "src": "2557:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2556:6:28"
            },
            "scope": 9113,
            "src": "2501:124:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9111,
              "nodeType": "Block",
              "src": "2907:62:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9105,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2939:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2939:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9103,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9108,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9097,
                        "src": "2954:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9102,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "2924:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 9109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9101,
                  "id": 9110,
                  "nodeType": "Return",
                  "src": "2917:45:28"
                }
              ]
            },
            "documentation": {
              "id": 9095,
              "nodeType": "StructuredDocumentation",
              "src": "2631:209:28",
              "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 9112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9097,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9112,
                  "src": "2863:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2862:17:28"
            },
            "returnParameters": {
              "id": 9101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9112,
                  "src": "2901:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2900:6:28"
            },
            "scope": 9113,
            "src": "2845:124:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9114,
        "src": "330:2641:28"
      }
    ],
    "src": "0:2972:28"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        9113
      ]
    },
    "id": 9114,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8973,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 8974,
        "nodeType": "ImportDirective",
        "scope": 9114,
        "sourceUnit": 20631,
        "src": "24:63:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 8975,
        "nodeType": "ImportDirective",
        "scope": 9114,
        "sourceUnit": 3245,
        "src": "88:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8977,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3244,
              "src": "357:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$3244",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 8978,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:28"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8979,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20630,
              "src": "372:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$20630",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 8980,
            "nodeType": "InheritanceSpecifier",
            "src": "372:13:28"
          }
        ],
        "contractDependencies": [
          3244,
          4468,
          4689,
          19142,
          20567,
          20630,
          20708
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8976,
          "nodeType": "StructuredDocumentation",
          "src": "146:182:28",
          "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter and burner as well as the owner  who\nis capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 9113,
        "linearizedBaseContracts": [
          9113,
          20630,
          3244,
          4468,
          20567,
          4689,
          20708,
          19142
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8995,
              "nodeType": "Block",
              "src": "843:2:28",
              "statements": []
            },
            "documentation": {
              "id": 8981,
              "nodeType": "StructuredDocumentation",
              "src": "392:281:28",
              "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
            },
            "id": 8996,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8990,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8983,
                    "src": "800:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8991,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8985,
                    "src": "811:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8992,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8987,
                    "src": "824:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8993,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8989,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20630,
                  "src": "786:13:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20630_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "786:52:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8983,
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "690:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8985,
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "715:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8984,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8987,
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8996,
                  "src": "742:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8986,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:73:28"
            },
            "returnParameters": {
              "id": 8994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:28"
            },
            "scope": 9113,
            "src": "678:167:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9011,
              "nodeType": "Block",
              "src": "1073:55:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9005,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1098:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1093:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9003,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1093:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1093:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9008,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8999,
                        "src": "1113:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9002,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "1083:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9010,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:38:28"
                }
              ]
            },
            "documentation": {
              "id": 8997,
              "nodeType": "StructuredDocumentation",
              "src": "851:172:28",
              "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 9012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8999,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9012,
                  "src": "1047:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1046:17:28"
            },
            "returnParameters": {
              "id": 9001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:28"
            },
            "scope": 9113,
            "src": "1028:100:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9027,
              "nodeType": "Block",
              "src": "1368:58:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9021,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1396:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1396:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1391:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9019,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1391:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1391:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9024,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9015,
                        "src": "1411:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9018,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "1378:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9026,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:41:28"
                }
              ]
            },
            "documentation": {
              "id": 9013,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:28",
              "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 9028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9015,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9028,
                  "src": "1342:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:28"
            },
            "returnParameters": {
              "id": 9017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:28"
            },
            "scope": 9113,
            "src": "1320:106:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9043,
              "nodeType": "Block",
              "src": "1654:55:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9037,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1679:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1679:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1674:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9035,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1674:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1674:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9040,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9031,
                        "src": "1694:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9034,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "1664:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9042,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:38:28"
                }
              ]
            },
            "documentation": {
              "id": 9029,
              "nodeType": "StructuredDocumentation",
              "src": "1432:172:28",
              "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 9044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9031,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9044,
                  "src": "1628:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1627:17:28"
            },
            "returnParameters": {
              "id": 9033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:28"
            },
            "scope": 9113,
            "src": "1609:100:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9059,
              "nodeType": "Block",
              "src": "1950:58:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9053,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "1978:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1978:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1973:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9051,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1973:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1973:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9056,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9047,
                        "src": "1993:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9050,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4326,
                      "src": "1960:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9058,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:41:28"
                }
              ]
            },
            "documentation": {
              "id": 9045,
              "nodeType": "StructuredDocumentation",
              "src": "1715:182:28",
              "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 9060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9047,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9060,
                  "src": "1924:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1923:17:28"
            },
            "returnParameters": {
              "id": 9049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:28"
            },
            "scope": 9113,
            "src": "1902:106:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9075,
              "nodeType": "Block",
              "src": "2225:56:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9069,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2252:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2252:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2247:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9067,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2247:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2247:17:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9072,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9063,
                        "src": "2266:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9066,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4261,
                      "src": "2235:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9074,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:39:28"
                }
              ]
            },
            "documentation": {
              "id": 9061,
              "nodeType": "StructuredDocumentation",
              "src": "2014:160:28",
              "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 9076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9063,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9076,
                  "src": "2199:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2198:17:28"
            },
            "returnParameters": {
              "id": 9065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:28"
            },
            "scope": 9113,
            "src": "2179:102:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9093,
              "nodeType": "Block",
              "src": "2563:62:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9087,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2595:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2595:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2590:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9085,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2590:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9090,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9079,
                        "src": "2610:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9084,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "2580:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 9091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9083,
                  "id": 9092,
                  "nodeType": "Return",
                  "src": "2573:45:28"
                }
              ]
            },
            "documentation": {
              "id": 9077,
              "nodeType": "StructuredDocumentation",
              "src": "2287:209:28",
              "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 9094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9079,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9094,
                  "src": "2519:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2518:17:28"
            },
            "returnParameters": {
              "id": 9083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9082,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9094,
                  "src": "2557:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2556:6:28"
            },
            "scope": 9113,
            "src": "2501:124:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9111,
              "nodeType": "Block",
              "src": "2907:62:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 9105,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3141,
                              "src": "2939:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3141_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 9106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2939:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3141",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 9104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 9103,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 9107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9108,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9097,
                        "src": "2954:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9102,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "2924:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 9109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9101,
                  "id": 9110,
                  "nodeType": "Return",
                  "src": "2917:45:28"
                }
              ]
            },
            "documentation": {
              "id": 9095,
              "nodeType": "StructuredDocumentation",
              "src": "2631:209:28",
              "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 9112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9097,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9112,
                  "src": "2863:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2862:17:28"
            },
            "returnParameters": {
              "id": 9101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9112,
                  "src": "2901:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2900:6:28"
            },
            "scope": 9113,
            "src": "2845:124:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9114,
        "src": "330:2641:28"
      }
    ],
    "src": "0:2972:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-19T21:38:31.460Z",
  "devdoc": {
    "details": "The contract deployer will initially be the only minter and burner as well as the owner  who is capable of adding new roles.",
    "methods": {
      "addBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Burner role is added."
        }
      },
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "addMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Minter role is added."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `value` tokens owned by `msg.sender`."
      },
      "constructor": {
        "params": {
          "tokenDecimals": "The number of decimals to define token precision.",
          "tokenName": "The name which describes the new token.",
          "tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role."
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "isBurner(address)": {
        "params": {
          "account": "The address which is checked for the Burner role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Burner."
        }
      },
      "isMinter(address)": {
        "params": {
          "account": "The address which is checked for the Minter role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Minter."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints `value` tokens to `recipient`, returning true on success."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Burner role is removed."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "removeMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Minter role is removed."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role."
      },
      "resetOwner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The new holder of the Owner role."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Burnable and mintable ERC20."
  },
  "userdoc": {
    "methods": {
      "addBurner(address)": {
        "notice": "Add Burner role to account."
      },
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "addMinter(address)": {
        "notice": "Add Minter role to account."
      },
      "constructor": "Constructs the SyntheticToken.",
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "isBurner(address)": {
        "notice": "Checks if a given account holds the Burner role."
      },
      "isMinter(address)": {
        "notice": "Checks if a given account holds the Minter role."
      },
      "removeBurner(address)": {
        "notice": "Removes Burner role from account."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "removeMinter(address)": {
        "notice": "Remove Minter role from account."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "resetOwner(address)": {
        "notice": "Reset Owner role to account."
      }
    }
  }
}