{
  "contractName": "OracleInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"methods\":{\"getPrice(bytes32,uint256)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"int representing the resolved price for the given identifer and timestamp.\"}},\"hasPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"requestPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"}}},\"title\":\"Financial contract facing Oracle interface.\"},\"userdoc\":{\"methods\":{\"getPrice(bytes32,uint256)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"hasPrice(bytes32,uint256)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol\":\"OracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x7ec095e4197dc4205c95619bf91e62d8efd39bf3787e9e26a200b1da8360b7a8\",\"urls\":[\"bzz-raw://33102100780930ea7c09dd946c4048e5a82020a2cc0f755478c44cbce097ec0b\",\"dweb:/ipfs/QmdYecrLnKnF47y2CCPZET2fBnzfeeh6zU9XkwVZmGG94w\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\n\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\ninterface OracleInterface {\n    /**\n     * @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp of for the price request.\n     */\n    function requestPrice(bytes32 identifier, uint time) external;\n\n    /**\n     * @notice Whether the price for `identifier` and `time` is available.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp of for the price request.\n     * @return bool if the DVM has resolved to a price for the given identifier and timestamp.\n     */\n    function hasPrice(bytes32 identifier, uint time) external view returns (bool);\n\n    /**\n     * @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n     * @dev If the price is not available, the method reverts.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp of for the price request.\n     * @return int representing the resolved price for the given identifer and timestamp.\n     */\n    function getPrice(bytes32 identifier, uint time) external view returns (int);\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol",
    "exportedSymbols": {
      "OracleInterface": [
        14083
      ]
    },
    "id": 14084,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14053,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 14054,
          "nodeType": "StructuredDocumentation",
          "src": "26:175:52",
          "text": "@title Financial contract facing Oracle interface.\n@dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "id": 14083,
        "linearizedBaseContracts": [
          14083
        ],
        "name": "OracleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 14055,
              "nodeType": "StructuredDocumentation",
              "src": "234:376:52",
              "text": "@notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n@dev Time must be in the past and the identifier must be supported.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request."
            },
            "functionSelector": "68ad8ae3",
            "id": 14062,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14057,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14062,
                  "src": "637:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14059,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14062,
                  "src": "657:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14058,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "636:31:52"
            },
            "returnParameters": {
              "id": 14061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:0:52"
            },
            "scope": 14083,
            "src": "615:62:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 14063,
              "nodeType": "StructuredDocumentation",
              "src": "683:434:52",
              "text": "@notice Whether the price for `identifier` and `time` is available.\n@dev Time must be in the past and the identifier must be supported.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request.\n@return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "a03e881a",
            "id": 14072,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14065,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1140:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14067,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1160:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14066,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:31:52"
            },
            "returnParameters": {
              "id": 14071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14070,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1194:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14069,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:6:52"
            },
            "scope": 14083,
            "src": "1122:78:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 14073,
              "nodeType": "StructuredDocumentation",
              "src": "1206:447:52",
              "text": "@notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n@dev If the price is not available, the method reverts.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request.\n@return int representing the resolved price for the given identifer and timestamp."
            },
            "functionSelector": "c9280f06",
            "id": 14082,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14075,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1676:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14077,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1696:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14076,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1675:31:52"
            },
            "returnParameters": {
              "id": 14081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1730:3:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14079,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:3:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1729:5:52"
            },
            "scope": 14083,
            "src": "1658:77:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14084,
        "src": "202:1535:52"
      }
    ],
    "src": "0:1738:52"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol",
    "exportedSymbols": {
      "OracleInterface": [
        14083
      ]
    },
    "id": 14084,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14053,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 14054,
          "nodeType": "StructuredDocumentation",
          "src": "26:175:52",
          "text": "@title Financial contract facing Oracle interface.\n@dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "id": 14083,
        "linearizedBaseContracts": [
          14083
        ],
        "name": "OracleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 14055,
              "nodeType": "StructuredDocumentation",
              "src": "234:376:52",
              "text": "@notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n@dev Time must be in the past and the identifier must be supported.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request."
            },
            "functionSelector": "68ad8ae3",
            "id": 14062,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14057,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14062,
                  "src": "637:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14059,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14062,
                  "src": "657:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14058,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "636:31:52"
            },
            "returnParameters": {
              "id": 14061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:0:52"
            },
            "scope": 14083,
            "src": "615:62:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 14063,
              "nodeType": "StructuredDocumentation",
              "src": "683:434:52",
              "text": "@notice Whether the price for `identifier` and `time` is available.\n@dev Time must be in the past and the identifier must be supported.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request.\n@return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "a03e881a",
            "id": 14072,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14065,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1140:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14067,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1160:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14066,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:31:52"
            },
            "returnParameters": {
              "id": 14071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14070,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14072,
                  "src": "1194:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14069,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:6:52"
            },
            "scope": 14083,
            "src": "1122:78:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 14073,
              "nodeType": "StructuredDocumentation",
              "src": "1206:447:52",
              "text": "@notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n@dev If the price is not available, the method reverts.\n@param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n@param time unix timestamp of for the price request.\n@return int representing the resolved price for the given identifer and timestamp."
            },
            "functionSelector": "c9280f06",
            "id": 14082,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14075,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1676:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14077,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1696:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14076,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1675:31:52"
            },
            "returnParameters": {
              "id": 14081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14082,
                  "src": "1730:3:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14079,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:3:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1729:5:52"
            },
            "scope": 14083,
            "src": "1658:77:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14084,
        "src": "202:1535:52"
      }
    ],
    "src": "0:1738:52"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-08-14T09:32:05.671Z",
  "devdoc": {
    "details": "Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.",
    "methods": {
      "getPrice(bytes32,uint256)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "int representing the resolved price for the given identifer and timestamp."
        }
      },
      "hasPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "requestPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        }
      }
    },
    "title": "Financial contract facing Oracle interface."
  },
  "userdoc": {
    "methods": {
      "getPrice(bytes32,uint256)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "hasPrice(bytes32,uint256)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      }
    }
  }
}