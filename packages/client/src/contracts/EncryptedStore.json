{
  "contractName": "EncryptedStore",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "topicHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "storeMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "removeMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"removeMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"topicHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"storeMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any given time. Technically, topic hashes and messages do not need to be encrypted, but because anyone can read stored messages, this contract is designed to store encrypted messages. Only one message per topic is stored at any given time.\",\"methods\":{\"getMessage(address,bytes32)\":{\"details\":\"To decrypt messages (this requires access to the owner's private keys), use the decryptMessage() function in common/Crypto.js.\",\"params\":{\"topicHash\":\"hash of the \\\"subject\\\" of the message.\",\"user\":\"address that stored this message.\"},\"returns\":{\"_0\":\"stored message.\"}},\"removeMessage(bytes32)\":{\"params\":{\"topicHash\":\"hash of the \\\"subject\\\" or \\\"topic\\\" of the message.\"}},\"storeMessage(bytes32,bytes)\":{\"details\":\"To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\",\"params\":{\"message\":\"the stored message.\",\"topicHash\":\"hash of the \\\"subject\\\" or \\\"topic\\\" of the message.\"}}},\"title\":\"Contract for storing keyed encrypted messages via the EVM.\"},\"userdoc\":{\"methods\":{\"getMessage(address,bytes32)\":{\"notice\":\"Gets the current stored message corresponding to `user` and `topicHash`.\"},\"removeMessage(bytes32)\":{\"notice\":\"Removes a stored message categorized by a particular `topicHash`.\"},\"storeMessage(bytes32,bytes)\":{\"notice\":\"Stores a `message` categorized by a particular `topicHash`. This will overwrite the previous messages sent by this caller with this `topicHash`.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/EncryptedStore.sol\":\"EncryptedStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/EncryptedStore.sol\":{\"keccak256\":\"0x450d1a1eb0ebb86d1017b66038dbd317cf9be4acd1f065a2b495437c82f656e8\",\"urls\":[\"bzz-raw://af36fd11eef7b4933cf9ee605a7b950c76458f24bde562583d3977fa9ba01d71\",\"dweb:/ipfs/QmUBdrThkooca8tVYmxjPgPr7DfKsS6GzDTraKGz9qYSXj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309aa37ba1461004657806340dd4b22146100f5578063ef74e0ac14610112575b600080fd5b6100f36004803603604081101561005c57600080fd5b8135919081019060408101602082013564010000000081111561007e57600080fd5b82018360208201111561009057600080fd5b803590602001918460018302840111640100000000831117156100b257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101c0945050505050565b005b6100f36004803603602081101561010b57600080fd5b50356101eb565b61014b6004803603604081101561012857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561020f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018557818101518382015260200161016d565b50505050905090810190601f1680156101b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b33600090815260208181526040808320858452825290912082516101e6928401906102ec565b505050565b33600090815260208181526040808320848452909152812061020c9161036a565b50565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845282529182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050505050905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032d57805160ff191683800117855561035a565b8280016001018555821561035a579182015b8281111561035a57825182559160200191906001019061033f565b506103669291506103aa565b5090565b50805460018160011615610100020316600290046000825580601f10610390575061020c565b601f01602090049060005260206000209081019061020c91905b6103c491905b8082111561036657600081556001016103b0565b9056fea2646970667358221220da01d30aa5243b5d7134f8a30352d3cc77e669ff2f3ad40b64bbf267bf7a291b64736f6c63430006040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806309aa37ba1461004657806340dd4b22146100f5578063ef74e0ac14610112575b600080fd5b6100f36004803603604081101561005c57600080fd5b8135919081019060408101602082013564010000000081111561007e57600080fd5b82018360208201111561009057600080fd5b803590602001918460018302840111640100000000831117156100b257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101c0945050505050565b005b6100f36004803603602081101561010b57600080fd5b50356101eb565b61014b6004803603604081101561012857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561020f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018557818101518382015260200161016d565b50505050905090810190601f1680156101b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b33600090815260208181526040808320858452825290912082516101e6928401906102ec565b505050565b33600090815260208181526040808320848452909152812061020c9161036a565b50565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845282529182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050505050905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032d57805160ff191683800117855561035a565b8280016001018555821561035a579182015b8281111561035a57825182559160200191906001019061033f565b506103669291506103aa565b5090565b50805460018160011615610100020316600290046000825580601f10610390575061020c565b601f01602090049060005260206000209081019061020c91905b6103c491905b8082111561036657600081556001016103b0565b9056fea2646970667358221220da01d30aa5243b5d7134f8a30352d3cc77e669ff2f3ad40b64bbf267bf7a291b64736f6c63430006040033",
  "sourceMap": "464:1603:34:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;464:1603:34;;;;;;;",
  "deployedSourceMap": "464:1603:34:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;464:1603:34;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1661:126:34;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1661:126:34;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;1661:126:34;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1661:126:34;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1661:126:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1661:126:34;;-1:-1:-1;1661:126:34;;-1:-1:-1;;;;;1661:126:34:i;:::-;;1963:102;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1963:102:34;;:::i;1127:137::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1127:137:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1127:137:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1661:126;1748:10;1741:6;:18;;;;;;;;;;;:29;;;;;;;;:39;;;;;;;;:::i;:::-;;1661:126;;:::o;1963:102::-;2036:10;2029:6;:18;;;;;;;;;;;:29;;;;;;;;2022:36;;;:::i;:::-;1963:102;:::o;1127:137::-;1234:12;;;:6;:12;;;;;;;;;;;:23;;;;;;;;;1227:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:12;;1227:30;;;1234:23;1227:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:137;;;;:::o;464:1603::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;464:1603:34;;;-1:-1:-1;464:1603:34;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\n\n/**\n * @title Contract for storing keyed encrypted messages via the EVM.\n * @dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\n * given time. Technically, topic hashes and messages do not need to be encrypted, but because\n * anyone can read stored messages, this contract is designed to store encrypted messages.\n * Only one message per topic is stored at any given time.\n */\ncontract EncryptedStore {\n    // Mapping from users to hashes, which act as keys for encrypted messages.\n    // Note: the hash is designed to be a hash of the \"subject\" or \"topic\" of the message.\n    mapping(address => mapping(bytes32 => bytes)) private stores;\n\n    /**\n     * @notice Gets the current stored message corresponding to `user` and `topicHash`.\n     * @dev To decrypt messages (this requires access to the owner's private keys), use the decryptMessage()\n     * function in common/Crypto.js.\n     * @param user address that stored this message.\n     * @param topicHash hash of the \"subject\" of the message.\n     * @return stored message.\n     */\n    function getMessage(address user, bytes32 topicHash) external view returns (bytes memory) {\n        return stores[user][topicHash];\n    }\n\n    /**\n     * @notice Stores a `message` categorized by a particular `topicHash`. This will overwrite the\n     * previous messages sent by this caller with this `topicHash`.\n     * @dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\n     * @param topicHash hash of the \"subject\" or \"topic\" of the message.\n     * @param message the stored message.\n     */\n    function storeMessage(bytes32 topicHash, bytes memory message) public {\n        stores[msg.sender][topicHash] = message;\n    }\n\n    /**\n     * @notice Removes a stored message categorized by a particular `topicHash`.\n     * @param topicHash hash of the \"subject\" or \"topic\" of the message.\n     */\n    function removeMessage(bytes32 topicHash) public {\n        delete stores[msg.sender][topicHash];\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/EncryptedStore.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/EncryptedStore.sol",
    "exportedSymbols": {
      "EncryptedStore": [
        9867
      ]
    },
    "id": 9868,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9809,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9810,
          "nodeType": "StructuredDocumentation",
          "src": "26:437:34",
          "text": "@title Contract for storing keyed encrypted messages via the EVM.\n@dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\ngiven time. Technically, topic hashes and messages do not need to be encrypted, but because\nanyone can read stored messages, this contract is designed to store encrypted messages.\nOnly one message per topic is stored at any given time."
        },
        "fullyImplemented": true,
        "id": 9867,
        "linearizedBaseContracts": [
          9867
        ],
        "name": "EncryptedStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9816,
            "name": "stores",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9867,
            "src": "664:60:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bytes))"
            },
            "typeName": {
              "id": 9815,
              "keyType": {
                "id": 9811,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "672:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "664:45:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bytes))"
              },
              "valueType": {
                "id": 9814,
                "keyType": {
                  "id": 9812,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:7:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "683:25:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                  "typeString": "mapping(bytes32 => bytes)"
                },
                "valueType": {
                  "id": 9813,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "702:5:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9832,
              "nodeType": "Block",
              "src": "1217:47:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9826,
                        "name": "stores",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9816,
                        "src": "1234:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                        }
                      },
                      "id": 9828,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9827,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9819,
                        "src": "1241:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1234:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                        "typeString": "mapping(bytes32 => bytes storage ref)"
                      }
                    },
                    "id": 9830,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 9829,
                      "name": "topicHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9821,
                      "src": "1247:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1234:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 9825,
                  "id": 9831,
                  "nodeType": "Return",
                  "src": "1227:30:34"
                }
              ]
            },
            "documentation": {
              "id": 9817,
              "nodeType": "StructuredDocumentation",
              "src": "731:391:34",
              "text": "@notice Gets the current stored message corresponding to `user` and `topicHash`.\n@dev To decrypt messages (this requires access to the owner's private keys), use the decryptMessage()\nfunction in common/Crypto.js.\n@param user address that stored this message.\n@param topicHash hash of the \"subject\" of the message.\n@return stored message."
            },
            "functionSelector": "ef74e0ac",
            "id": 9833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9819,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1147:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9821,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1161:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9820,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:33:34"
            },
            "returnParameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1203:12:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:14:34"
            },
            "scope": 9867,
            "src": "1127:137:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9850,
              "nodeType": "Block",
              "src": "1731:56:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9841,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "1741:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 9845,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9842,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1748:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1748:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1741:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 9846,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9844,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9836,
                        "src": "1760:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1741:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9847,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9838,
                      "src": "1773:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1741:39:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 9849,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:39:34"
                }
              ]
            },
            "documentation": {
              "id": 9834,
              "nodeType": "StructuredDocumentation",
              "src": "1270:386:34",
              "text": "@notice Stores a `message` categorized by a particular `topicHash`. This will overwrite the\nprevious messages sent by this caller with this `topicHash`.\n@dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\n@param topicHash hash of the \"subject\" or \"topic\" of the message.\n@param message the stored message."
            },
            "functionSelector": "09aa37ba",
            "id": 9851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9836,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9851,
                  "src": "1683:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9835,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9838,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9851,
                  "src": "1702:20:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9837,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1682:41:34"
            },
            "returnParameters": {
              "id": 9840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:0:34"
            },
            "scope": 9867,
            "src": "1661:126:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9865,
              "nodeType": "Block",
              "src": "2012:53:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2022:36:34",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9857,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "2029:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 9860,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9858,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2036:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2036:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2029:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 9862,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9861,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9854,
                        "src": "2048:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9864,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:36:34"
                }
              ]
            },
            "documentation": {
              "id": 9852,
              "nodeType": "StructuredDocumentation",
              "src": "1793:165:34",
              "text": "@notice Removes a stored message categorized by a particular `topicHash`.\n@param topicHash hash of the \"subject\" or \"topic\" of the message."
            },
            "functionSelector": "40dd4b22",
            "id": 9866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9866,
                  "src": "1986:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1985:19:34"
            },
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:0:34"
            },
            "scope": 9867,
            "src": "1963:102:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9868,
        "src": "464:1603:34"
      }
    ],
    "src": "0:2068:34"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/EncryptedStore.sol",
    "exportedSymbols": {
      "EncryptedStore": [
        9867
      ]
    },
    "id": 9868,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9809,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9810,
          "nodeType": "StructuredDocumentation",
          "src": "26:437:34",
          "text": "@title Contract for storing keyed encrypted messages via the EVM.\n@dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\ngiven time. Technically, topic hashes and messages do not need to be encrypted, but because\nanyone can read stored messages, this contract is designed to store encrypted messages.\nOnly one message per topic is stored at any given time."
        },
        "fullyImplemented": true,
        "id": 9867,
        "linearizedBaseContracts": [
          9867
        ],
        "name": "EncryptedStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9816,
            "name": "stores",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9867,
            "src": "664:60:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bytes))"
            },
            "typeName": {
              "id": 9815,
              "keyType": {
                "id": 9811,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "672:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "664:45:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bytes))"
              },
              "valueType": {
                "id": 9814,
                "keyType": {
                  "id": 9812,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:7:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "683:25:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                  "typeString": "mapping(bytes32 => bytes)"
                },
                "valueType": {
                  "id": 9813,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "702:5:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9832,
              "nodeType": "Block",
              "src": "1217:47:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9826,
                        "name": "stores",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9816,
                        "src": "1234:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                        }
                      },
                      "id": 9828,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9827,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9819,
                        "src": "1241:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1234:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                        "typeString": "mapping(bytes32 => bytes storage ref)"
                      }
                    },
                    "id": 9830,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 9829,
                      "name": "topicHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9821,
                      "src": "1247:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1234:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 9825,
                  "id": 9831,
                  "nodeType": "Return",
                  "src": "1227:30:34"
                }
              ]
            },
            "documentation": {
              "id": 9817,
              "nodeType": "StructuredDocumentation",
              "src": "731:391:34",
              "text": "@notice Gets the current stored message corresponding to `user` and `topicHash`.\n@dev To decrypt messages (this requires access to the owner's private keys), use the decryptMessage()\nfunction in common/Crypto.js.\n@param user address that stored this message.\n@param topicHash hash of the \"subject\" of the message.\n@return stored message."
            },
            "functionSelector": "ef74e0ac",
            "id": 9833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9819,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1147:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9821,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1161:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9820,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:33:34"
            },
            "returnParameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9833,
                  "src": "1203:12:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:14:34"
            },
            "scope": 9867,
            "src": "1127:137:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9850,
              "nodeType": "Block",
              "src": "1731:56:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9841,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "1741:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 9845,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9842,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1748:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1748:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1741:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 9846,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9844,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9836,
                        "src": "1760:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1741:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9847,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9838,
                      "src": "1773:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1741:39:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 9849,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:39:34"
                }
              ]
            },
            "documentation": {
              "id": 9834,
              "nodeType": "StructuredDocumentation",
              "src": "1270:386:34",
              "text": "@notice Stores a `message` categorized by a particular `topicHash`. This will overwrite the\nprevious messages sent by this caller with this `topicHash`.\n@dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\n@param topicHash hash of the \"subject\" or \"topic\" of the message.\n@param message the stored message."
            },
            "functionSelector": "09aa37ba",
            "id": 9851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9836,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9851,
                  "src": "1683:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9835,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9838,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9851,
                  "src": "1702:20:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9837,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1682:41:34"
            },
            "returnParameters": {
              "id": 9840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:0:34"
            },
            "scope": 9867,
            "src": "1661:126:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9865,
              "nodeType": "Block",
              "src": "2012:53:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2022:36:34",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9857,
                          "name": "stores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "2029:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 9860,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9858,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2036:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2036:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2029:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 9862,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9861,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9854,
                        "src": "2048:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9864,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:36:34"
                }
              ]
            },
            "documentation": {
              "id": 9852,
              "nodeType": "StructuredDocumentation",
              "src": "1793:165:34",
              "text": "@notice Removes a stored message categorized by a particular `topicHash`.\n@param topicHash hash of the \"subject\" or \"topic\" of the message."
            },
            "functionSelector": "40dd4b22",
            "id": 9866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9866,
                  "src": "1986:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1985:19:34"
            },
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:0:34"
            },
            "scope": 9867,
            "src": "1963:102:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9868,
        "src": "464:1603:34"
      }
    ],
    "src": "0:2068:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-19T21:38:31.536Z",
  "devdoc": {
    "details": "This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any given time. Technically, topic hashes and messages do not need to be encrypted, but because anyone can read stored messages, this contract is designed to store encrypted messages. Only one message per topic is stored at any given time.",
    "methods": {
      "getMessage(address,bytes32)": {
        "details": "To decrypt messages (this requires access to the owner's private keys), use the decryptMessage() function in common/Crypto.js.",
        "params": {
          "topicHash": "hash of the \"subject\" of the message.",
          "user": "address that stored this message."
        },
        "returns": {
          "_0": "stored message."
        }
      },
      "removeMessage(bytes32)": {
        "params": {
          "topicHash": "hash of the \"subject\" or \"topic\" of the message."
        }
      },
      "storeMessage(bytes32,bytes)": {
        "details": "To construct an encrypted message, use the encryptMessage() in common/Crypto.js.",
        "params": {
          "message": "the stored message.",
          "topicHash": "hash of the \"subject\" or \"topic\" of the message."
        }
      }
    },
    "title": "Contract for storing keyed encrypted messages via the EVM."
  },
  "userdoc": {
    "methods": {
      "getMessage(address,bytes32)": {
        "notice": "Gets the current stored message corresponding to `user` and `topicHash`."
      },
      "removeMessage(bytes32)": {
        "notice": "Removes a stored message categorized by a particular `topicHash`."
      },
      "storeMessage(bytes32,bytes)": {
        "notice": "Stores a `message` categorized by a particular `topicHash`. This will overwrite the previous messages sent by this caller with this `topicHash`."
      }
    }
  }
}