{
  "contractName": "StoreInterface",
  "abi": [
    {
      "inputs": [],
      "name": "payOracleFees",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        }
      ],
      "name": "payOracleFeesErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "pfc",
          "type": "tuple"
        }
      ],
      "name": "computeRegularFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "regularFee",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "latePenalty",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "computeFinalFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"computeFinalFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"pfc\",\"type\":\"tuple\"}],\"name\":\"computeRegularFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"regularFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"latePenalty\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payOracleFees\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"}],\"name\":\"payOracleFeesErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"computeFinalFee(address)\":{\"params\":{\"currency\":\"token used to pay the final fee.\"},\"returns\":{\"finalFee\":\"amount due.\"}},\"computeRegularFee(uint256,uint256,(uint256))\":{\"params\":{\"endTime\":\"end time until which the fee is paid.\",\"pfc\":\"` \\\"profit from corruption\\\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.\",\"startTime\":\"defines the beginning time from which the fee is paid.\"},\"returns\":{\"latePenalty\":\"for paying the fee after the deadline.\",\"regularFee\":\"amount owed for the duration from start to end time for the given pfc.\"}},\"payOracleFees()\":{\"details\":\"To be used by contracts whose margin currency is ETH.\"},\"payOracleFeesErc20(address)\":{\"details\":\"To be used if the margin currency is an ERC20 token rather than ETH. All approved tokens are transferred.\",\"params\":{\"erc20Address\":\"address of the ERC20 token used to pay the fee.\"}}},\"title\":\"Interface that allows financial contracts to pay oracle fees for their use of the system.\"},\"userdoc\":{\"methods\":{\"computeFinalFee(address)\":{\"notice\":\"Computes the final oracle fees that a contract should pay at settlement.\"},\"computeRegularFee(uint256,uint256,(uint256))\":{\"notice\":\"Computes the regular oracle fees that a contract should pay for a period.\"},\"payOracleFees()\":{\"notice\":\"Pays Oracle fees in ETH to the store.\"},\"payOracleFeesErc20(address)\":{\"notice\":\"Pays oracle fees in the margin currency, erc20Address, to the store.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":\"StoreInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xf93005a2285b10a0b7e7b53fef45c4921c5131edc80f6481848b670a37343275\",\"urls\":[\"bzz-raw://dd2db53bbd8b4c3312e274e392c3f0781c56e520f858ef77a04a075d18123625\",\"dweb:/ipfs/QmPxr5HSYVJKfzWnQpGVf4hg4kxMrCRTAw5isjkBmvsA5N\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x199b2dedeae928a19753066a889aad1bc13c1376553f57e51163b4c9e132061a\",\"urls\":[\"bzz-raw://9e3f1f3efcd312c3e5396750a235fa429d7a9c0809bbaf5eab4428342dcff12a\",\"dweb:/ipfs/Qme9fMMduhxRhQXvBMo1mEggEf2Me9FNLFG6qGKA3bFZcj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe4ed9d633e8e678e8ece3756e4002cc7989b72cd29a17ecdacdabf4fd48820a7\",\"urls\":[\"bzz-raw://03a55c81a7d4c93a1ca6d9b931830c1fde2799bfbbf5841321f67e7b056c36c2\",\"dweb:/ipfs/QmbcgdfB278NvzVZKjA7Jf1NjSeCCQ2277mJGL4UskyS56\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../common/implementation/FixedPoint.sol\";\n\n\n/**\n * @title Interface that allows financial contracts to pay oracle fees for their use of the system.\n */\ninterface StoreInterface {\n    /**\n     * @notice Pays Oracle fees in ETH to the store.\n     * @dev To be used by contracts whose margin currency is ETH.\n     */\n    function payOracleFees() external payable;\n\n    /**\n     * @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n     * @dev To be used if the margin currency is an ERC20 token rather than ETH.\n     * All approved tokens are transferred.\n     * @param erc20Address address of the ERC20 token used to pay the fee.\n     */\n    function payOracleFeesErc20(address erc20Address) external;\n\n    /**\n     * @notice Computes the regular oracle fees that a contract should pay for a period.\n     * @param startTime defines the beginning time from which the fee is paid.\n     * @param endTime end time until which the fee is paid.\n     * @param pfc` \"profit from corruption\", or the maximum amount of margin currency that a\n     * token sponsor could extract from the contract through corrupting the price feed in their favor.\n     * @return regularFee amount owed for the duration from start to end time for the given pfc.\n     * @return latePenalty for paying the fee after the deadline.\n     */\n    function computeRegularFee(uint startTime, uint endTime, FixedPoint.Unsigned calldata pfc)\n        external\n        view\n        returns (FixedPoint.Unsigned memory regularFee, FixedPoint.Unsigned memory latePenalty);\n\n    /**\n     * @notice Computes the final oracle fees that a contract should pay at settlement.\n     * @param currency token used to pay the final fee.\n     * @return finalFee amount due.\n     */\n    function computeFinalFee(address currency) external view returns (FixedPoint.Unsigned memory finalFee);\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
    "exportedSymbols": {
      "StoreInterface": [
        13884
      ]
    },
    "id": 13885,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13847,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "id": 13848,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:54"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13849,
        "nodeType": "ImportDirective",
        "scope": 13885,
        "sourceUnit": 20709,
        "src": "59:56:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 13850,
        "nodeType": "ImportDirective",
        "scope": 13885,
        "sourceUnit": 3945,
        "src": "116:52:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 13851,
          "nodeType": "StructuredDocumentation",
          "src": "171:107:54",
          "text": "@title Interface that allows financial contracts to pay oracle fees for their use of the system."
        },
        "fullyImplemented": false,
        "id": 13884,
        "linearizedBaseContracts": [
          13884
        ],
        "name": "StoreInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 13852,
              "nodeType": "StructuredDocumentation",
              "src": "310:130:54",
              "text": "@notice Pays Oracle fees in ETH to the store.\n@dev To be used by contracts whose margin currency is ETH."
            },
            "functionSelector": "cd3a9b24",
            "id": 13855,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:54"
            },
            "returnParameters": {
              "id": 13854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:54"
            },
            "scope": 13884,
            "src": "445:42:54",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13856,
              "nodeType": "StructuredDocumentation",
              "src": "493:295:54",
              "text": "@notice Pays oracle fees in the margin currency, erc20Address, to the store.\n@dev To be used if the margin currency is an ERC20 token rather than ETH.\nAll approved tokens are transferred.\n@param erc20Address address of the ERC20 token used to pay the fee."
            },
            "functionSelector": "4933a887",
            "id": 13861,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFeesErc20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13858,
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13861,
                  "src": "821:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:22:54"
            },
            "returnParameters": {
              "id": 13860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:54"
            },
            "scope": 13884,
            "src": "793:59:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13862,
              "nodeType": "StructuredDocumentation",
              "src": "858:598:54",
              "text": "@notice Computes the regular oracle fees that a contract should pay for a period.\n@param startTime defines the beginning time from which the fee is paid.\n@param endTime end time until which the fee is paid.\n@param pfc` \"profit from corruption\", or the maximum amount of margin currency that a\ntoken sponsor could extract from the contract through corrupting the price feed in their favor.\n@return regularFee amount owed for the duration from start to end time for the given pfc.\n@return latePenalty for paying the fee after the deadline."
            },
            "functionSelector": "74201feb",
            "id": 13875,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeRegularFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13864,
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1488:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13863,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13866,
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1504:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13865,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13868,
                  "name": "pfc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1518:32:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13867,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1518:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1487:64:54"
            },
            "returnParameters": {
              "id": 13874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13871,
                  "name": "regularFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1599:37:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13870,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1599:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13873,
                  "name": "latePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1638:38:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13872,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1638:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1598:79:54"
            },
            "scope": 13884,
            "src": "1461:217:54",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13876,
              "nodeType": "StructuredDocumentation",
              "src": "1684:191:54",
              "text": "@notice Computes the final oracle fees that a contract should pay at settlement.\n@param currency token used to pay the final fee.\n@return finalFee amount due."
            },
            "functionSelector": "5b97aadd",
            "id": 13883,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFinalFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13878,
                  "name": "currency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13883,
                  "src": "1905:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1904:18:54"
            },
            "returnParameters": {
              "id": 13882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13881,
                  "name": "finalFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13883,
                  "src": "1946:35:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13880,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1946:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1945:37:54"
            },
            "scope": 13884,
            "src": "1880:103:54",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13885,
        "src": "279:1706:54"
      }
    ],
    "src": "0:1986:54"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
    "exportedSymbols": {
      "StoreInterface": [
        13884
      ]
    },
    "id": 13885,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13847,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "id": 13848,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:54"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13849,
        "nodeType": "ImportDirective",
        "scope": 13885,
        "sourceUnit": 20709,
        "src": "59:56:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 13850,
        "nodeType": "ImportDirective",
        "scope": 13885,
        "sourceUnit": 3945,
        "src": "116:52:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 13851,
          "nodeType": "StructuredDocumentation",
          "src": "171:107:54",
          "text": "@title Interface that allows financial contracts to pay oracle fees for their use of the system."
        },
        "fullyImplemented": false,
        "id": 13884,
        "linearizedBaseContracts": [
          13884
        ],
        "name": "StoreInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 13852,
              "nodeType": "StructuredDocumentation",
              "src": "310:130:54",
              "text": "@notice Pays Oracle fees in ETH to the store.\n@dev To be used by contracts whose margin currency is ETH."
            },
            "functionSelector": "cd3a9b24",
            "id": 13855,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:54"
            },
            "returnParameters": {
              "id": 13854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:54"
            },
            "scope": 13884,
            "src": "445:42:54",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13856,
              "nodeType": "StructuredDocumentation",
              "src": "493:295:54",
              "text": "@notice Pays oracle fees in the margin currency, erc20Address, to the store.\n@dev To be used if the margin currency is an ERC20 token rather than ETH.\nAll approved tokens are transferred.\n@param erc20Address address of the ERC20 token used to pay the fee."
            },
            "functionSelector": "4933a887",
            "id": 13861,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFeesErc20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13858,
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13861,
                  "src": "821:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:22:54"
            },
            "returnParameters": {
              "id": 13860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:54"
            },
            "scope": 13884,
            "src": "793:59:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13862,
              "nodeType": "StructuredDocumentation",
              "src": "858:598:54",
              "text": "@notice Computes the regular oracle fees that a contract should pay for a period.\n@param startTime defines the beginning time from which the fee is paid.\n@param endTime end time until which the fee is paid.\n@param pfc` \"profit from corruption\", or the maximum amount of margin currency that a\ntoken sponsor could extract from the contract through corrupting the price feed in their favor.\n@return regularFee amount owed for the duration from start to end time for the given pfc.\n@return latePenalty for paying the fee after the deadline."
            },
            "functionSelector": "74201feb",
            "id": 13875,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeRegularFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13864,
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1488:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13863,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13866,
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1504:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13865,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13868,
                  "name": "pfc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1518:32:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13867,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1518:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1487:64:54"
            },
            "returnParameters": {
              "id": 13874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13871,
                  "name": "regularFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1599:37:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13870,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1599:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13873,
                  "name": "latePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13875,
                  "src": "1638:38:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13872,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1638:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1598:79:54"
            },
            "scope": 13884,
            "src": "1461:217:54",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 13876,
              "nodeType": "StructuredDocumentation",
              "src": "1684:191:54",
              "text": "@notice Computes the final oracle fees that a contract should pay at settlement.\n@param currency token used to pay the final fee.\n@return finalFee amount due."
            },
            "functionSelector": "5b97aadd",
            "id": 13883,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFinalFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13878,
                  "name": "currency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13883,
                  "src": "1905:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1904:18:54"
            },
            "returnParameters": {
              "id": 13882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13881,
                  "name": "finalFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13883,
                  "src": "1946:35:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3259_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13880,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3259,
                    "src": "1946:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3259_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1945:37:54"
            },
            "scope": 13884,
            "src": "1880:103:54",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13885,
        "src": "279:1706:54"
      }
    ],
    "src": "0:1986:54"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-19T21:38:31.704Z",
  "devdoc": {
    "methods": {
      "computeFinalFee(address)": {
        "params": {
          "currency": "token used to pay the final fee."
        },
        "returns": {
          "finalFee": "amount due."
        }
      },
      "computeRegularFee(uint256,uint256,(uint256))": {
        "params": {
          "endTime": "end time until which the fee is paid.",
          "pfc": "` \"profit from corruption\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.",
          "startTime": "defines the beginning time from which the fee is paid."
        },
        "returns": {
          "latePenalty": "for paying the fee after the deadline.",
          "regularFee": "amount owed for the duration from start to end time for the given pfc."
        }
      },
      "payOracleFees()": {
        "details": "To be used by contracts whose margin currency is ETH."
      },
      "payOracleFeesErc20(address)": {
        "details": "To be used if the margin currency is an ERC20 token rather than ETH. All approved tokens are transferred.",
        "params": {
          "erc20Address": "address of the ERC20 token used to pay the fee."
        }
      }
    },
    "title": "Interface that allows financial contracts to pay oracle fees for their use of the system."
  },
  "userdoc": {
    "methods": {
      "computeFinalFee(address)": {
        "notice": "Computes the final oracle fees that a contract should pay at settlement."
      },
      "computeRegularFee(uint256,uint256,(uint256))": {
        "notice": "Computes the regular oracle fees that a contract should pay for a period."
      },
      "payOracleFees()": {
        "notice": "Pays Oracle fees in ETH to the store."
      },
      "payOracleFeesErc20(address)": {
        "notice": "Pays oracle fees in the margin currency, erc20Address, to the store."
      }
    }
  }
}