{
  "contractName": "StoreInterface",
  "abi": [
    {
      "inputs": [],
      "name": "payOracleFees",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amount",
          "type": "tuple"
        }
      ],
      "name": "payOracleFeesErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "pfc",
          "type": "tuple"
        }
      ],
      "name": "computeRegularFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "regularFee",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "latePenalty",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "computeFinalFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"computeFinalFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"pfc\",\"type\":\"tuple\"}],\"name\":\"computeRegularFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"regularFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"latePenalty\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payOracleFees\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amount\",\"type\":\"tuple\"}],\"name\":\"payOracleFeesErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"computeFinalFee(address)\":{\"params\":{\"currency\":\"token used to pay the final fee.\"},\"returns\":{\"_0\":\"finalFee amount due.\"}},\"computeRegularFee(uint256,uint256,(uint256))\":{\"params\":{\"endTime\":\"end time until which the fee is paid.\",\"pfc\":\"\\\"profit from corruption\\\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.\",\"startTime\":\"defines the beginning time from which the fee is paid.\"},\"returns\":{\"latePenalty\":\"for paying the fee after the deadline.\",\"regularFee\":\"amount owed for the duration from start to end time for the given pfc.\"}},\"payOracleFees()\":{\"details\":\"To be used by contracts whose margin currency is ETH.\"},\"payOracleFeesErc20(address,(uint256))\":{\"details\":\"To be used if the margin currency is an ERC20 token rather than ETH.\",\"params\":{\"amount\":\"number of tokens to transfer. An approval for at least this amount must exist.\",\"erc20Address\":\"address of the ERC20 token used to pay the fee.\"}}},\"title\":\"Interface that allows financial contracts to pay oracle fees for their use of the system.\"},\"userdoc\":{\"methods\":{\"computeFinalFee(address)\":{\"notice\":\"Computes the final oracle fees that a contract should pay at settlement.\"},\"computeRegularFee(uint256,uint256,(uint256))\":{\"notice\":\"Computes the regular oracle fees that a contract should pay for a period.\"},\"payOracleFees()\":{\"notice\":\"Pays Oracle fees in ETH to the store.\"},\"payOracleFeesErc20(address,(uint256))\":{\"notice\":\"Pays oracle fees in the margin currency, erc20Address, to the store.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":\"StoreInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x3d885e5bd438f0944d0acd5e87b77cb5030cbf5c88aca9b8d53738eedbf9c194\",\"urls\":[\"bzz-raw://24c9b213a7c87a2bdf62fbeeb6b0051dd4379ea060ada498760a281dda886fa3\",\"dweb:/ipfs/QmZgHZkyG6cQujfJ56hjFHjM2215hCevFusVcvUuss2tgf\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../common/implementation/FixedPoint.sol\";\n\n\n/**\n * @title Interface that allows financial contracts to pay oracle fees for their use of the system.\n */\ninterface StoreInterface {\n    /**\n     * @notice Pays Oracle fees in ETH to the store.\n     * @dev To be used by contracts whose margin currency is ETH.\n     */\n    function payOracleFees() external payable;\n\n    /**\n     * @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n     * @dev To be used if the margin currency is an ERC20 token rather than ETH.\n     * @param erc20Address address of the ERC20 token used to pay the fee.\n     * @param amount number of tokens to transfer. An approval for at least this amount must exist.\n     */\n    function payOracleFeesErc20(address erc20Address, FixedPoint.Unsigned calldata amount) external;\n\n    /**\n     * @notice Computes the regular oracle fees that a contract should pay for a period.\n     * @param startTime defines the beginning time from which the fee is paid.\n     * @param endTime end time until which the fee is paid.\n     * @param pfc \"profit from corruption\", or the maximum amount of margin currency that a\n     * token sponsor could extract from the contract through corrupting the price feed in their favor.\n     * @return regularFee amount owed for the duration from start to end time for the given pfc.\n     * @return latePenalty for paying the fee after the deadline.\n     */\n    function computeRegularFee(\n        uint256 startTime,\n        uint256 endTime,\n        FixedPoint.Unsigned calldata pfc\n    ) external view returns (FixedPoint.Unsigned memory regularFee, FixedPoint.Unsigned memory latePenalty);\n\n    /**\n     * @notice Computes the final oracle fees that a contract should pay at settlement.\n     * @param currency token used to pay the final fee.\n     * @return finalFee amount due.\n     */\n    function computeFinalFee(address currency) external view returns (FixedPoint.Unsigned memory);\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
    "exportedSymbols": {
      "StoreInterface": [
        16506
      ]
    },
    "id": 16507,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16467,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "id": 16468,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:67"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 16469,
        "nodeType": "ImportDirective",
        "scope": 16507,
        "sourceUnit": 18487,
        "src": "59:56:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 16470,
        "nodeType": "ImportDirective",
        "scope": 16507,
        "sourceUnit": 4271,
        "src": "116:52:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16471,
          "nodeType": "StructuredDocumentation",
          "src": "171:107:67",
          "text": "@title Interface that allows financial contracts to pay oracle fees for their use of the system."
        },
        "fullyImplemented": false,
        "id": 16506,
        "linearizedBaseContracts": [
          16506
        ],
        "name": "StoreInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 16472,
              "nodeType": "StructuredDocumentation",
              "src": "310:130:67",
              "text": "@notice Pays Oracle fees in ETH to the store.\n@dev To be used by contracts whose margin currency is ETH."
            },
            "functionSelector": "cd3a9b24",
            "id": 16475,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:67"
            },
            "returnParameters": {
              "id": 16474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:67"
            },
            "scope": 16506,
            "src": "445:42:67",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16476,
              "nodeType": "StructuredDocumentation",
              "src": "493:351:67",
              "text": "@notice Pays oracle fees in the margin currency, erc20Address, to the store.\n@dev To be used if the margin currency is an ERC20 token rather than ETH.\n@param erc20Address address of the ERC20 token used to pay the fee.\n@param amount number of tokens to transfer. An approval for at least this amount must exist."
            },
            "functionSelector": "8659d232",
            "id": 16483,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFeesErc20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16478,
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16483,
                  "src": "877:20:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16480,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16483,
                  "src": "899:35:67",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16479,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "899:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "876:59:67"
            },
            "returnParameters": {
              "id": 16482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:67"
            },
            "scope": 16506,
            "src": "849:96:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16484,
              "nodeType": "StructuredDocumentation",
              "src": "951:597:67",
              "text": "@notice Computes the regular oracle fees that a contract should pay for a period.\n@param startTime defines the beginning time from which the fee is paid.\n@param endTime end time until which the fee is paid.\n@param pfc \"profit from corruption\", or the maximum amount of margin currency that a\ntoken sponsor could extract from the contract through corrupting the price feed in their favor.\n@return regularFee amount owed for the duration from start to end time for the given pfc.\n@return latePenalty for paying the fee after the deadline."
            },
            "functionSelector": "74201feb",
            "id": 16497,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeRegularFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16486,
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1589:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16488,
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1616:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16490,
                  "name": "pfc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1641:32:67",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16489,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1641:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:100:67"
            },
            "returnParameters": {
              "id": 16496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16493,
                  "name": "regularFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1703:37:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16492,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1703:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16495,
                  "name": "latePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1742:38:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16494,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1742:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1702:79:67"
            },
            "scope": 16506,
            "src": "1553:229:67",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16498,
              "nodeType": "StructuredDocumentation",
              "src": "1788:191:67",
              "text": "@notice Computes the final oracle fees that a contract should pay at settlement.\n@param currency token used to pay the final fee.\n@return finalFee amount due."
            },
            "functionSelector": "5b97aadd",
            "id": 16505,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFinalFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16500,
                  "name": "currency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16505,
                  "src": "2009:16:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2008:18:67"
            },
            "returnParameters": {
              "id": 16504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16503,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16505,
                  "src": "2050:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16502,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "2050:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2049:28:67"
            },
            "scope": 16506,
            "src": "1984:94:67",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16507,
        "src": "279:1801:67"
      }
    ],
    "src": "0:2081:67"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol",
    "exportedSymbols": {
      "StoreInterface": [
        16506
      ]
    },
    "id": 16507,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16467,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "id": 16468,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:67"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 16469,
        "nodeType": "ImportDirective",
        "scope": 16507,
        "sourceUnit": 18487,
        "src": "59:56:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 16470,
        "nodeType": "ImportDirective",
        "scope": 16507,
        "sourceUnit": 4271,
        "src": "116:52:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16471,
          "nodeType": "StructuredDocumentation",
          "src": "171:107:67",
          "text": "@title Interface that allows financial contracts to pay oracle fees for their use of the system."
        },
        "fullyImplemented": false,
        "id": 16506,
        "linearizedBaseContracts": [
          16506
        ],
        "name": "StoreInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 16472,
              "nodeType": "StructuredDocumentation",
              "src": "310:130:67",
              "text": "@notice Pays Oracle fees in ETH to the store.\n@dev To be used by contracts whose margin currency is ETH."
            },
            "functionSelector": "cd3a9b24",
            "id": 16475,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:67"
            },
            "returnParameters": {
              "id": 16474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:67"
            },
            "scope": 16506,
            "src": "445:42:67",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16476,
              "nodeType": "StructuredDocumentation",
              "src": "493:351:67",
              "text": "@notice Pays oracle fees in the margin currency, erc20Address, to the store.\n@dev To be used if the margin currency is an ERC20 token rather than ETH.\n@param erc20Address address of the ERC20 token used to pay the fee.\n@param amount number of tokens to transfer. An approval for at least this amount must exist."
            },
            "functionSelector": "8659d232",
            "id": 16483,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payOracleFeesErc20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16478,
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16483,
                  "src": "877:20:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16480,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16483,
                  "src": "899:35:67",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16479,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "899:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "876:59:67"
            },
            "returnParameters": {
              "id": 16482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:67"
            },
            "scope": 16506,
            "src": "849:96:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16484,
              "nodeType": "StructuredDocumentation",
              "src": "951:597:67",
              "text": "@notice Computes the regular oracle fees that a contract should pay for a period.\n@param startTime defines the beginning time from which the fee is paid.\n@param endTime end time until which the fee is paid.\n@param pfc \"profit from corruption\", or the maximum amount of margin currency that a\ntoken sponsor could extract from the contract through corrupting the price feed in their favor.\n@return regularFee amount owed for the duration from start to end time for the given pfc.\n@return latePenalty for paying the fee after the deadline."
            },
            "functionSelector": "74201feb",
            "id": 16497,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeRegularFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16486,
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1589:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16488,
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1616:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16490,
                  "name": "pfc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1641:32:67",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_calldata_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16489,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1641:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:100:67"
            },
            "returnParameters": {
              "id": 16496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16493,
                  "name": "regularFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1703:37:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16492,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1703:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16495,
                  "name": "latePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16497,
                  "src": "1742:38:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16494,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "1742:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1702:79:67"
            },
            "scope": 16506,
            "src": "1553:229:67",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 16498,
              "nodeType": "StructuredDocumentation",
              "src": "1788:191:67",
              "text": "@notice Computes the final oracle fees that a contract should pay at settlement.\n@param currency token used to pay the final fee.\n@return finalFee amount due."
            },
            "functionSelector": "5b97aadd",
            "id": 16505,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFinalFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16500,
                  "name": "currency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16505,
                  "src": "2009:16:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2008:18:67"
            },
            "returnParameters": {
              "id": 16504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16503,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16505,
                  "src": "2050:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$3583_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16502,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3583,
                    "src": "2050:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$3583_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2049:28:67"
            },
            "scope": 16506,
            "src": "1984:94:67",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16507,
        "src": "279:1801:67"
      }
    ],
    "src": "0:2081:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-09-17T18:56:02.286Z",
  "devdoc": {
    "methods": {
      "computeFinalFee(address)": {
        "params": {
          "currency": "token used to pay the final fee."
        },
        "returns": {
          "_0": "finalFee amount due."
        }
      },
      "computeRegularFee(uint256,uint256,(uint256))": {
        "params": {
          "endTime": "end time until which the fee is paid.",
          "pfc": "\"profit from corruption\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.",
          "startTime": "defines the beginning time from which the fee is paid."
        },
        "returns": {
          "latePenalty": "for paying the fee after the deadline.",
          "regularFee": "amount owed for the duration from start to end time for the given pfc."
        }
      },
      "payOracleFees()": {
        "details": "To be used by contracts whose margin currency is ETH."
      },
      "payOracleFeesErc20(address,(uint256))": {
        "details": "To be used if the margin currency is an ERC20 token rather than ETH.",
        "params": {
          "amount": "number of tokens to transfer. An approval for at least this amount must exist.",
          "erc20Address": "address of the ERC20 token used to pay the fee."
        }
      }
    },
    "title": "Interface that allows financial contracts to pay oracle fees for their use of the system."
  },
  "userdoc": {
    "methods": {
      "computeFinalFee(address)": {
        "notice": "Computes the final oracle fees that a contract should pay at settlement."
      },
      "computeRegularFee(uint256,uint256,(uint256))": {
        "notice": "Computes the regular oracle fees that a contract should pay for a period."
      },
      "payOracleFees()": {
        "notice": "Pays Oracle fees in ETH to the store."
      },
      "payOracleFeesErc20(address,(uint256))": {
        "notice": "Pays oracle fees in the margin currency, erc20Address, to the store."
      }
    }
  }
}