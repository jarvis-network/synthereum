{
  "contractName": "TestableTest",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTestableTimeAndBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "testableTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTestableTimeAndBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"testableTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}}}},\"userdoc\":{\"methods\":{\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/TestableTest.sol\":\"TestableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x15b3f57e51e6e1d5f11b09cefd1cc60550e72fb827bf7cf8ff67b208368c7ec0\",\"urls\":[\"bzz-raw://8bdd28e1cb12662124354cc330acd14733dfbb786daf6401b1f5969a1e11b14d\",\"dweb:/ipfs/QmWY8kEXEALJ55CgHSCPZgAA4b39Ef2YdKshhnvqkyWEcm\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x1db17ce4c028ed96713c3fddda6d34155281e104a47b2c65283fd0f8293d78b1\",\"urls\":[\"bzz-raw://8f306faba8d5190f36c87a8f47cce3bd7894bc5540599819aea2dd5b8ffa9413\",\"dweb:/ipfs/Qmeg4wuF1Dw5DAuoxyfnrmMZ5MK6af226hEHxCJgWKgrch\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/TestableTest.sol\":{\"keccak256\":\"0xbb1c54cfa9b6bd4965a4b86aff6313ee6e92a08c4059a648bdd3e68b7d2abe2f\",\"urls\":[\"bzz-raw://462735317959a913639c55cc7f86ef480a4a15208609dd1d1d0f2109ea9576a8\",\"dweb:/ipfs/QmX8ijfa9wL67N1xMT2DPH2SRzfqJ7x1BYt1m9DY3q2FaY\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103103803806103108339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556102ab806100656000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c39c38d1461005157806322f8e5661461008257806329cb924d146100a1578063dc6ff7bd146100bb575b600080fd5b6100596100dc565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f6004803603602081101561009857600080fd5b50356100f8565b005b6100a96101a3565b60408051918252519081900360200190f35b6100c3610262565b6040805192835260208301919091528051918290030190f35b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1661011a57600080fd5b60008054604080517f22f8e56600000000000000000000000000000000000000000000000000000000815260048101859052905173ffffffffffffffffffffffffffffffffffffffff909216926322f8e5669260248084019382900301818387803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b5050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff161561025c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d602081101561025357600080fd5b5051905061025f565b50425b90565b60008061026d6101a3565b92429250905056fea264697066735822122077ffed2fe9a09cefb7b3c743b446bbd112ecf0c0b593ee0f07072129b38765de64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c39c38d1461005157806322f8e5661461008257806329cb924d146100a1578063dc6ff7bd146100bb575b600080fd5b6100596100dc565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f6004803603602081101561009857600080fd5b50356100f8565b005b6100a96101a3565b60408051918252519081900360200190f35b6100c3610262565b6040805192835260208301919091528051918290030190f35b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1661011a57600080fd5b60008054604080517f22f8e56600000000000000000000000000000000000000000000000000000000815260048101859052905173ffffffffffffffffffffffffffffffffffffffff909216926322f8e5669260248084019382900301818387803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b5050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff161561025c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d602081101561025357600080fd5b5051905061025f565b50425b90565b60008061026d6101a3565b92429250905056fea264697066735822122077ffed2fe9a09cefb7b3c743b446bbd112ecf0c0b593ee0f07072129b38765de64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "153:369:29:-:0;;;242:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;242:68:29;702:12:13;:28;;-1:-1:-1;;;;;702:28:13;;;-1:-1:-1;;;;;;702:28:13;;;;;;;;;153:369:29;;;;;;",
  "deployedSourceMap": "153:369:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:27:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1071:115;;;;;;;;;;;;;;;;-1:-1:-1;1071:115:13;;:::i;:::-;;1431:256;;;:::i;:::-;;;;;;;;;;;;;;;;316:204:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;356:27:13;;;;;;:::o;1071:115::-;873:3;849:12;:28;:12;841:37;;;;;;1145:12:::1;::::0;;1139:40:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;1145:12:::1;::::0;;::::1;::::0;1139:34:::1;::::0;:40;;;;;;;;;;1145:12;;1139:40;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1071:115:::0;:::o;1431:256::-;1478:7;1501:12;;:28;:12;:28;1497:184;;1558:12;;;;;;;;;;;1552:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1552:36:13;;-1:-1:-1;1545:43:13;;1497:184;-1:-1:-1;1626:3:13;1497:184;1431:256;:::o;316:204:29:-;378:20;400:17;491:16;:14;:16::i;:::-;483:30;509:3;;-1:-1:-1;316:204:29;-1:-1:-1;316:204:29:o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../implementation/Testable.sol\";\n\n\n// TestableTest is derived from the abstract contract Testable for testing purposes.\ncontract TestableTest is Testable {\n    // solhint-disable-next-line no-empty-blocks\n    constructor(address _timerAddress) public Testable(_timerAddress) {}\n\n    function getTestableTimeAndBlockTime() external view returns (uint256 testableTime, uint256 blockTime) {\n        // solhint-disable-next-line not-rely-on-time\n        return (getCurrentTime(), now);\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/TestableTest.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/TestableTest.sol",
    "exportedSymbols": {
      "TestableTest": [
        6741
      ]
    },
    "id": 6742,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6715,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Testable.sol",
        "file": "../implementation/Testable.sol",
        "id": 6716,
        "nodeType": "ImportDirective",
        "scope": 6742,
        "sourceUnit": 5297,
        "src": "25:40:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6717,
              "name": "Testable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5296,
              "src": "178:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Testable_$5296",
                "typeString": "contract Testable"
              }
            },
            "id": 6718,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:29"
          }
        ],
        "contractDependencies": [
          5296
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6741,
        "linearizedBaseContracts": [
          6741,
          5296
        ],
        "name": "TestableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6726,
              "nodeType": "Block",
              "src": "308:2:29",
              "statements": []
            },
            "documentation": null,
            "id": 6727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6723,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6720,
                    "src": "293:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6722,
                  "name": "Testable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5296,
                  "src": "284:8:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Testable_$5296_$",
                    "typeString": "type(contract Testable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "284:23:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6720,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6727,
                  "src": "254:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "253:23:29"
            },
            "returnParameters": {
              "id": 6725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:29"
            },
            "scope": 6741,
            "src": "242:68:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6739,
              "nodeType": "Block",
              "src": "419:101:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6734,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5295,
                          "src": "491:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 6735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:16:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6736,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "509:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 6737,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "490:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 6733,
                  "id": 6738,
                  "nodeType": "Return",
                  "src": "483:30:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dc6ff7bd",
            "id": 6740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestableTimeAndBlockTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:2:29"
            },
            "returnParameters": {
              "id": 6733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6730,
                  "mutability": "mutable",
                  "name": "testableTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6740,
                  "src": "378:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6732,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6740,
                  "src": "400:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:41:29"
            },
            "scope": 6741,
            "src": "316:204:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6742,
        "src": "153:369:29"
      }
    ],
    "src": "0:523:29"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/test/TestableTest.sol",
    "exportedSymbols": {
      "TestableTest": [
        6741
      ]
    },
    "id": 6742,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6715,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Testable.sol",
        "file": "../implementation/Testable.sol",
        "id": 6716,
        "nodeType": "ImportDirective",
        "scope": 6742,
        "sourceUnit": 5297,
        "src": "25:40:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6717,
              "name": "Testable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5296,
              "src": "178:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Testable_$5296",
                "typeString": "contract Testable"
              }
            },
            "id": 6718,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:29"
          }
        ],
        "contractDependencies": [
          5296
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6741,
        "linearizedBaseContracts": [
          6741,
          5296
        ],
        "name": "TestableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6726,
              "nodeType": "Block",
              "src": "308:2:29",
              "statements": []
            },
            "documentation": null,
            "id": 6727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6723,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6720,
                    "src": "293:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6722,
                  "name": "Testable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5296,
                  "src": "284:8:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Testable_$5296_$",
                    "typeString": "type(contract Testable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "284:23:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6720,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6727,
                  "src": "254:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "253:23:29"
            },
            "returnParameters": {
              "id": 6725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:29"
            },
            "scope": 6741,
            "src": "242:68:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6739,
              "nodeType": "Block",
              "src": "419:101:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6734,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5295,
                          "src": "491:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 6735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:16:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6736,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "509:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 6737,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "490:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 6733,
                  "id": 6738,
                  "nodeType": "Return",
                  "src": "483:30:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dc6ff7bd",
            "id": 6740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestableTimeAndBlockTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:2:29"
            },
            "returnParameters": {
              "id": 6733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6730,
                  "mutability": "mutable",
                  "name": "testableTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6740,
                  "src": "378:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6732,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6740,
                  "src": "400:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:41:29"
            },
            "scope": 6741,
            "src": "316:204:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6742,
        "src": "153:369:29"
      }
    ],
    "src": "0:523:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-22T14:01:04.256Z",
  "devdoc": {
    "methods": {
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      }
    }
  }
}