{
  "contractName": "ExpiringMultiParty",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expirationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalLiveness",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "timerAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "priceFeedIdentifier",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "syntheticName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "syntheticSymbol",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "minSponsorTokens",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLiveness",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "collateralRequirement",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputeBondPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "sponsorDisputeRewardPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputerDisputeRewardPct",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.ConstructorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ContractExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputeSucceeded",
          "type": "bool"
        }
      ],
      "name": "DisputeSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalExpirationTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shutdownTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EmergencyShutdown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "EndedSponsorPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FinalFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutstanding",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidatedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        }
      ],
      "name": "LiquidationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeBondAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidationDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum Liquidatable.Status",
          "name": "liquidationStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementPrice",
          "type": "uint256"
        }
      ],
      "name": "LiquidationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "NewSponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "PositionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "regularFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lateFee",
          "type": "uint256"
        }
      ],
      "name": "RegularFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralReturned",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokensBurned",
          "type": "uint256"
        }
      ],
      "name": "SettleExpiredPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cancelTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRequirement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractState",
      "outputs": [
        {
          "internalType": "enum PricelessPositionManager.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "minCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxTokensToLiquidate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "createLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensLiquidated",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFeeBond",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputeBondPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputerDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getLiquidations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "internalType": "enum Liquidatable.Status",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "liquidationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "tokensOutstanding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "lockedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "liquidatedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "rawUnitCollateral",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "settlementPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "finalFee",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.LiquidationData[]",
          "name": "liquidationData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "enum Liquidatable.Status",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "lockedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "liquidatedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawUnitCollateral",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "settlementPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minSponsorTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payRegularFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalRequestPassTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "withdrawalRequestAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawCollateral",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "transferPositionRequestPassTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawLiquidationCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawTotalPositionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "requestWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleExpired",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCurrency",
      "outputs": [
        {
          "internalType": "contract ExpandedIERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPositionCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalCollateral",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensOutstanding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSponsorAddress",
          "type": "address"
        }
      ],
      "name": "transferPositionPassedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "withdrawLiquidation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPassedRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLiveness\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"timerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceFeedIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"syntheticName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"syntheticSymbol\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minSponsorTokens\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLiveness\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputeBondPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"sponsorDisputeRewardPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputerDisputeRewardPct\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ContractExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputeSucceeded\",\"type\":\"bool\"}],\"name\":\"DisputeSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalExpirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shutdownTimestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyShutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"EndedSponsorPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FinalFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutstanding\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"}],\"name\":\"LiquidationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeBondAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidationDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum Liquidatable.Status\",\"name\":\"liquidationStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementPrice\",\"type\":\"uint256\"}],\"name\":\"LiquidationWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"NewSponsor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"PositionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"regularFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lateFee\",\"type\":\"uint256\"}],\"name\":\"RegularFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralReturned\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokensBurned\",\"type\":\"uint256\"}],\"name\":\"SettleExpiredPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"internalType\":\"enum PricelessPositionManager.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxTokensToLiquidate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensLiquidated\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFeeBond\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeFeeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"dispute\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeBondPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputerDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getLiquidations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.LiquidationData[]\",\"name\":\"liquidationData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSponsorTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payRegularFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalRequestPassTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"withdrawalRequestAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawCollateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"transferPositionRequestPassTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawLiquidationCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawTotalPositionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"redeem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleExpired\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsorDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCurrency\",\"outputs\":[{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPositionCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalCollateral\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSponsorAddress\",\"type\":\"address\"}],\"name\":\"transferPositionPassedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"withdrawLiquidation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPassedRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"params\":\"struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\"}},\"create((uint256),(uint256))\":{\"details\":\"Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"is the number of collateral tokens to collateralize the position with\",\"numTokens\":\"is the number of tokens to mint from the position.\"}},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"details\":\"This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.\",\"params\":{\"deadline\":\"abort the liquidation if the transaction is mined after this timestamp.\",\"maxCollateralPerToken\":\"abort the liquidation if the position's collateral per token exceeds this value.\",\"maxTokensToLiquidate\":\"max number of tokens to liquidate.\",\"minCollateralPerToken\":\"abort the liquidation if the position's collateral per token is below this value.\",\"sponsor\":\"address of the sponsor to liquidate.\"},\"returns\":{\"finalFeeBond\":\"amount of collateral to be posted by liquidator and returned if not disputed successfully.\",\"liquidationId\":\"ID of the newly created liquidation.\",\"tokensLiquidated\":\"amount of synthetic tokens removed and liquidated from the `sponsor`'s position.\"}},\"deposit((uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\"}},\"depositTo(address,(uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\",\"sponsor\":\"the sponsor to credit the deposit to.\"}},\"dispute(uint256,address)\":{\"details\":\"Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPct` times the collateral in the liquidation.\",\"params\":{\"liquidationId\":\"of the disputed liquidation.\",\"sponsor\":\"the address of the sponsor whose liquidation is being disputed.\"},\"returns\":{\"totalPaid\":\"amount of collateral charged to disputer (i.e. final fee bond + dispute bond).\"}},\"emergencyShutdown()\":{\"details\":\"Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees.\"},\"expire()\":{\"details\":\"this function can only be called once the contract is expired and can't be re-called.\"},\"getCollateral(address)\":{\"details\":\"This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.\",\"params\":{\"sponsor\":\"address whose collateral amount is retrieved.\"},\"returns\":{\"collateralAmount\":\"amount of collateral within a sponsors position.\"}},\"getLiquidations(address)\":{\"params\":{\"sponsor\":\"address of the position sponsor.\"},\"returns\":{\"liquidationData\":\"array of all liquidation information for the given sponsor address.\"}},\"payRegularFees()\":{\"details\":\"These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.\",\"returns\":{\"totalPaid\":\"Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0.\"}},\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corrution denominated in collateral currency.\"}},\"redeem((uint256))\":{\"details\":\"Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.\",\"params\":{\"numTokens\":\"is the number of tokens to be burnt for a commensurate amount of collateral.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"remargin()\":{\"details\":\"This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing.\"},\"requestTransferPosition()\":{\"details\":\"The liveness length is the same as the withdrawal liveness.\"},\"requestWithdrawal((uint256))\":{\"details\":\"The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.\",\"params\":{\"collateralAmount\":\"the amount of collateral requested to withdraw\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"settleExpired()\":{\"details\":\"This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"transferPositionPassedRequest(address)\":{\"details\":\"Transferring positions can only occur if the recipient does not already have a position.\",\"params\":{\"newSponsorAddress\":\"is the address to which the position will be transferred.\"}},\"withdraw((uint256))\":{\"details\":\"Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.\",\"params\":{\"collateralAmount\":\"is the amount of collateral to withdraw.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"withdrawLiquidation(uint256,address)\":{\"details\":\"If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. Once all collateral is withdrawn, delete the liquidation data.\",\"params\":{\"liquidationId\":\"uniquely identifies the sponsor's liquidation.\",\"sponsor\":\"address of the sponsor associated with the liquidation.\"},\"returns\":{\"amountWithdrawn\":\"the total amount of underlying returned from the liquidation.\"}},\"withdrawPassedRequest()\":{\"details\":\"Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}}},\"title\":\"Expiring Multi Party.\"},\"userdoc\":{\"methods\":{\"cancelTransferPosition()\":{\"notice\":\"Cancels a pending transfer position request.\"},\"cancelWithdrawal()\":{\"notice\":\"Cancels a pending withdrawal request.\"},\"constructor\":\"Constructs the ExpiringMultiParty contract.\",\"create((uint256),(uint256))\":{\"notice\":\"Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`.\"},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"notice\":\"Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens.\"},\"deposit((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the caller's position.\"},\"depositTo(address,(uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position.\"},\"dispute(uint256,address)\":{\"notice\":\"Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request.\"},\"emergencyShutdown()\":{\"notice\":\"Premature contract settlement under emergency circumstances.\"},\"expire()\":{\"notice\":\"Locks contract state in expired and requests oracle price.\"},\"getCollateral(address)\":{\"notice\":\"Accessor method for a sponsor's collateral.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getLiquidations(address)\":{\"notice\":\"Gets all liquidation information for a given sponsor address.\"},\"payRegularFees()\":{\"notice\":\"Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"redeem((uint256))\":{\"notice\":\"Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`.\"},\"remargin()\":{\"notice\":\"Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract.\"},\"requestTransferPosition()\":{\"notice\":\"Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor.\"},\"requestWithdrawal((uint256))\":{\"notice\":\"Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"settleExpired()\":{\"notice\":\"After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function.\"},\"totalPositionCollateral()\":{\"notice\":\"Accessor method for the total collateral stored within the PricelessPositionManager.\"},\"transferPositionPassedRequest(address)\":{\"notice\":\"After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`.\"},\"withdraw((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor.\"},\"withdrawLiquidation(uint256,address)\":{\"notice\":\"After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments.\"},\"withdrawPassedRequest()\":{\"notice\":\"After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency.\"}},\"notice\":\"Convenient wrapper for Liquidatable.\"}},\"settings\":{\"compilationTarget\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol\":\"ExpiringMultiParty\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xfe828b4a29f9f4610081793374ace7d88d9cb3a3d6fe13fa28097a04de879406\",\"urls\":[\"bzz-raw://6eedeeeb92e1be8721def0edf794b05d5e279a03eb489da05050de765ca04397\",\"dweb:/ipfs/QmXkp7HvFbCkugbhnUDi1MNMNuvkuPPX4odUphgSGKUGAe\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x15b3f57e51e6e1d5f11b09cefd1cc60550e72fb827bf7cf8ff67b208368c7ec0\",\"urls\":[\"bzz-raw://8bdd28e1cb12662124354cc330acd14733dfbb786daf6401b1f5969a1e11b14d\",\"dweb:/ipfs/QmWY8kEXEALJ55CgHSCPZgAA4b39Ef2YdKshhnvqkyWEcm\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x1db17ce4c028ed96713c3fddda6d34155281e104a47b2c65283fd0f8293d78b1\",\"urls\":[\"bzz-raw://8f306faba8d5190f36c87a8f47cce3bd7894bc5540599819aea2dd5b8ffa9413\",\"dweb:/ipfs/Qmeg4wuF1Dw5DAuoxyfnrmMZ5MK6af226hEHxCJgWKgrch\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/FeePayer.sol\":{\"keccak256\":\"0x4a13ec502ea52bdf1c392fe4867dc9c6b55e6794e5aa1c3e31d08f74c71b897b\",\"urls\":[\"bzz-raw://aaf007e7028b8b80e72b76d21af89179afb36cbb8e97f9d6019519cdc893fa3b\",\"dweb:/ipfs/QmUZoQWJPmht4CCUW8rbsNhnFxdr6BN6robgSLyrWYpJZn\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x750b0eb91030fc42c6bf1cd9029b163a2b156f9c7d193b42b8256f7fc169d196\",\"urls\":[\"bzz-raw://e7b1fde83d251cedcbaeaffd7b3d21ed9b0d47a8dcc6778e0acfe97b03180bda\",\"dweb:/ipfs/QmfUPMfcKd9iYtoNmyAERK5sR8GrEYTyi1robnVxcqD3tD\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/common/TokenFactory.sol\":{\"keccak256\":\"0x1c6090fcdb8373afdd4870ca954ddbae55cae1c5d366bbc568d335c52207ef08\",\"urls\":[\"bzz-raw://415fe9d7205a6718db3415b99bd396124498b716b1e80a05681c69b3cadbf1ea\",\"dweb:/ipfs/QmSqvhchN9x7vMPELK2nZpgzEh5HkToGy17FvdBPqFCsjP\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol\":{\"keccak256\":\"0x981d251d3e5ee6600c8df680e68acbe4f0a5345d6ada637d78608cd9ab5d7871\",\"urls\":[\"bzz-raw://775d0c6550c6d0f137eb8ad64f8a87e7b92ab1324302925eb86ba6a23f87ed5a\",\"dweb:/ipfs/QmauuepiuNHuNSR8rK63hqrPrt7MVQxqRxKW2RC4NP9b53\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/Liquidatable.sol\":{\"keccak256\":\"0x5650cbdf0f9d7b1d89e36bec5942f5d26b79d6da08e89051b161c36a96e17049\",\"urls\":[\"bzz-raw://3134871a77ba4d47b6005b284d2c50e4c6cdc96b8114f74acba970823328e96c\",\"dweb:/ipfs/QmUAVAGgivgcAS9Wk2uiYpAKd2g6n4qrYJNX3VcrPdtcCD\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/PricelessPositionManager.sol\":{\"keccak256\":\"0x3fe56ca5359dfeaa324639054b83197ea8be181e9a85bfd84c3c1457348eb0dd\",\"urls\":[\"bzz-raw://cfb54fb4519bd1575cdb3cf8fad8742c88ed4745f76f6a85e45b6c10478c3fc1\",\"dweb:/ipfs/QmYtf1zBMxyntjaSkxMkuzJJbAGyKL6XEBb8StYgDPf4fD\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xfa5379e18f31da723268d949acf3ecd8b76593467210032e91e2ac47201e9c80\",\"urls\":[\"bzz-raw://c15222ccf0c0e418ebe2915e59b8765db4335f11a83f5db44436719da02da51a\",\"dweb:/ipfs/QmQfj8ADqa5s7EpeqNmnt1g5YUid9Yc49DQvtufrpL1Npq\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0xfa1232ab562e3c279e5665745804f4ba9e62758e34d63b71b65dc92bfdd7cac9\",\"urls\":[\"bzz-raw://cc16bafaf3b1ec0a8064946c09fb918db68beaf219d6d1a431beb1b3ef01ede5\",\"dweb:/ipfs/QmZg7BxqNE82CxVm1pYViL3abRRbJgGXp5iAjvVWefzdiJ\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x266903a280400446041bbc9c839c2be8805bbde710a42c5cad36d6eb2d932a17\",\"urls\":[\"bzz-raw://16bb92ad84fcec107a09ea6a5b3987f8217842e1c5e676b64fc0c3191f32ed91\",\"dweb:/ipfs/QmVjLDHUuqN527VSrzQAy8ox1infQro6kTaZQ7ezX9weeA\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x0b1eef7b2b24bafb30c446bc99fa826352bb5e8c12b56f0a1867bdcee8583789\",\"urls\":[\"bzz-raw://8c03cc413725a68b581c9ecc363bdc67b1a0263893651836a6f012a1924b621c\",\"dweb:/ipfs/QmYz1wQJHtpoEutko6J4BSKb2bAw8ARQvyviSLN5Pqkr38\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0xcf0a9487f059626ddfb4555fcc4ea4c1223c68267aaaf342541ebf38d1c37527\",\"urls\":[\"bzz-raw://dc27e5ca23a9d7711ce0d819ac096b4c5609014fad6ccc7bb8a724f761987d5e\",\"dweb:/ipfs/QmZnaKgBefrkis9V5UUfkWKagKAX3dEcYK6WgTRSZhBeRp\"]},\"/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x3d885e5bd438f0944d0acd5e87b77cb5030cbf5c88aca9b8d53738eedbf9c194\",\"urls\":[\"bzz-raw://24c9b213a7c87a2bdf62fbeeb6b0051dd4379ea060ada498760a281dda886fa3\",\"dweb:/ipfs/QmZgHZkyG6cQujfJ56hjFHjM2215hCevFusVcvUuss2tgf\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061030a5760003560e01c80635f1af1ca1161019c5780639ff4dea8116100ee578063bda02e7711610097578063dd0eef3d11610071578063dd0eef3d1461058f578063edfa9a9b14610597578063fcccedc71461059f5761030a565b8063bda02e771461056c578063c13f62e114610574578063d1e92c111461057c5761030a565b8063b795f0d4116100c8578063b795f0d414610549578063b9a3c84c14610551578063bc121630146105595761030a565b80639ff4dea81461050e578063a1c4d1e714610516578063a765fbea146105365761030a565b806385209ee011610150578063975236611161012a57806397523661146104eb5780639b56d6c9146104f35780639f43ddd2146105065761030a565b806385209ee0146104c65780638c382eb2146104db57806392120aec146104e35761030a565b80637048594b116101815780637048594b146104ae57806379599f96146104b657806381a10ae1146104be5761030a565b80635f1af1ca146104885780636ba2f9921461049b5761030a565b8063360598e11161026057806348e30c3f1161020957806355f57510116101e357806355f57510146104495780635617151c1461046d5780635ee0fe32146104805761030a565b806348e30c3f1461040f5780634f8c48471461041757806350f49846146104415761030a565b80633cb6ce831161023a5780633cb6ce83146103ec5780633ee7a5ce146103f457806343e4771b146104075761030a565b8063360598e1146103c957806336980f58146103dc578063391fe4e2146103e45761030a565b806322f8e566116102c25780632d5436cf1161029c5780632d5436cf146103a457806333a46ca2146103ac5780633403c2fc146103c15761030a565b806322f8e5661461036757806325ed4dd81461037a57806329cb924d1461039c5761030a565b806318928a0c116102f357806318928a0c146103425780631c39c38d14610357578063226112801461035f5761030a565b80630c9229ca1461030f5780630de15fd91461032d575b600080fd5b6103176105a7565b6040516103249190615509565b60405180910390f35b6103356105ad565b6040516103249190615287565b6103556103503660046150e2565b6105c9565b005b6103356106de565b6103556106fa565b6103556103753660046151f7565b6107a2565b61038d610388366004615082565b61084f565b60405161032493929190615db9565b610317610f17565b610317610fe2565b6103b4610fe8565b6040516103249190615d8b565b610355611168565b6103b46103d736600461520f565b61127e565b610355611ae9565b610317611bd5565b6103b4611bdb565b6103b461040236600461517a565b611f28565b6103b4612028565b610317612056565b61042a610425366004615117565b61205c565b6040516103249b9a999897969594939291906152f5565b61031761213e565b61045c61045736600461504a565b612144565b604051610324959493929190615d95565b61035561047b36600461504a565b612191565b6103176123c6565b6103b461049636600461517a565b6123cc565b6103556104a93660046151b0565b6126d2565b610335612a11565b610355612a2d565b6103b4612ad0565b6104ce612ae8565b6040516103249190615520565b610317612af1565b610317612af7565b610317612afd565b6103b461050136600461504a565b612b03565b610317612b5b565b610317612b61565b61052961052436600461504a565b612b67565b60405161032491906153fa565b6103b461054436600461520f565b612cfd565b610355612ef4565b610335612f93565b61035561056736600461517a565b612faf565b6103556130ea565b61031761310a565b61035561058a36600461517a565b613110565b61031761311d565b610317613123565b6103b4613129565b60075481565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6105d16135a2565b816105db816135e4565b6105e3611bdb565b506105ec613628565b6105f461367c565b61060582600063ffffffff6136a616565b610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615817565b60405180910390fd5b600061064f846136bd565b905061065b81846136f2565b50825160405173ffffffffffffffffffffffffffffffffffffffff8616907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a382516001546106d09173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b506106d96137c3565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6107026135a2565b61070a613628565b61071261367c565b600061071d336136bd565b905080600101546000141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615d54565b600281015460405133907f74d8a3658feb89d1a5c335229bbbfc3bbcfaf492769feb7aa4cd2d92efeaf69190600090a361079781613804565b506107a06137c3565b565b60005473ffffffffffffffffffffffffffffffffffffffff166107c457600080fd5b6000546040517f22f8e56600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906322f8e5669061081a908490600401615509565b600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b5050505050565b6000610859614fdc565b610861614fdc565b610869611bdb565b506108726135a2565b61087a613628565b61088261367c565b8361088b610f17565b11156108c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615698565b60006108ce896136bd565b90506108f66108e23688900388018861517a565b60408051602081019091528354815261381e565b9250610900614fdc565b60408051602081019091526003830154815261091b9061383c565b9050610925614fdc565b61092f6000613865565b604080516020810190915260028501548152909150610954908363ffffffff61389916565b1561097f5760408051602081019091526002840154815261097c90839063ffffffff6138a116565b90505b610987614fdc565b506040805160208101909152835481526109c6826109ba836109ae368f90038f018f61517a565b9063ffffffff6138d316565b9063ffffffff61391616565b6109fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615a2c565b610a2182610a15838e8036038101906109ae919061517a565b9063ffffffff61389916565b610a57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615b76565b50610a6061391e565b9350610a6a614fdc565b610a72614fdc565b610a7a614fdc565b604080516020810190915286548152610a9a90899063ffffffff6139df16565b9050610aac858263ffffffff6138d316565b9250610abe848263ffffffff6138d316565b9150610ac8614fdc565b604080516020810190915260028801548152610aea908363ffffffff6138d316565b9050610af88f8a8684613a20565b50610b1590506010610b10848963ffffffff613b6f16565b613b98565b5073ffffffffffffffffffffffffffffffffffffffff8d166000818152600f602090815260409182902080548351610160810185529485523392850192909252909a509190810160018152602001610b6b610f17565b8152602001898152602001848152602001838152602001610b94610b8f6001613865565b613c1f565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001610bc06000613865565b815260209081018990528254600180820185556000948552938290208351600a9092020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161782559284015194810180549093169490911693909317808255604083015192939291907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000836004811115610c8a57fe5b021790555060608201516002820155608082015151600382015560a082015151600482015560c082015151600582015560e08201515160068201556101008201516007820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556101208201515160088201556101409091015151600990910155600185015415801590610d495750610d41610f17565b856001015411155b8015610d7357506040805160208101909152600d548152610d73906109ba368d90038d018d61517a565b15610d9857610d92601154610d86610f17565b9063ffffffff613c4816565b60018601555b873373ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff167f39b4371645b4132767fd76a1aad3108ff95c20d7b687b24d171555f5459a75978a6000015186600001518660000151610dff610f17565b604051610e0f9493929190615de6565b60405180910390a48651600954610e489173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b60095487516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c6891610e9e91600401615509565b600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b50508751600154610eff935073ffffffffffffffffffffffffffffffffffffffff1691503390309063ffffffff61371a16565b5050505050610f0c6137c3565b955095509592505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1615610fdc576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9d57600080fd5b505afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190615162565b9050610fdf565b50425b90565b60115481565b610ff0614fdc565b610ff86135a2565b611000611bdb565b50611009613628565b61101161367c565b600061101c336136bd565b9050806001015460001415801561103e5750611036610f17565b816001015411155b611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615950565b61107c614fdc565b50604080516020808201835260028401548252825190810190925260038301548252906110ca906110ac9061383c565b6040805160208101909152600285015481529063ffffffff613c8716565b156110ed576040805160208101909152600383015481526110ea9061383c565b90505b6110f78282613c8e565b925061110282613804565b82516001546111319173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b825160405133907fc86c3298cb79f486674dca87d9247e88b76146160e7d412cc59b26b14c358a6890600090a35050610fdf6137c3565b6111706135a2565b611178613cce565b611180613628565b61118861367c565b611190613d18565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906159be565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600b5461122a610f17565b600b81905561123890613ddf565b600b5460405133917fd39eeb7157d9c446579a0893ecf9ecd87d1f466cdb270c6a189cf38ca1e30f489161126d918591615512565b60405180910390a2506107a06137c3565b611286614fdc565b82826112928282613e77565b61129a611bdb565b506112a3613628565b6112ab61367c565b60006112b78587613f1c565b600781015490915073ffffffffffffffffffffffffffffffffffffffff163314806112fb5750600181015473ffffffffffffffffffffffffffffffffffffffff1633145b8061131c5750805473ffffffffffffffffffffffffffffffffffffffff1633145b611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906155f3565b61135c8686613fe0565b611364614fdc565b60408051602081019091526006830154815261137f9061383c565b9050611389614fdc565b506040805160208101909152600883015481526113a4614fdc565b6040805160208101909152600385015481526113cc9084906109ae908563ffffffff6138d316565b90506113d6614fdc565b6040805160208101909152600486015481526113f8908563ffffffff6138d316565b9050611402614fdc565b60408051602081019091526015548152611422908463ffffffff6138d316565b905061142c614fdc565b6040805160208101909152601454815261144c908563ffffffff6138d316565b9050611456614fdc565b6040805160208101909152601354815261147790859063ffffffff6138d316565b9050611481614fdc565b604080516020810190915260098a015481526114a3908963ffffffff6138d316565b90506114ad614fdc565b6114b76000613865565b9050600360018b015474010000000000000000000000000000000000000000900460ff1660048111156114e657fe5b14156117de5760078a015473ffffffffffffffffffffffffffffffffffffffff1633141561157657611516614fdc565b6115368361152a888763ffffffff613b6f16565b9063ffffffff613b6f16565b9050611548828263ffffffff613b6f16565b60078c0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559150505b895473ffffffffffffffffffffffffffffffffffffffff163314156116045761159d614fdc565b6115ad878963ffffffff6138a116565b90506115b7614fdc565b6115c7868363ffffffff613b6f16565b90506115d9838263ffffffff613b6f16565b8c547fffffffffffffffffffffffff0000000000000000000000000000000000000000168d55925050505b60018a015473ffffffffffffffffffffffffffffffffffffffff1633141561168e5761162e614fdc565b61164e866116428a8863ffffffff6138a116565b9063ffffffff6138a116565b9050611660828263ffffffff613b6f16565b60018c0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559150505b60078a015473ffffffffffffffffffffffffffffffffffffffff161580156116cb5750895473ffffffffffffffffffffffffffffffffffffffff16155b80156116ef575060018a015473ffffffffffffffffffffffffffffffffffffffff16155b156117d957600f60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208f8154811061173e57fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b6119e4565b600460018b015474010000000000000000000000000000000000000000900460ff16600481111561180b57fe5b148015611831575060018a015473ffffffffffffffffffffffffffffffffffffffff1633145b156118965761184a8261152a888663ffffffff613b6f16565b9050600f60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208f8154811061173e57fe5b6001808b015474010000000000000000000000000000000000000000900460ff1660048111156118c257fe5b1480156118e8575060018a015473ffffffffffffffffffffffffffffffffffffffff1633145b156119e4576118fd868363ffffffff613b6f16565b9050600f60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208f8154811061194957fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b6119f581600063ffffffff6136a616565b611a2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615585565b611a36601082614192565b60018b0154909d5074010000000000000000000000000000000000000000900460ff166004811115611a6457fe5b8d51895160405133927f342d1375efc923bbfe4f5b6575b7d47f40247499113546f8689206d3fd1cf82f92611a9892615512565b60405180910390a38c51600154611acf9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b50505050505050505050611ae16137c3565b505092915050565b611af16135a2565b611af9613628565b611b0161367c565b6000611b0c336136bd565b90508060040154600014611b4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615caf565b6000611b5c600c54610d86610f17565b9050600b548110611b99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615b3f565b6004820181905560405133907fbf457c80c8bf299d5c48272c4c1168bf87b33d83b13f0ab9aac332ce1161ed1e90600090a250506107a06137c3565b60135481565b611be3614fdc565b611beb613628565b611bf361367c565b6000611bfd61421b565b90506000611c09610f17565b9050611c13614fdc565b611c1b614292565b9050611c2e81600063ffffffff6142bf16565b15611c3c5750611f20915050565b816003541415611c4f5750611f20915050565b611c57614fdc565b611c5f614fdc565b6003546040517f74201feb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716916374201feb91611cb7919088908890600401615dcf565b604080518083038186803b158015611cce57600080fd5b505afa158015611ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0691906151cc565b60038690559092509050611d20828263ffffffff613b6f16565b9550611d3386600063ffffffff6142bf16565b15611d435750611f209350505050565b611d53868463ffffffff613c8716565b15611dcc57611d60614fdc565b611d70878563ffffffff6138a116565b9050611d7a614fdc565b611d84838361381e565b9050611d96838263ffffffff6138a116565b9250611da8828263ffffffff6138a116565b9150611dc4611db7858461381e565b859063ffffffff6138a116565b935084975050505b805182516040517f19b92e73d08d517d71ec46136266e4f5d526a8cd4f8501d73713cebfe4f335ef90600090a3611e0386846142d6565b611e1482600063ffffffff6136a616565b15611ed5578151600154611e489173ffffffffffffffffffffffffffffffffffffffff90911690879063ffffffff61432616565b6001546040517f8659d23200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811692638659d23292611ea2929091169086906004016153a3565b600060405180830381600087803b158015611ebc57600080fd5b505af1158015611ed0573d6000803e3d6000fd5b505050505b611ee681600063ffffffff6136a616565b15611f1a578051600154611f1a9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b50505050505b610fdf6137c3565b611f30614fdc565b611f386135a2565b33611f42816135e4565b611f4a611bdb565b50611f53613628565b611f5b61367c565b6000611f66336136bd565b9050611f7984600063ffffffff6136a616565b611faf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615817565b611fb981856143d8565b80516040519194509033907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a382516001546120199173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b506120226137c3565b50919050565b612030614fdc565b612038613628565b604080516020810190915260085481526120519061383c565b905090565b60125481565b600f602052816000526040600020818154811061207557fe5b6000918252602091829020600a919091020180546001820154600283015460408051808701825260038601548152815180880183526004870154815282518089018452600588015481528351808a0185526006890154815260078901548551808c01875260088b0154815286519b8c019096526009909901548a5273ffffffffffffffffffffffffffffffffffffffff9788169b508787169a507401000000000000000000000000000000000000000090960460ff16989497929691959094909391909216918b565b60105481565b600660209081526000918252604091829020825180830184528154815260018201548451808501865260028401548152855194850190955260038301548452600490920154909391929085565b6121996135a2565b336121a3816135e4565b6121ab613628565b6121b361367c565b61220e6121c06000613865565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604091829020825191820190925260039091015481526122029061383c565b9063ffffffff61443816565b612244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615a9a565b600061224f336136bd565b905080600401546000141580156122715750612269610f17565b816004015411155b6122a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615987565b6000600480830182815573ffffffffffffffffffffffffffffffffffffffff8616808452600660205260408085208654815560018088015481830155600280890154818401556003808a01548185015595549287019290925533808852838820888155918201889055918101879055938401869055929093018490559151919290917ff1a2dcf23621f1a96185c79d39a5776b5ba3dadbea70c5aa86d84c17c7e9418e9190a360405173ffffffffffffffffffffffffffffffffffffffff8416907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a260405133907fcad20625296d189a6fc6e5b39d0d544e5bd99dbda0c8f2f0ecffef3e0fbcc28290600090a2506123c26137c3565b5050565b60155481565b6123d4614fdc565b6123dc6135a2565b336123e6816135e4565b6123ee611bdb565b506123f7613628565b6123ff61367c565b600061240a336136bd565b60408051602081019091528154815290915061242d90859063ffffffff613c8716565b15612464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615704565b61246c614fdc565b60408051602081019091528254815261248c90869063ffffffff6139df16565b9050612496614fdc565b6040805160208101909152600384015481526124c2906124b59061383c565b839063ffffffff6138d316565b6040805160208101909152845481529091506124e4908763ffffffff61443816565b156124f9576124f23361443f565b94506125b0565b6125038382613c8e565b945061250d614fdc565b60408051602081019091528454815261252c908863ffffffff6138a116565b6040805160208101909152600d54815290915061255090829063ffffffff61391616565b612586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906157a9565b80518455604080516020810190915260075481526125aa908863ffffffff6138a116565b51600755505b8551855160405133907fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a92990600090a4845160015461260e9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b855160095461263f9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b60095486516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c689161269591600401615509565b600060405180830381600087803b1580156126af57600080fd5b505af11580156126c3573d6000803e3d6000fd5b505050505050506120226137c3565b6126da6135a2565b6126e2611bdb565b506126eb613628565b6126f361367c565b3360009081526006602090815260409182902082519182019092526003820154815261274c9061272890859061152a9061383c565b604080516020810190915283548152612747908563ffffffff613b6f16565b61456a565b8061275c575061275c838361456a565b612792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615c41565b6001810154156127ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615919565b6040805160208101909152815481526127ee90600063ffffffff6142bf16565b15612876576040805160208101909152600d54815261281490839063ffffffff61391616565b61284a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906157a9565b60405133907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a25b61288081846136f2565b506040805160208101909152815481526128a0908363ffffffff613b6f16565b518155604080516020810190915260075481526128c3908363ffffffff613b6f16565b516007558151835160405133907f4b82aa16e071a61de1a6b9aeec9edab0356331f8122c78683b469ac8e685dabc90600090a482516001546129279173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b60095482516040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f1991612980913391906004016152a8565b602060405180830381600087803b15801561299a57600080fd5b505af11580156129ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d29190615142565b612a08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906159f5565b506123c26137c3565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b612a356145d6565b612a3d613cce565b612a45611bdb565b50612a4e613628565b612a5661367c565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055612a9230612a8d61391e565b614619565b612a9d600b54613ddf565b60405133907f18600820405d6cf356e3556301762ca32395e72d8c81494fa344835c9da3633d90600090a26107a06137c3565b612ad8614fdc565b612ae0613628565b612051614292565b60055460ff1681565b60085481565b600d5481565b600a5481565b612b0b614fdc565b612b13613628565b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602090815260409182902082519182019092526003909101548152612b559061383c565b92915050565b600b5481565b600c5481565b6060612b71613628565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832080548251818502810185019093528083529193909284015b82821015612cf25760008481526020908190206040805161016081018252600a8602909201805473ffffffffffffffffffffffffffffffffffffffff908116845260018201549081169484019490945291929083019074010000000000000000000000000000000000000000900460ff166004811115612c2d57fe5b6004811115612c3857fe5b8152600282015460208083019190915260408051808301825260038501548152818401528051808301825260048501548152606084015280518083018252600585015481526080840152805180830182526006850154815260a0840152600784015473ffffffffffffffffffffffffffffffffffffffff1660c0840152805180830182526008850154815260e084015280518083019091526009909301548352610100909101919091529082526001929092019101612bb1565b505050509050919050565b612d05614fdc565b8282612d1182826147e1565b612d19611bdb565b50612d22613628565b612d2a61367c565b6000612d368587613f1c565b9050612d40614fdc565b604080516020810190915260068301548152612d8e90612d5f9061383c565b604080516020808201835260135482528251908101909252600486015482526109ae919063ffffffff6138d316565b9050612d9b601082613b98565b506001820180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740200000000000000000000000000000000000000001790556007820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556002820154612e1790613ddf565b60018201548151604051339273ffffffffffffffffffffffffffffffffffffffff90811692908a16917fcaca181ccad7979cf36ed4fc921e496001ab5264608f0fac7007ae1b43d3610291612e6e918d9190615512565b60405180910390a4604080516020810190915260098301548152612e9990829063ffffffff613b6f16565b604080516020810190915260098401548152909550612eb9903390614619565b8051600154612eea9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b5050611ae16137c3565b612efc6135a2565b612f04613628565b612f0c61367c565b6000612f17336136bd565b9050806004015460001415612f58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615661565b60405133907f2e5702420c76e041698ad7ba57a9ff5cadccf647ea8d96e6007a40b5b2662f5690600090a260006004909101556107a06137c3565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b612fb76135a2565b33612fc1816135e4565b612fc9613628565b612fd161367c565b6000612fdc336136bd565b9050612fef83600063ffffffff6136a616565b80156130225750604080516020810190915260038201548152613022906130159061383c565b849063ffffffff61389916565b613058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615817565b6000613068600c54610d86610f17565b9050600b5481106130a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615b3f565b6001820181905583516002830181905560405133907fd33b726e11d2c5d38e6702b16613df0160a07f7ba5185455ee3c45d0494fab1190600090a350506123c26137c3565b6130f26135a2565b6130fa613628565b61310261367c565b6107a06137c3565b60145481565b61311a33826105c9565b50565b60045481565b600e5481565b613131614fdc565b6131396145d6565b613141611bdb565b5061314a613628565b61315261367c565b600060055460ff16600281111561316557fe5b141561319d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615c78565b600260055460ff1660028111156131b057fe5b146131f0576131c0600b5461486c565b51600e55600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660021790555b6131f8614fdc565b6040805160208101918290526009547f70a082310000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff166370a082316132563360248501615287565b60206040518083038186803b15801561326e57600080fd5b505afa158015613282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132a69190615162565b905290506132b2614fdc565b6040805160208101909152600e5481526132d390839063ffffffff6138d316565b33600090815260066020908152604080832081519283019091526003810154825292935061331191906133059061383c565b9063ffffffff6136a616565b156134205761331e614fdc565b6040805160208082018352600e54825282519081019092528354825261334a919063ffffffff6138d316565b9050613354614fdc565b60408051602081019091526003840154815261336f9061383c565b9050613379614fdc565b613389838363ffffffff614a2816565b6133a257604051806020016040528060008152506133b2565b6133b2828463ffffffff6138a116565b90506133c4858263ffffffff613b6f16565b336000818152600660205260408082208281556001810183905560028101839055600381018390556004018290555192975090917fcad20625296d189a6fc6e5b39d0d544e5bd99dbda0c8f2f0ecffef3e0fbcc2829190a25050505b613428614fdc565b6040805160208101909152600854815261344b906134459061383c565b8461381e565b9050613458600882614192565b6040805160208101909152600754815290955061347b908563ffffffff6138a116565b516007558351855160405133907f9d349c102bec959fb7f20f9a3621e015819d3ae4ed6e9afd1f56a69d5845600690600090a484516001546134dd9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff613caf16565b835160095461350e9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61371a16565b60095484516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c689161356491600401615509565b600060405180830381600087803b15801561357e57600080fd5b505af1158015613592573d6000803e3d6000fd5b5050505050505050610fdf6137c3565b600b546135ad610f17565b106107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615ad1565b6135ed816136bd565b600101541561311a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615919565b60005474010000000000000000000000000000000000000000900460ff166107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615c0a565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60006136b182613865565b51835111905092915050565b6000816136c981614a2f565b505073ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040902090565b6136fa614fdc565b6137078360030183613b98565b50613713600883613b98565b9392505050565b6137bd846323b872dd60e01b85858560405160240161373b93929190615372565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614aa9565b50505050565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b61380e6000613865565b5160028201556000600190910155565b613826614fdc565b81518351106138355781613713565b5090919050565b613844614fdc565b60408051602081019091526004548152612b5590839063ffffffff6138d316565b61386d614fdc565b60408051602081019091528061389184670de0b6b3a764000063ffffffff614bf616565b905292915050565b519051111590565b6138a9614fdc565b60408051602081019091528251845182916138ca919063ffffffff614c4a16565b90529392505050565b6138db614fdc565b6040805160208101909152825184518291670de0b6b3a7640000916139059163ffffffff614bf616565b8161390c57fe5b0490529392505050565b519051101590565b613926614fdc565b600061393061421b565b6001546040517f5b97aadd00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff80841692635b97aadd92613989921690600401615287565b60206040518083038186803b1580156139a157600080fd5b505afa1580156139b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139d99190615195565b91505090565b6139e7614fdc565b60408051602081019091528251845182916138ca91613a1490670de0b6b3a764000063ffffffff614bf616565b9063ffffffff614c8c16565b6000613a2b856136bd565b604080516020810190915281548152909150613a4e90859063ffffffff61443816565b8015613a765750604080516020810190915260038201548152613a769084906122029061383c565b15613a8b57613a848561443f565b50506137bd565b613a958184613c8e565b50613a9e614fdc565b604080516020810190915282548152613abd908663ffffffff6138a116565b6040805160208101909152600d548152909150613ae190829063ffffffff61391616565b613b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906157a9565b80518255604080516020810190915260028301548152613b3d908463ffffffff6138a116565b51600283015560408051602081019091526007548152613b63908663ffffffff6138a116565b51600755505050505050565b613b77614fdc565b60408051602081019091528251845182916138ca919063ffffffff613c4816565b613ba0614fdc565b613ba8614fdc565b604080516020810190915284548152613bc09061383c565b9050613bca614fdc565b613bd384613c1f565b604080516020810190915286548152909150613bf5908263ffffffff613b6f16565b518086556040805160208101909152908152613c169083906116429061383c565b95945050505050565b613c27614fdc565b60408051602081019091526004548152612b5590839063ffffffff6139df16565b600082820183811015613713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9061562a565b5190511190565b613c96614fdc565b613ca38360030183614192565b50613713600883614192565b6106d98363a9059cbb60e01b848460405160240161373b9291906152a8565b600060055460ff166002811115613ce157fe5b146107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9061573b565b6002546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090613d8f907f46696e616e6369616c436f6e74726163747341646d696e00000000000000000090600401615509565b60206040518083038186803b158015613da757600080fd5b505afa158015613dbb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120519190615066565b6000613de9614cce565b600a546040517f68ad8ae300000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff8316916368ad8ae391613e41918690600401615512565b600060405180830381600087803b158015613e5b57600080fd5b505af1158015613e6f573d6000803e3d6000fd5b505050505050565b6000613e838284613f1c565b6001818101549192507401000000000000000000000000000000000000000090910460ff1690816004811115613eb557fe5b1180613ee65750613ec4610f17565b613ecd83614d45565b11158015613ee657506001816004811115613ee457fe5b145b6137bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906155bc565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f60205260408120805483108015613f8757506000818481548110613f5a57fe5b90600052602060002090600a020160010160149054906101000a900460ff166004811115613f8457fe5b14155b613fbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906157e0565b808381548110613fc957fe5b90600052602060002090600a020191505092915050565b6000613fec8284613f1c565b90506002600182015474010000000000000000000000000000000000000000900460ff16600481111561401b57fe5b1461402657506123c2565b614033816002015461486c565b516008820155614041614fdc565b604080516020808201835260088501548252825190810190925260038401548252614072919063ffffffff6138d316565b905061407c614fdc565b6040805160208101909152601254815261409d90839063ffffffff6138d316565b6040805160208101909152600585015481529091506000906140c5908363ffffffff61391616565b9050806140d35760046140d6565b60035b6001850180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000083600481111561412057fe5b02179055506001840154600785015460405173ffffffffffffffffffffffffffffffffffffffff928316928881169233927f6c5582199868fabbe697f9ea10abe481bacf53ac78c02a965b34dff82fd20e3b926141829216908c9088906153ca565b60405180910390a4505050505050565b61419a614fdc565b6141a2614fdc565b6040805160208101909152845481526141ba9061383c565b90506141c4614fdc565b6141cd84613c1f565b6040805160208101909152865481529091506141ef908263ffffffff6138a116565b518086556040805160208101909152908152613c169061420e9061383c565b839063ffffffff6138a116565b6002546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090613d8f907f53746f726500000000000000000000000000000000000000000000000000000090600401615509565b61429a614fdc565b60408051602081019091526010548152612051906142b79061383c565b61152a614d60565b60006142ca82613865565b51835114905092915050565b6142de614fdc565b6142ee838363ffffffff614d6816565b905061431d614301826116426001613865565b604080516020810190915260045481529063ffffffff6138d316565b51600455505050565b60006143b7828573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30876040518363ffffffff1660e01b81526004016143679291906152ce565b60206040518083038186803b15801561437f57600080fd5b505afa158015614393573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190615162565b90506137bd8463095ea7b360e01b858460405160240161373b9291906152a8565b6143e0614fdc565b6143ed8360030183614192565b506143f783614e0a565b61442d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615a63565b613713600883614192565b5190511490565b614447614fdc565b6000614452836136bd565b905061445c614fdc565b604080516020810190915260085481526144759061383c565b905061447f614fdc565b5060408051602080820183526003850154825282519081019092526008548252906144b0908263ffffffff6138a116565b51600855604080516020808201835285548252825190810190925260075482526144e0919063ffffffff6138a116565b5160075573ffffffffffffffffffffffffffffffffffffffff8516600081815260066020526040808220828155600181018390556002810183905560038101839055600401829055517fcad20625296d189a6fc6e5b39d0d544e5bd99dbda0c8f2f0ecffef3e0fbcc2829190a260408051602081019091526008548152613c169061420e9061383c565b6000614574614fdc565b604080516020810190915260085481526145a6906145919061383c565b60408051602081019091526007548152614e40565b90506145b0614fdc565b6145ba8585614e40565b90506145cc828263ffffffff613c8716565b1595945050505050565b600b546145e1610f17565b10156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615b08565b61462a81600063ffffffff6142bf16565b15614634576123c2565b73ffffffffffffffffffffffffffffffffffffffff821630146146875780516001546146829173ffffffffffffffffffffffffffffffffffffffff909116908490309063ffffffff61371a16565b6146eb565b61468f614fdc565b614697614292565b90506146a9818363ffffffff613c8716565b6146df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615d1d565b6146e982826142d6565b505b80516040517f4f9bf7e8cd0f2456f9c43d2597bedcf1446c9c64544053f1ece6423ae9a07e5290600090a2600061472061421b565b82516001549192506147509173ffffffffffffffffffffffffffffffffffffffff1690839063ffffffff61432616565b6001546040517f8659d23200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811692638659d232926147aa929091169086906004016153a3565b600060405180830381600087803b1580156147c457600080fd5b505af11580156147d8573d6000803e3d6000fd5b50505050505050565b60006147ed8284613f1c565b90506147f881614d45565b614800610f17565b108015614836575060018082015474010000000000000000000000000000000000000000900460ff16600481111561483457fe5b145b6106d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615885565b614874614fdc565b600061487e614cce565b600a546040517fa03e881a00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff83169163a03e881a916148d6918790600401615512565b60206040518083038186803b1580156148ee57600080fd5b505afa158015614902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149269190615142565b61495c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615772565b600a546040517fc9280f0600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff84169163c9280f06916149b4918890600401615512565b60206040518083038186803b1580156149cc57600080fd5b505afa1580156149e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a049190615162565b90506000811215614a13575060005b60408051602081019091529081529392505050565b5190511090565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602090815260408083208151928301909152600301548152614a7391906133059061383c565b61311a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9061584e565b614ac88273ffffffffffffffffffffffffffffffffffffffff16614e7e565b614afe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615ce6565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051614b27919061526b565b6000604051808303816000865af19150503d8060008114614b64576040519150601f19603f3d011682016040523d82523d6000602084013e614b69565b606091505b509150915081614ba5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906156cf565b8051156137bd5780806020019051810190614bc09190615142565b6137bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90615bad565b600082614c0557506000612b55565b82820282848281614c1257fe5b0414613713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906158bc565b600061371383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614eba565b600061371383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614f00565b6002546040517faafd5e4000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090613d8f907f4f7261636c65000000000000000000000000000000000000000000000000000090600401615509565b6000612b556011548360020154613c4890919063ffffffff16565b612038614fdc565b614d70614fdc565b8251600090614d8d90670de0b6b3a764000063ffffffff614bf616565b8351909150600090614da690839063ffffffff614c8c16565b8451909150600090614dbf90849063ffffffff614f5116565b90508015614df157604080516020810190915280614de484600163ffffffff613c4816565b8152509350505050612b55565b6040518060200160405280838152509350505050612b55565b604080516020810190915260038201548152600090612b5590614e2c9061383c565b60408051602081019091528454815261456a565b614e48614fdc565b614e5982600063ffffffff6136a616565b614e6e57614e676000613865565b9050612b55565b614e67838363ffffffff6139df16565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590614eb257508115155b949350505050565b60008184841115614ef8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9190615534565b505050900390565b60008183614f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9190615534565b506000838581614f4757fe5b0495945050505050565b600061371383836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060008183614fc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9190615534565b50828481614fd357fe5b06949350505050565b6040518060200160405280600081525090565b600060208284031215612022578081fd5b600060208284031215615011578081fd5b61501b6020615e01565b9135825250919050565b600060208284031215615036578081fd5b6150406020615e01565b9151825250919050565b60006020828403121561505b578081fd5b813561371381615e54565b600060208284031215615077578081fd5b815161371381615e54565b600080600080600060a08688031215615099578081fd5b85356150a481615e54565b94506150b38760208801614fef565b93506150c28760408801614fef565b92506150d18760608801614fef565b949793965091946080013592915050565b600080604083850312156150f4578182fd5b82356150ff81615e54565b915061510e8460208501615000565b90509250929050565b60008060408385031215615129578182fd5b823561513481615e54565b946020939093013593505050565b600060208284031215615153578081fd5b81518015158114613713578182fd5b600060208284031215615173578081fd5b5051919050565b60006020828403121561518b578081fd5b6137138383615000565b6000602082840312156151a6578081fd5b6137138383615025565b600080604083850312156151c2578182fd5b6150ff8484615000565b600080604083850312156151de578182fd5b6151e88484615025565b915061510e8460208501615025565b600060208284031215615208578081fd5b5035919050565b60008060408385031215615221578182fd5b82359150602083013561523381615e54565b809150509250929050565b73ffffffffffffffffffffffffffffffffffffffff169052565b6005811061526257fe5b9052565b519052565b6000825161527d818460208701615e28565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff8c811682528b8116602083015261016082019061532a604084018d615258565b606083019a909a5297516080820152955160a0870152935160c0860152915160e085015290941661010083015292516101208201529151610140909201919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff92909216825251602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff93909316835260208301919091521515604082015260600190565b602080825282518282018190526000919060409081850190868401855b828110156154fc57815161542c85825161523e565b8681015161543c8887018261523e565b508581015161544d87870182615258565b506060818101519086015260808082015161546a82880182615266565b505060a08082015161547e82880182615266565b505060c08082015161549282880182615266565b505060e0808201516154a682880182615266565b5050610100808201516154bb8288018261523e565b5050610120808201516154d082880182615266565b5050610140808201516154e582880182615266565b505050610160939093019290850190600101615417565b5091979650505050505050565b90815260200190565b918252602082015260400190565b602081016003831061552e57fe5b91905290565b6000602082528251806020840152615553816040850160208701615e28565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526019908201527f496e76616c6964207769746864726177616c20616d6f756e7400000000000000604082015260600190565b6020808252601c908201527f4c69717569646174696f6e206e6f7420776974686472617761626c6500000000604082015260600190565b6020808252601e908201527f43616c6c65722063616e6e6f7420776974686472617720726577617264730000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526013908201527f4e6f2070656e64696e67207472616e7366657200000000000000000000000000604082015260600190565b60208082526014908201527f4d696e656420616674657220646561646c696e65000000000000000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b60208082526014908201527f496e76616c696420746f6b656e20616d6f756e74000000000000000000000000604082015260600190565b6020808252601a908201527f436f6e7472616374207374617465206973206e6f74204f50454e000000000000604082015260600190565b60208082526017908201527f556e7265736f6c766564206f7261636c65207072696365000000000000000000604082015260600190565b6020808252601e908201527f42656c6f77206d696e696d756d2073706f6e736f7220706f736974696f6e0000604082015260600190565b60208082526016908201527f496e76616c6964206c69717569646174696f6e20494400000000000000000000604082015260600190565b60208082526019908201527f496e76616c696420636f6c6c61746572616c20616d6f756e7400000000000000604082015260600190565b6020808252601a908201527f506f736974696f6e20686173206e6f20636f6c6c61746572616c000000000000604082015260600190565b6020808252601a908201527f4c69717569646174696f6e206e6f742064697370757461626c65000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f50656e64696e67207769746864726177616c0000000000000000000000000000604082015260600190565b60208082526018908201527f496e76616c696420776974686472617720726571756573740000000000000000604082015260600190565b60208082526018908201527f496e76616c6964207472616e7366657220726571756573740000000000000000604082015260600190565b60208082526013908201527f43616c6c6572206e6f7420476f7665726e6f7200000000000000000000000000604082015260600190565b6020808252601f908201527f4d696e74696e672073796e74686574696320746f6b656e73206661696c656400604082015260600190565b6020808252601e908201527f4352206973206d6f7265207468616e206d6178206c69712e2070726963650000604082015260600190565b6020808252600c908201527f43522062656c6f77204743520000000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f53706f6e736f7220616c72656164792068617320706f736974696f6e00000000604082015260600190565b60208082526018908201527f4f6e6c792063616c6c61626c65207072652d6578706972790000000000000000604082015260600190565b60208082526019908201527f4f6e6c792063616c6c61626c6520706f73742d65787069727900000000000000604082015260600190565b6020808252601b908201527f52657175657374206578706972657320706f73742d6578706972790000000000604082015260600190565b6020808252601e908201527f4352206973206c657373207468616e206d696e206c69712e2070726963650000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526010908201527f4e65772043522062656c6f772047435200000000000000000000000000000000604082015260600190565b60208082526012908201527f556e6578706972656420706f736974696f6e0000000000000000000000000000604082015260600190565b60208082526010908201527f50656e64696e67207472616e7366657200000000000000000000000000000000604082015260600190565b6020808252601f908201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604082015260600190565b6020808252601a908201527f46696e616c20666565206973206d6f7265207468616e20506643000000000000604082015260600190565b60208082526015908201527f4e6f2070656e64696e67207769746864726177616c0000000000000000000000604082015260600190565b9051815260200190565b94518552602085019390935290516040840152516060830152608082015260a00190565b9283529051602083015251604082015260600190565b928352602083019190915251604082015260600190565b93845260208401929092526040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715615e2057600080fd5b604052919050565b60005b83811015615e43578181015183820152602001615e2b565b838111156137bd5750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461311a57600080fd5b6000615e8182613865565b5183511090509291505056fea2646970667358221220641981b6584592fc2e74c166af0eaa7afdf58a2023d1e46b43780712eefa0a5264736f6c63430006040033",
  "sourceMap": "178:518:37:-:0;;;505:189;5:9:-1;2:2;;;27:1;24;17:12;2:2;505:189:37;;;;;;;;;;;;;;;;;;;;;6881:26:40;;6921:25;;;;6960:24;;;;6998:20;;;;7032:26;;;;7072:20;;;;7106:22;;;;7142:26;;;;7182:23;;;;7219:19;;;;6881:26;702:28:14;;-1:-1:-1;;702:28:14;;;-1:-1:-1;702:28:14;;;-1:-1:-1;864:18:12;;;;6881:26:40;;;6921:25;6960:24;6998:20;7032:26;7072:20;7106:22;7142:26;7182:23;6960:24;6998:20;7219:19;1298::12::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;3078:18:32::2;:47:::0;;-1:-1:-1;3078:47:32;;::::2;-1:-1:-1::0;3078:47:32;;::::2;;::::0;;;3135:6:::2;:40:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;3203:16:::2;:14;:16::i;:::-;3185:15;:34;;;;3255:30;3283:1;3255:27;;;;;:30;;:::i;:::-;3229:56:::0;:23:::2;:56:::0;1365:20:12::1;:18;:20::i;:::-;-1:-1:-1::0;1298:19:12::1;::::0;-1:-1:-1;;1298:17:12::1;:19::i;:::-;1327:17;:15;:17::i;:::-;7573:16:41::2;:14;:16::i;:::-;7550:20;:39;7542:80;;;::::0;-1:-1:-1;7542:80:41;;::::2;::::0;::::2;;;;;;;;;;;;;7640:25;:23;:25::i;:::-;:65;::::0;;;;-1:-1:-1;7640:47:41;;;::::2;::::0;::::2;::::0;:65:::2;::::0;7688:16;;7640:65:::2;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;7640:65:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;7640:65:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7640:65:41;;;;;;;;;7632:106;;;::::0;-1:-1:-1;7632:106:41;;::::2;::::0;::::2;;;;;7749:19;:42:::0;;;7801:18:::2;:40:::0;;;7929:52:::2;::::0;-1:-1:-1;7929:52:41;;7882:20;;-1:-1:-1;7929:14:41;::::2;::::0;-1:-1:-1;;7929:52:41::2;::::0;7944:14;;7960:16;;7978:2:::2;::::0;7929:52:::2;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;7929:52:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;7929:52:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7929:52:41;;;;;;;;;7913:13;:68:::0;;-1:-1:-1;7913:68:41::2;-1:-1:-1::0;7913:68:41;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;7991:36:41;;:16:::2;:36:::0;8037:15:::2;:34:::0;;;1365:20:12::1;:18;:20::i;:::-;7054:1024:41::0;;;;;;;;;;1298:19:12::1;:17;;;:19;;:::i;:::-;1327:17;:15;:17::i;:::-;7294:45:40::2;7337:1;7294:6;:28;;;:42;;;;;;:45;;;;:::i;:::-;7286:78;;;::::0;-1:-1:-1;7286:78:40;;::::2;::::0;::::2;;;;;7395:81;7474:1;7395:67;7430:6;:31;;;7395:6;:30;;;:34;;;;;;:67;;;;:::i;:::-;:78;;;;;;:81;;;;:::i;:::-;7374:154;;;::::0;-1:-1:-1;7374:154:40;;::::2;::::0;::::2;;;;;7609:26;::::0;::::2;::::0;7587:19:::2;:48:::0;7669:28:::2;::::0;::::2;::::0;7645:52;:21:::2;:52:::0;7724:21:::2;::::0;::::2;::::0;7707:38;:14:::2;:38:::0;7781:30:::2;::::0;::::2;::::0;7755:56;:23:::2;:56:::0;7848:31:::2;::::0;::::2;::::0;7821:58;:24:::2;:58:::0;1365:20:12::1;:18;:20::i;:::-;6775:1111:40::0;505:189:37;178:518;;2117:186:12;2249:11;;-1:-1:-1;2249:11:12;;;;2241:55;;;;-1:-1:-1;2241:55:12;;;;;;;;;2117:186::o;2309:136::-;2433:5;2419:19;;-1:-1:-1;2419:19:12;;;2309:136::o;1431:256:14:-;1478:7;1501:12;;-1:-1:-1;1501:12:14;:28;1497:184;;1558:12;;1552:36;;;;;;;;-1:-1:-1;1558:12:14;;;;1552:34;;:36;;;;;;;;;;;;;;;1558:12;1552:36;;;2:2:-1;;;;27:1;24;17:12;2:2;1552:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1552:36:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1552:36:14;;;;;;;;;1545:43;;;;1497:184;-1:-1:-1;1626:3:14;1497:184;1431:256;:::o;722:135:11:-;782:15;;:::i;:::-;816:34;;;;;;;;825:24;436:6;825:1;:5;;;;;;:24;;;;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:11:o;2451:206:12:-;2632:11;:18;;-1:-1:-1;2632:18:12;-1:-1:-1;2632:18:12;;;2451:206::o;34839:211:41:-;34973:6;;:69;;-1:-1:-1;34973:69:41;;34897:28;;-1:-1:-1;34973:6:41;;:31;;:69;;35005:36;;34973:69;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;34973:69:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34973:69:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34973:69:41;;;;;;;;;34937:106;;34839:211;:::o;1938:147:11:-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:11;;;;;:::o;6123:151::-;6197:15;;:::i;:::-;6231:36;;;;;;;;6240:26;6255:1;:10;;;6240:1;:10;;;:14;;;;;;:26;;;;:::i;:::-;6231:36;;6224:43;6123:151;-1:-1:-1;;;6123:151:11:o;3874:144::-;3947:4;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:11;;;;:::o;2119:459:75:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:75;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;2496:56:75;;;;;;;;;2570:1;2119:459;-1:-1:-1;;;2119:459:75:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;938:46:75;;;;;;;;178:518:37;;;;;;;;;;;;;;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;;610:436;;719:3;712:4;704:6;700:17;696:27;686:2;;-1:-1;;727:12;686:2;761:13;;-1:-1;13363:30;;13360:2;;;-1:-1;;13396:12;13360:2;789:61;13537:4;-1:-1;13469:9;13450:17;;13446:33;13527:15;789:61;;;780:70;;870:6;863:5;856:21;974:3;13537:4;965:6;898;956:16;;953:25;950:2;;;991:1;;981:12;950:2;1001:39;1033:6;13537:4;932:5;928:16;13537:4;898:6;894:17;1001:39;;;;679:367;;;;;4174:346;;4296:4;4284:9;4279:3;4275:19;4271:30;4268:2;;;-1:-1;;4304:12;4268:2;4332:20;4296:4;4332:20;;;4605:13;;4413:86;;-1:-1;4323:29;4262:258;-1:-1;4262:258;4668:263;;4783:2;4771:9;4762:7;4758:23;4754:32;4751:2;;;-1:-1;;4789:12;4751:2;89:6;83:13;101:33;128:5;101:33;;4938:257;;5050:2;5038:9;5029:7;5025:23;5021:32;5018:2;;;-1:-1;;5056:12;5018:2;227:6;221:13;15252:5;14024:13;14017:21;15230:5;15227:32;15217:2;;-1:-1;;15263:12;5518:412;;5668:2;5656:9;5647:7;5643:23;5639:32;5636:2;;;-1:-1;;5674:12;5636:2;5719:24;;-1:-1;5752:30;;;5749:2;;;-1:-1;;5785:12;5749:2;1233:6;;5882:22;;1212:19;;;1208:32;-1:-1;1205:2;;;-1:-1;;1243:12;1205:2;1271:22;1233:6;1271:22;;;1422;4605:13;1372:16;1365:86;5668:2;1595:9;1591:22;4605:13;5668:2;1545:5;1541:16;1534:86;1727:60;1783:3;1694:2;1763:9;1759:22;1727:60;;;1694:2;1713:5;1709:16;1702:86;1891:60;1947:3;1858:2;1927:9;1923:22;1891:60;;;1858:2;1877:5;1873:16;1866:86;2062:60;2118:3;2028;2098:9;2094:22;2062:60;;;2028:3;2048:5;2044:16;2037:86;2226:60;2282:3;2192;2262:9;2258:22;2226:60;;;2192:3;2212:5;2208:16;2201:86;2363:3;2433:9;2429:22;359:13;2363:3;2383:5;2379:16;2372:86;2549:3;2538:9;2534:19;2528:26;2514:40;;5763:18;2566:6;2563:30;2560:2;;;-1:-1;;2596:12;2560:2;2641:66;2703:3;2694:6;2683:9;2679:22;2641:66;;;2549:3;2627:5;2623:16;2616:92;2801:3;;;;2790:9;2786:19;2780:26;5763:18;2818:6;2815:30;2812:2;;;-1:-1;;2848:12;2812:2;2895:66;2957:3;2948:6;2937:9;2933:22;2895:66;;;2801:3;2879:5;2875:18;2868:94;;3035:3;;;3071:82;3149:3;3035;3129:9;3125:22;3071:82;;;3035:3;3055:5;3051:18;3044:110;3230:3;;;;3302:9;3298:22;4605:13;3230:3;3250:5;3246:18;3239:88;3405:3;;;3441:82;3519:3;3405;3499:9;3495:22;3441:82;;;3405:3;3425:5;3421:18;3414:110;3595:3;;;3631:82;3709:3;3595;3689:9;3685:22;3631:82;;;3595:3;3615:5;3611:18;3604:110;3794:3;;;3830:82;3908:3;3794;3888:9;3884:22;3830:82;;;3794:3;3814:5;3810:18;3803:110;3994:3;;;4030:82;4108:3;3994;4088:9;4084:22;4030:82;;;3994:3;4014:5;4010:18;4003:110;5805:109;;;;;;;5630:300;;;;;5937:263;;6052:2;6040:9;6031:7;6027:23;6023:32;6020:2;;;-1:-1;;6058:12;6020:2;-1:-1;4605:13;;6014:186;-1:-1;6014:186;6474:347;;6619:5;13647:12;13804:6;13799:3;13792:19;6713:52;6758:6;13841:4;13836:3;13832:14;13841:4;6739:5;6735:16;6713:52;;;13469:9;15010:14;-1:-1;;15006:28;6777:39;;;;13841:4;6777:39;;6566:255;-1:-1;;6566:255;9221:213;6278:37;;;9339:2;9324:18;;9310:124;9441:625;;9662:2;9683:17;9676:47;9737:78;9662:2;9651:9;9647:18;9801:6;9737:78;;;9863:9;9857:4;9853:20;9848:2;9837:9;9833:18;9826:48;9888:78;9961:4;9952:6;9888:78;;;9880:86;;;14528:4;6455:5;14517:16;10052:2;10041:9;10037:18;6405:57;9633:433;;;;;;;10073:407;10264:2;10278:47;;;7053:2;10249:18;;;13792:19;7089:29;13832:14;;;7069:50;7138:12;;;10235:245;10487:407;10678:2;10692:47;;;7389:2;10663:18;;;13792:19;7425:28;13832:14;;;7405:49;7473:12;;;10649:245;10901:407;11092:2;11106:47;;;7724:2;11077:18;;;13792:19;7760:30;13832:14;;;7740:51;7810:12;;;11063:245;11315:407;11506:2;11520:47;;;8061:2;11491:18;;;13792:19;8097:22;13832:14;;;8077:43;8139:12;;;11477:245;11729:407;11920:2;11934:47;;;8390:2;11905:18;;;13792:19;8426:34;13832:14;;;8406:55;-1:-1;8481:12;;;8474:25;8518:12;;;11891:245;12143:407;12334:2;12348:47;;;8769:2;12319:18;;;13792:19;8805:30;13832:14;;;8785:51;8855:12;;;12305:245;12557:407;12748:2;12762:47;;;9106:2;12733:18;;;13792:19;9142:33;13832:14;;;9122:54;9195:12;;;12719:245;12971:256;13033:2;13027:9;13059:17;;;13155:22;;;-1:-1;13119:34;;13116:62;13113:2;;;13191:1;;13181:12;13113:2;13033;13200:22;13011:216;;-1:-1;13011:216;14666:268;14731:1;14738:101;14752:6;14749:1;14746:13;14738:101;;;14819:11;;;14813:18;14800:11;;;14793:39;14774:2;14767:10;14738:101;;;14854:6;14851:1;14848:13;14845:2;;;14731:1;14910:6;14905:3;14901:16;14894:27;14845:2;;14715:219;;;;15047:117;-1:-1;14312:54;;15106:35;;15096:2;;15155:1;;15145:12;15096:2;15090:74;;;178:518:37;;;;;;",
  "deployedSourceMap": "178:518:37:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;178:518:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2791:49:41;;;:::i;:::-;;;;;;;;;;;;;;;;1095:32:32;;;:::i;:::-;;;;;;;;11672:738:41;;;;;;;;;:::i;:::-;;356:27:14;;;:::i;18245:489:41:-;;;:::i;1071:115:14:-;;;;;;;;;:::i;9192:6116:40:-;;;;;;;;;:::i;:::-;;;;;;;;;;1431:256:14;;;:::i;4228:34:40:-;;;:::i;16624:1546:41:-;;;:::i;:::-;;;;;;;;29116:691;;;:::i;18374:5726:40:-;;;;;;;;;:::i;8527:677:41:-;;;:::i;4603:41:40:-;;;:::i;4201:2279:32:-;;;:::i;13559:1252:41:-;;;;;;;;;:::i;31275:234::-;;;:::i;4366:48:40:-;;;:::i;3967:57::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4071:51;;;:::i;2559:49:41:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;9638:1065;;;;;;;;;:::i;5013:51:40:-;;;:::i;21725:2023:41:-;;;;;;;;;:::i;19365:1801::-;;;;;;;;;:::i;3161:35::-;;;:::i;28071:404::-;;;:::i;6950:113:32:-;;;:::i;1491:34:41:-;;;:::i;:::-;;;;;;;;3052:53;;;:::i;3648:43::-;;;:::i;3255:30::-;;;:::i;30744:311::-;;;;;;;;;:::i;3404:34::-;;;:::i;3551:33::-;;;:::i;24353:207:40:-;;;;;;;;;:::i;:::-;;;;;;;;16071:1610;;;;;;;;;:::i;10785:415:41:-;;;:::i;1209:29:32:-;;;:::i;15135:993:41:-;;;;;;;;;:::i;30271:96::-;;;:::i;4803:50:40:-;;;:::i;12811:221:41:-;;;;;;;;;:::i;1873:50:32:-;;;:::i;3743:38:41:-;;;:::i;24374:3363::-;;;:::i;2791:49::-;;;;:::o;1095:32:32:-;;;;;;:::o;11672:738:41:-;5426:20;:18;:20::i;:::-;11824:7:::1;5975:40;6007:7;5975:31;:40::i;:::-;2409:16:32::2;:14;:16::i;:::-;;1298:19:12::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;11893:33:41::4;:16:::0;11924:1:::4;11893:33;:30;:33;:::i;:::-;11885:71;;;;;;;;;;;;;;;;;;;;;;11966:33;12002:25;12019:7;12002:16;:25::i;:::-;11966:61;;12123:60;12152:12;12166:16;12123:28;:60::i;:::-;-1:-1:-1::0;12216:25:41;;12199:43:::4;::::0;::::4;::::0;::::4;::::0;::::4;::::0;12216:25:::4;::::0;12199:43:::4;12377:25:::0;;12314:18:::4;::::0;:89:::4;::::0;:18:::4;::::0;;::::4;::::0;12350:10:::4;::::0;12370:4:::4;::::0;12314:89:::4;:35;:89;:::i;:::-;1354:1:12;1365:20:::3;:18;:20::i;:::-;5456:1:41::1;11672:738:::0;;:::o;356:27:14:-;;;;;;:::o;18245:489:41:-;5426:20;:18;:20::i;:::-;1298:19:12::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;18327:33:41::2;18363:28;18380:10;18363:16;:28::i;:::-;18327:64;;18409:12;:43;;;18456:1;18409:48;;18401:82;;;;;;;;;;;;;;18537:36;::::0;::::2;:45:::0;18499:84:::2;::::0;18525:10:::2;::::0;18499:84:::2;::::0;18537:45:::2;::::0;18499:84:::2;18690:37;18714:12;18690:23;:37::i;:::-;1354:1:12;1365:20:::1;:18;:20::i;:::-;18245:489:41:o:0;1071:115:14:-;873:3;849:12;:28;:12;841:37;;12:1:-1;9;2:12;841:37:14;1145:12:::1;::::0;1139:40:::1;::::0;;;;1145:12:::1;::::0;;::::1;::::0;1139:34:::1;::::0;:40:::1;::::0;1174:4;;1139:40:::1;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;1139:40:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1139:40:14;;;;1071:115:::0;:::o;9192:6116:40:-;9568:21;9603:43;;:::i;:::-;9660:39;;:::i;:::-;2409:16:32;:14;:16::i;:::-;;5426:20:41::1;:18;:20::i;:::-;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;9815:8:40::3;9795:16;:14;:16::i;:::-;:28;;9787:61;;;;;;;;;;;;;;9905:40;9948:25;9965:7;9948:16;:25::i;:::-;9905:68:::0;-1:-1:-1;10003:75:40::3;;;::::0;;::::3;::::0;::::3;10018:20:::0;10003:75:::3;;;;::::0;;::::3;::::0;::::3;::::0;;;;;;;:14:::3;:75::i;:::-;9984:94;;10306:42;;:::i;:::-;10351:60;::::0;;::::3;::::0;::::3;::::0;;;10377:33:::3;::::0;::::3;10351:60:::0;;;::::3;::::0;:25:::3;:60::i;:::-;10306:105;;10421:57;;:::i;:::-;10481:30;10509:1;10481:27;:30::i;:::-;10525:61;::::0;;::::3;::::0;::::3;::::0;;;:43:::3;::::0;::::3;:61:::0;;;10421:90;;-1:-1:-1;10525:78:40::3;::::0;10587:15;10525:78:::3;:61;:78;:::i;:::-;10521:206;;;10652:64;::::0;;::::3;::::0;::::3;::::0;;;10672:43:::3;::::0;::::3;10652:64:::0;;;::::3;::::0;:15;;:64:::3;:19;:64;:::i;:::-;10619:97;;10521:206;10808:38;;:::i;:::-;-1:-1:-1::0;10808:78:40::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;11130:91:::3;11190:30:::0;11130:38:::3;10808:78:::0;11130:25:::3;;::::0;;::::3;::::0;::::3;:21:::0;:25:::3;;;::::0;:38:::3;:25;:38;:::i;:::-;:59:::0;:91:::3;:59;:91;:::i;:::-;11105:180;;;;;;;;;;;;;;11410:88;11467:30;11410:38;11436:11;11410:21;:25;;;;;;;;;;;:38;:56:::0;:88:::3;:56;:88;:::i;:::-;11385:177;;;;;;;;;;;;;;1354:1:12;11651:19:40;:17;:19::i;:::-;11636:34;;11740:43;;:::i;:::-;11793:47;;:::i;:::-;11922:32;;:::i;:::-;11957:59;::::0;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;:16;;:59:::3;:20;:59;:::i;:::-;11922:94:::0;-1:-1:-1;12133:26:40::3;:15:::0;11922:94;12133:26:::3;:19;:26;:::i;:::-;12114:45:::0;-1:-1:-1;12354:41:40::3;:30:::0;12389:5;12354:41:::3;:34;:41;:::i;:::-;12331:64;;12565:51;;:::i;:::-;12619:47;::::0;;::::3;::::0;::::3;::::0;;;:43:::3;::::0;::::3;:47:::0;;;:84:::3;::::0;12684:5;12619:84:::3;:47;:84;:::i;:::-;12565:138;;12717:93;12740:7;12749:16;12767;12785:24;12717:22;:93::i;:::-;-1:-1:-1::0;12890:76:40::3;::::0;-1:-1:-1;12905:24:40::3;12931:34;:16:::0;12952:12;12931:34:::3;:20;:34;:::i;:::-;12890:14;:76::i;:::-;-1:-1:-1::0;13273:21:40::3;::::0;::::3;;::::0;;;:12:::3;:21;::::0;;;;;;;;:28;;13351:598;;::::3;::::0;::::3;::::0;;;;;13431:10:::3;13351:598:::0;;::::3;::::0;;;;13273:28;;-1:-1:-1;13273:21:40;13351:598;;;13466:17:::3;13351:598;;;;13518:16;:14;:16::i;:::-;13351:598;;;;13571:16;13351:598;;;;13623:16;13351:598;;;;13679:20;13351:598;;;;13736:55;13760:30;13788:1;13760:27;:30::i;:::-;13736:23;:55::i;:::-;13351:598;;;;13827:1;13351:598;;;;;;13864:30;13892:1;13864:27;:30::i;:::-;13351:598:::0;;::::3;::::0;;::::3;::::0;;;27:10:-1;;39:1:::3;23:18:::0;;::::3;45:23:::0;;-1:-1;13311:648:40;;;;;;;;;::::3;::::0;;::::3;;::::0;;;;;::::3;;::::0;;::::3;;::::0;;;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;;::::3;::::0;::::3;;;;;;;;::::0;;-1:-1:-1;13311:648:40::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;;::::3;;::::0;;::::3;::::0;;;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;;::::3;::::0;;::::3;::::0;-1:-1:-1;14274:50:40;::::3;::::0;:54;;;;:177:::3;;;14435:16;:14;:16::i;:::-;14381:19;:50;;;:70;;14274:177;:284;;;;-1:-1:-1::0;14499:59:40::3;::::0;;::::3;::::0;::::3;::::0;;;14541:16:::3;14499:59:::0;;;::::3;::::0;:41:::3;;::::0;;::::3;::::0;::::3;:20:::0;:41:::3;;:59;14257:463;;;14668:41;14689:19;;14668:16;:14;:16::i;:::-;:20:::0;:41:::3;:20;:41;:::i;:::-;14615:50;::::0;::::3;:94:::0;14257:463:::3;14812:13;14788:10;14735:251;;14767:7;14735:251;;;14839:16;:25;;;14878:16;:25;;;14917:20;:29;;;14960:16;:14;:16::i;:::-;14735:251;;;;;;;;;;;;;;;;;;15081:25:::0;;15023:13:::3;::::0;:84:::3;::::0;:13:::3;::::0;;::::3;::::0;15054:10:::3;::::0;15074:4:::3;::::0;15023:84:::3;:30;:84;:::i;:::-;15117:13;::::0;15136:25;;15117:45:::3;::::0;;;;:13:::3;::::0;;::::3;::::0;:18:::3;::::0;:45:::3;::::0;::::3;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::3;2:2;15117:45:40;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::3;77:16;74:1;67:27;5:2;-1:-1:::0;;15279:21:40;;15216:18:::3;::::0;:85:::3;::::0;-1:-1:-1;15216:18:40::3;;::::0;-1:-1:-1;15252:10:40::3;::::0;15272:4:::3;::::0;15216:85:::3;:35;:85;:::i;:::-;1354:1:12;;;;;1365:20:::2;:18;:20::i;:::-;9192:6116:40::0;;;;;;;;;:::o;1431:256:14:-;1478:7;1501:12;;:28;:12;:28;1497:184;;1558:12;;;;;;;;;;;1552:34;;;:36;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1552:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1552:36:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1552:36:14;;;;;;;;;1545:43;;;;1497:184;-1:-1:-1;1626:3:14;1497:184;1431:256;:::o;4228:34:40:-;;;;:::o;16624:1546:41:-;16757:42;;:::i;:::-;5426:20;:18;:20::i;:::-;2409:16:32::1;:14;:16::i;:::-;;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;16815:33:41::3;16851:28;16868:10;16851:16;:28::i;:::-;16815:64;;16910:12;:43;;;16957:1;16910:48;;:131;;;;;17025:16;:14;:16::i;:::-;16978:12;:43;;;:63;;16910:131;16889:202;;;;;;;;;;;;;;17315:43;;:::i;:::-;-1:-1:-1::0;17315:82:41::3;::::0;;::::3;::::0;;::::3;::::0;;17361:36:::3;::::0;::::3;17315:82:::0;;;17462:53;;;;::::3;::::0;;;17488:26:::3;::::0;::::3;17462:53:::0;;;17315:82;17411:105:::3;::::0;17462:53:::3;::::0;:25:::3;:53::i;:::-;17411:50;::::0;;::::3;::::0;::::3;::::0;;;:36:::3;::::0;::::3;:50:::0;;;;:105:::3;:50;:105;:::i;:::-;17407:208;;;17551:53;::::0;;::::3;::::0;::::3;::::0;;;17577:26:::3;::::0;::::3;17551:53:::0;;;::::3;::::0;:25:::3;:53::i;:::-;17532:72;;17407:208;17720:60;17749:12;17763:16;17720:28;:60::i;:::-;17702:78;;17887:37;17911:12;17887:23;:37::i;:::-;18059:24:::0;;18015:18:::3;::::0;:69:::3;::::0;:18:::3;::::0;;::::3;::::0;18047:10:::3;::::0;18015:69:::3;:31;:69;:::i;:::-;18138:24:::0;;18100:63:::3;::::0;18126:10:::3;::::0;18100:63:::3;::::0;18138:24:::3;::::0;18100:63:::3;1354:1:12;;1365:20:::2;:18;:20::i;29116:691:41:-:0;5426:20;:18;:20::i;:::-;5879:16:::1;:14;:16::i;:::-;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;29246:36:41::3;:34;:36::i;:::-;29232:50;;:10;:50;;;29224:82;;;;;;;;;;;;;;29317:13;:51:::0;;;::::3;29333:35;29317:51;::::0;;29593:19:::3;::::0;29644:16:::3;:14;:16::i;:::-;29622:19;:38:::0;;;29670:40:::3;::::0;:19:::3;:40::i;:::-;29780:19;::::0;29726:74:::3;::::0;29744:10:::3;::::0;29726:74:::3;::::0;::::3;::::0;29756:22;;29726:74:::3;;;;;;;;;;1354:1:12;1365:20:::2;:18;:20::i;18374:5726:40:-:0;18558:42;;:::i;:::-;18479:13;18494:7;6443:37;6457:13;6472:7;6443:13;:37::i;:::-;2409:16:32::1;:14;:16::i;:::-;;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;18616:35:40::3;18654:43;18674:7;18683:13;18654:19;:43::i;:::-;18743:20;::::0;::::3;::::0;;;-1:-1:-1;18743:20:40::3;;18729:10;:34;::::0;18728:94:::3;;-1:-1:-1::0;18799:22:40::3;::::0;::::3;::::0;::::3;;18785:10;:36;18728:94;:149;;;-1:-1:-1::0;18857:19:40;;::::3;;18843:10;:33;18728:149;18707:226;;;;;;;;;;;;;;19050:31;19058:13;19073:7;19050;:31::i;:::-;19262:41;;:::i;:::-;19306:56;::::0;;::::3;::::0;::::3;::::0;;;19332:29:::3;::::0;::::3;19306:56:::0;;;::::3;::::0;:25:::3;:56::i;:::-;19262:100;;19372:42;;:::i;:::-;-1:-1:-1::0;19372:72:40::3;::::0;;::::3;::::0;::::3;::::0;;;19417:27:::3;::::0;::::3;19372:72:::0;;;19454:47:::3;;:::i;:::-;19504:33;::::0;;::::3;::::0;::::3;::::0;;;:29:::3;::::0;::::3;:33:::0;;;:92:::3;::::0;19572:14;;19504:50:::3;::::0;19538:15;19504:50:::3;:33;:50;:::i;:92::-;19454:142;;19606:37;;:::i;:::-;19646:32;::::0;;::::3;::::0;::::3;::::0;;;:28:::3;::::0;::::3;:32:::0;;;:48:::3;::::0;19679:14;19646:48:::3;:32;:48;:::i;:::-;19606:88;;19704:48;;:::i;:::-;19755:28;::::0;;::::3;::::0;::::3;::::0;;;:24:::3;:28:::0;;;:50:::3;::::0;19784:20;19755:50:::3;:28;:50;:::i;:::-;19704:101;;19815:47;;:::i;:::-;19865:27;::::0;;::::3;::::0;::::3;::::0;;;:23:::3;:27:::0;;;:49:::3;::::0;19893:20;19865:49:::3;:27;:49;:::i;:::-;19815:99;;19924:44;;:::i;:::-;19971:30;::::0;;::::3;::::0;::::3;::::0;;;19986:14:::3;19971:30:::0;;;::::3;::::0;:10;;:30:::3;:14;:30;:::i;:::-;19924:77;;20011:35;;:::i;:::-;20049:24;::::0;;::::3;::::0;::::3;::::0;;;:20:::3;::::0;::::3;:24:::0;;;:40:::3;::::0;20074:14;20049:40:::3;:24;:40;:::i;:::-;20011:78;;20469:43;;:::i;:::-;20515:30;20543:1;20515:27;:30::i;:::-;20469:76:::0;-1:-1:-1;20580:23:40::3;20559:17;::::0;::::3;::::0;;;::::3;;;:44;::::0;::::3;;;;;;;20555:2978;;;20734:20;::::0;::::3;::::0;::::3;;20720:10;:34;20716:376;;;20859:40;;:::i;:::-;20902:58;20951:8:::0;20902:44:::3;:21:::0;20928:17;20902:44:::3;:25;:44;:::i;:::-;:48:::0;:58:::3;:48;:58;:::i;:::-;20859:101:::0;-1:-1:-1;20997:35:40::3;:16:::0;20859:101;20997:35:::3;:20;:35;:::i;:::-;21057:20;::::0;::::3;21050:27:::0;;;::::3;::::0;;20978:54;-1:-1:-1;;20716:376:40::3;21124:19:::0;;::::3;;21110:10;:33;21106:466;;;21252:46;;:::i;:::-;21301:36;:10:::0;21316:20;21301:36:::3;:14;:36;:::i;:::-;21252:85;;21355:39;;:::i;:::-;21397:45;:20:::0;21422:19;21397:45:::3;:24;:45;:::i;:::-;21355:87:::0;-1:-1:-1;21479:34:40::3;:16:::0;21355:87;21479:34:::3;:20;:34;:::i;:::-;21531:26:::0;;;::::3;::::0;;21460:53;-1:-1:-1;;;21106:466:40::3;21604:22;::::0;::::3;::::0;::::3;;21590:10;:36;21586:686;;;21980:42;;:::i;:::-;22025:111;22097:21:::0;22025:46:::3;:20:::0;22050;22025:46:::3;:24;:46;:::i;:::-;:50:::0;:111:::3;:50;:111;:::i;:::-;21980:156:::0;-1:-1:-1;22173:37:40::3;:16:::0;21980:156;22173:37:::3;:20;:37;:::i;:::-;22235:22;::::0;::::3;22228:29:::0;;;::::3;::::0;;22154:56;-1:-1:-1;;21586:686:40::3;22420:20;::::0;::::3;::::0;:34:::3;:20;:34:::0;:87;::::3;;;-1:-1:-1::0;22474:19:40;;:33:::3;:19;:33:::0;22420:87:::3;:143;;;;-1:-1:-1::0;22527:22:40::3;::::0;::::3;::::0;:36:::3;:22;:36:::0;22420:143:::3;22399:255;;;22603:12;:21;22616:7;22603:21;;;;;;;;;;;;;;;22625:13;22603:36;;;;;;;;;::::0;;;::::3;::::0;;::::3;::::0;;::::3;;22596:43:::0;;;;;::::3;::::0;;;;::::3;::::0;;;;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;;::::3;;::::0;22399:255:::3;20555:2978;;;22776:20;22755:17;::::0;::::3;::::0;;;::::3;;;:41;::::0;::::3;;;;;;;:81;;;;-1:-1:-1::0;22814:22:40::3;::::0;::::3;::::0;::::3;;22800:10;:36;22755:81;22751:782;;;22949:47;22987:8:::0;22949:33:::3;:10:::0;22964:17;22949:33:::3;:14;:33;:::i;:47::-;22930:66;;23017:12;:21;23030:7;23017:21;;;;;;;;;;;;;;;23039:13;23017:36;;;;;;;22751:782;23286:17;23265::::0;;::::3;::::0;;;::::3;;;:38;::::0;::::3;;;;;;;:78;;;;-1:-1:-1::0;23321:22:40::3;::::0;::::3;::::0;::::3;;23307:10;:36;23265:78;23261:272;;;23441:24;:10:::0;23456:8;23441:24:::3;:14;:24;:::i;:::-;23422:43;;23486:12;:21;23499:7;23486:21;;;;;;;;;;;;;;;23508:13;23486:36;;;;;;;;;::::0;;;::::3;::::0;;::::3;::::0;;::::3;;23479:43:::0;;;;;::::3;::::0;;;;::::3;::::0;;;;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;;::::3;;::::0;23261:272:::3;23550:33;:16:::0;23581:1:::3;23550:33;:30;:33;:::i;:::-;23542:71;;;;;;;;;;;;;;23729:61;23747:24;23773:16;23729:17;:61::i;:::-;23865:17;::::0;::::3;::::0;23711:79;;-1:-1:-1;23865:17:40;;::::3;;;23806:103;::::0;::::3;;;;;;23839:24:::0;;23884;;23806:103:::3;::::0;23827:10:::3;::::0;23806:103:::3;::::0;::::3;::::0;::::3;;;;;;;;;;24035:24:::0;;23991:18:::3;::::0;:69:::3;::::0;:18:::3;::::0;;::::3;::::0;24023:10:::3;::::0;23991:69:::3;:31;:69;:::i;:::-;-1:-1:-1::0;;;;;;;;;;1365:20:12::2;:18;:20::i;:::-;18374:5726:40::0;;;;;;:::o;8527:677:41:-;5426:20;:18;:20::i;:::-;1298:19:12::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;8614:33:41::2;8650:28;8667:10;8650:16;:28::i;:::-;8614:64;;8696:12;:49;;;8749:1;8696:54;8688:83;;;;;;;;;;;;;;8863:23;8889:40;8910:18;;8889:16;:14;:16::i;:40::-;8863:66;;8965:19;;8947:15;:37;8939:77;;;;;;;;;;;;;;9079:49;::::0;::::2;:67:::0;;;9162:35:::2;::::0;9186:10:::2;::::0;9162:35:::2;::::0;;;::::2;1354:1:12;;1365:20:::1;:18;:20::i;4603:41:40:-:0;;;;:::o;4201:2279:32:-;4258:36;;:::i;:::-;1298:19:12;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;4306:20:32::1;4329:11;:9;:11::i;:::-;4306:34;;4350:12;4365:16;:14;:16::i;:::-;4350:31;;4391:41;;:::i;:::-;4435:6;:4;:6::i;:::-;4391:50:::0;-1:-1:-1;4528:25:32::1;4391:50:::0;4551:1:::1;4528:25;:22;:25;:::i;:::-;4524:72;;;-1:-1:-1::0;4569:16:32::1;::::0;-1:-1:-1;;4569:16:32::1;4524:72;4696:4;4677:15;;:23;4673:70;;;-1:-1:-1::0;4716:16:32::1;::::0;-1:-1:-1;;4716:16:32::1;4673:70;4754:37;;:::i;:::-;4793:38;;:::i;:::-;4872:15;::::0;4835:108:::1;::::0;;;;:23:::1;::::0;::::1;::::0;::::1;::::0;:108:::1;::::0;4872:15;4901:4;;4919:14;;4835:108:::1;;;;;;::::0;::::1;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4835:108:32;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4835:108:32;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4835:108:32;;;;;;;;;4953:15;:22:::0;;;4753:190;;-1:-1:-1;4753:190:32;-1:-1:-1;4998:27:32::1;4753:190:::0;;4998:27:::1;:14;:27;:::i;:::-;4986:39:::0;-1:-1:-1;5039:20:32::1;4986:39:::0;5057:1:::1;5039:20;:17;:20;:::i;:::-;5035:67;;;-1:-1:-1::0;5075:16:32::1;::::0;-1:-1:-1;;;;5075:16:32::1;5035:67;5476:39;:9:::0;5500:14;5476:39:::1;:23;:39;:::i;:::-;5472:476;;;5531:34;;:::i;:::-;5568:29;:9:::0;5582:14;5568:29:::1;:13;:29;:::i;:::-;5531:66;;5611:47;;:::i;:::-;5661:36;5676:11;5689:7;5661:14;:36::i;:::-;5611:86:::0;-1:-1:-1;5725:37:32::1;:11:::0;5611:86;5725:37:::1;:15;:37;:::i;:::-;5711:51:::0;-1:-1:-1;5786:33:32::1;:7:::0;5798:20;5786:33:::1;:11;:33;:::i;:::-;5776:43;;5846:51;5861:35;5876:10;5888:7;5861:14;:35::i;:::-;5846:10:::0;;:51:::1;:14;:51;:::i;:::-;5833:64;;5923:14;5911:26;;5472:476;;;6000:20:::0;;5979:19;;5963:58:::1;::::0;::::1;::::0;6000:20:::1;::::0;5963:58:::1;6032:57;6063:9;6074:14;6032:30;:57::i;:::-;6104:27;:10:::0;6129:1:::1;6104:27;:24;:27;:::i;:::-;6100:214;;;6204:19:::0;;6147:18:::1;::::0;:77:::1;::::0;:18:::1;::::0;;::::1;::::0;6196:5;;6147:77:::1;:40;:77;:::i;:::-;6271:18;::::0;6238:65:::1;::::0;;;;:24:::1;::::0;;::::1;::::0;::::1;::::0;:65:::1;::::0;6271:18;;::::1;::::0;6292:10;;6238:65:::1;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6238:65:32;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6238:65:32;;;;6100:214;6328:28;:11:::0;6354:1:::1;6328:28;:25;:28;:::i;:::-;6324:124;;;6416:20:::0;;6372:18:::1;::::0;:65:::1;::::0;:18:::1;::::0;;::::1;::::0;6404:10:::1;::::0;6372:65:::1;:31;:65;:::i;:::-;-1:-1:-1::0;;;;;1354:1:12::1;1365:20:::0;:18;:20::i;13559:1252:41:-;13760:42;;:::i;:::-;5426:20;:18;:20::i;:::-;13693:10:::1;5975:40;6007:7;5975:31;:40::i;:::-;2409:16:32::2;:14;:16::i;:::-;;1298:19:12::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;13818:33:41::4;13854:28;13871:10;13854:16;:28::i;:::-;13818:64:::0;-1:-1:-1;13900:33:41::4;:16:::0;13931:1:::4;13900:33;:30;:33;:::i;:::-;13892:71;;;;;;;;;;;;;;14232:68;14269:12;14283:16;14232:36;:68::i;:::-;14339:24:::0;;14316:48:::4;::::0;14214:86;;-1:-1:-1;14339:24:41;14327:10:::4;::::0;14316:48:::4;::::0;14339:24:::4;::::0;14316:48:::4;14779:24:::0;;14735:18:::4;::::0;:69:::4;::::0;:18:::4;::::0;;::::4;::::0;14767:10:::4;::::0;14735:69:::4;:31;:69;:::i;:::-;1354:1:12;1365:20:::3;:18;:20::i;:::-;5456:1:41::1;13559:1252:::0;;;:::o;31275:234::-;31384:42;;:::i;:::-;1584:19:12;:17;:19::i;:::-;31449:53:41::1;::::0;;::::1;::::0;::::1;::::0;;;31475:26:::1;31449:53:::0;;;::::1;::::0;:25:::1;:53::i;:::-;31442:60;;31275:234:::0;:::o;4366:48:40:-;;;;:::o;3967:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3967:57:40;;;;-1:-1:-1;3967:57:40;;;;;;;;;;;;;;;;;;;;;;;:::o;4071:51::-;;;;:::o;2559:49:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9638:1065::-;5426:20;:18;:20::i;:::-;9775:10:::1;5975:40;6007:7;5975:31;:40::i;:::-;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;9845:139:41::3;9940:30;9968:1;9940:27;:30::i;:::-;9871:28;::::0;::::3;;::::0;;;:9:::3;:28;::::0;;;;;;;;9845:69;;;;::::3;::::0;;;9871:42:::3;::::0;;::::3;9845:69:::0;;;::::3;::::0;:25:::3;:69::i;:::-;:77:::0;:139:::3;:77;:139;:::i;:::-;9824:214;;;;;;;;;;;;;;10048:33;10084:28;10101:10;10084:16;:28::i;:::-;10048:64;;10143:12;:49;;;10196:1;10143:54;;:143;;;;;10270:16;:14;:16::i;:::-;10217:12;:49;;;:69;;10143:143;10122:214;;;;;;;;;;;;;;10434:1;10382:49;::::0;;::::3;:53:::0;;;10446:28:::3;::::0;::::3;::::0;;;:9:::3;:28;::::0;;;;;:43;;;;::::3;::::0;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;::::3;::::0;;;;;::::3;::::0;;;;10516:10:::3;10506:21:::0;;;;;;10499:28;;;;;::::3;::::0;;;;;::::3;::::0;;;;;::::3;::::0;;;;;;::::3;::::0;;;10543:62;;10446:28;;10516:10;;10543:62:::3;::::0;10434:1;10543:62:::3;10620:29;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;;::::3;10664:32;::::0;10685:10:::3;::::0;10664:32:::3;::::0;;;::::3;1354:1:12;1365:20:::2;:18;:20::i;:::-;5456:1:41::1;9638:1065:::0;:::o;5013:51:40:-;;;;:::o;21725:2023:41:-;21917:42;;:::i;:::-;5426:20;:18;:20::i;:::-;21850:10:::1;5975:40;6007:7;5975:31;:40::i;:::-;2409:16:32::2;:14;:16::i;:::-;;1298:19:12::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;21975:33:41::4;22011:28;22028:10;22011:16;:28::i;:::-;22058:55;::::0;;::::4;::::0;::::4;::::0;;;;;;;21975:64;;-1:-1:-1;22058:55:41::4;::::0;:9;;:55:::4;:23;:55;:::i;:::-;22057:56;22049:89;;;;;;;;;;;;;;22149:43;;:::i;:::-;22195:45;::::0;;::::4;::::0;::::4;::::0;;;;;;;::::4;::::0;:9;;:45:::4;:13;:45;:::i;:::-;22149:91;;22250:45;;:::i;:::-;22332:53;::::0;;::::4;::::0;::::4;::::0;;;22358:26:::4;::::0;::::4;22332:53:::0;;;22298:97:::4;::::0;22332:53:::4;::::0;:25:::4;:53::i;:::-;22298:16:::0;;:97:::4;:20;:97;:::i;:::-;22521:38;::::0;;::::4;::::0;::::4;::::0;;;;;;;22250:145;;-1:-1:-1;22521:49:41::4;::::0;22560:9;22521:49:::4;:38;:49;:::i;:::-;22517:840;;;22604:34;22627:10;22604:22;:34::i;:::-;22586:52;;22517:840;;;22768:62;22797:12;22811:18;22768:28;:62::i;:::-;22750:80;;22945:40;;:::i;:::-;22988:34;::::0;;::::4;::::0;::::4;::::0;;;;;;;:45:::4;::::0;23023:9;22988:45:::4;:34;:45;:::i;:::-;23055:52;::::0;;::::4;::::0;::::4;::::0;;;23090:16:::4;23055:52:::0;;;22945:88;;-1:-1:-1;23055:52:41::4;::::0;22945:88;;23055:52:::4;:34;:52;:::i;:::-;23047:95;;;;;;;;;;;;;;23156:46:::0;;;;23309:26:::4;::::0;;::::4;::::0;::::4;::::0;;;:22:::4;:26:::0;;;:37:::4;::::0;23336:9;23309:37:::4;:26;:37;:::i;:::-;23284:62:::0;:22:::4;:62:::0;-1:-1:-1;22517:840:41::4;23417:18:::0;;23391:24;;23372:64:::4;::::0;23379:10:::4;::::0;23372:64:::4;::::0;23417:18:::4;::::0;23372:64:::4;23581:24:::0;;23537:18:::4;::::0;:69:::4;::::0;:18:::4;::::0;;::::4;::::0;23569:10:::4;::::0;23537:69:::4;:31;:69;:::i;:::-;23674:18:::0;;23616:13:::4;::::0;:77:::4;::::0;:13:::4;::::0;;::::4;::::0;23647:10:::4;::::0;23667:4:::4;::::0;23616:77:::4;:30;:77;:::i;:::-;23703:13;::::0;23722:18;;23703:38:::4;::::0;;;;:13:::4;::::0;;::::4;::::0;:18:::4;::::0;:38:::4;::::0;::::4;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::4;2:2;23703:38:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::4;77:16;74:1;67:27;5:2;23703:38:41;;;;1354:1:12;;;1365:20:::3;:18;:20::i;19365:1801:41:-:0;5426:20;:18;:20::i;:::-;2409:16:32::1;:14;:16::i;:::-;;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;19605:10:41::3;19559:33;19595:21:::0;;;:9:::3;:21;::::0;;;;;;;;19789:53;;;;::::3;::::0;;;19815:26:::3;::::0;::::3;19789:53:::0;;;19748:193:::3;::::0;19789:75:::3;::::0;19847:16;;19789:53:::3;::::0;:25:::3;:53::i;:75::-;19882:34;::::0;;::::3;::::0;::::3;::::0;;;;;;;:45:::3;::::0;19917:9;19882:45:::3;:34;:45;:::i;:::-;19748:23;:193::i;:::-;:249;;;;19945:52;19969:16;19987:9;19945:23;:52::i;:::-;19726:314;;;;;;;;;;;;;;20059:43;::::0;::::3;::::0;:48;20051:79:::3;;;;;;;;;;;;;;20144:38;::::0;;::::3;::::0;::::3;::::0;;;;;;;:41:::3;::::0;20183:1:::3;20144:41;:38;:41;:::i;:::-;20140:204;;;20209:48;::::0;;::::3;::::0;::::3;::::0;;;20240:16:::3;20209:48:::0;;;::::3;::::0;:9;;:48:::3;:30;:48;:::i;:::-;20201:91;;;;;;;;;;;;;;20311:22;::::0;20322:10:::3;::::0;20311:22:::3;::::0;;;::::3;20140:204;20439:60;20468:12;20482:16;20439:28;:60::i;:::-;-1:-1:-1::0;20625:34:41::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;:45:::3;::::0;20660:9;20625:45:::3;:34;:45;:::i;:::-;20592:78:::0;;;20706:26:::3;::::0;;::::3;::::0;::::3;::::0;;;:22:::3;:26:::0;;;:37:::3;::::0;20733:9;20706:37:::3;:26;:37;:::i;:::-;20681:62:::0;:22:::3;:62:::0;20814:18;;20787:25;;20759:74:::3;::::0;20775:10:::3;::::0;20759:74:::3;::::0;20681:62:::3;::::0;20759:74:::3;21029:25:::0;;20966:18:::3;::::0;:89:::3;::::0;:18:::3;::::0;;::::3;::::0;21002:10:::3;::::0;21022:4:::3;::::0;20966:89:::3;:35;:89;:::i;:::-;21073:13;::::0;21104:18;;21073:50:::3;::::0;;;;:13:::3;::::0;;::::3;::::0;:18:::3;::::0;:50:::3;::::0;21092:10:::3;::::0;21104:18;21073:50:::3;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::3;2:2;21073:50:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::3;77:16;74:1;67:27;5:2;21073:50:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21073:50:41;;;;;;;;;21065:94;;;;;;;;;;;;;;1354:1:12;1365:20:::2;:18;:20::i;3161:35:41:-:0;;;;;;:::o;28071:404::-;5510:21;:19;:21::i;:::-;5879:16:::1;:14;:16::i;:::-;2409::32::2;:14;:16::i;:::-;;1298:19:12::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;28167:13:41::4;:51:::0;;;::::4;28183:35;28167:51;::::0;;28326:49:::4;28348:4;28355:19;:17;:19::i;:::-;28326:13;:49::i;:::-;28385:40;28405:19;;28385;:40::i;:::-;28441:27;::::0;28457:10:::4;::::0;28441:27:::4;::::0;;;::::4;1365:20:12::3;:18;:20::i;6950:113:32:-:0;7005:26;;:::i;:::-;1584:19:12;:17;:19::i;:::-;7050:6:32::1;:4;:6::i;1491:34:41:-:0;;;;;;:::o;3052:53::-;;;;:::o;3648:43::-;;;;:::o;3255:30::-;;;;:::o;30744:311::-;30858:43;;:::i;:::-;1584:19:12;:17;:19::i;:::-;31015:18:41::1;::::0;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;;30989:59;;;;::::1;::::0;;;31015:32:::1;::::0;;::::1;30989:59:::0;;;::::1;::::0;:25:::1;:59::i;:::-;30982:66:::0;30744:311;-1:-1:-1;;30744:311:41:o;3404:34::-;;;;:::o;3551:33::-;;;;:::o;24353:207:40:-;24469:40;1584:19:12;:17;:19::i;:::-;24532:21:40::1;::::0;::::1;;::::0;;;:12:::1;:21;::::0;;;;;;;24525:28;;;;;;::::1;::::0;;;;;;;;;;;;24532:21;;24525:28;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;::::1;;;;::::0;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;::::1;;::::0;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;::::1;;;;;;;;;;24353:207:::0;;;:::o;16071:1610::-;16243:36;;:::i;:::-;16164:13;16179:7;6312:35;6324:13;6339:7;6312:11;:35::i;:::-;2409:16:32::1;:14;:16::i;:::-;;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;16295:43:40::3;16341;16361:7;16370:13;16341:19;:43::i;:::-;16295:89;;16511:44;;:::i;:::-;16632:64;::::0;;::::3;::::0;::::3;::::0;;;16658:37:::3;::::0;::::3;16632:64:::0;;;16558:148:::3;::::0;16632:64:::3;::::0;:25:::3;:64::i;:::-;16558:56;::::0;;::::3;::::0;;::::3;::::0;;16599:14:::3;16558:56:::0;;;:40;;;;::::3;::::0;;;:36:::3;::::0;::::3;:40:::0;;;:56:::3;::::0;:40;:56:::3;:40;:56;:::i;:148::-;16511:195;;16716:59;16731:24;16757:17;16716:14;:59::i;:::-;-1:-1:-1::0;16881:25:40::3;::::0;::::3;:49:::0;;;::::3;::::0;::::3;::::0;;16940:28:::3;::::0;::::3;:41:::0;;;::::3;16971:10;16940:41;::::0;;16909:21:::3;17055:35:::0;::::3;::::0;17035:56:::3;::::0;:19:::3;:56::i;:::-;17161:30;::::0;::::3;::::0;17256:26;;17107:185:::3;::::0;17205:10:::3;::::0;17107:185:::3;17161:30:::0;;::::3;::::0;17107:185;;::::3;::::0;::::3;::::0;::::3;::::0;17229:13;;17256:26;17107:185:::3;;;;;;;;;;17314:51;::::0;;::::3;::::0;::::3;::::0;;;17336:28:::3;::::0;::::3;17314:51:::0;;;::::3;::::0;:17;;:51:::3;:21;:51;:::i;:::-;17440:55;::::0;;::::3;::::0;::::3;::::0;;;17466:28:::3;::::0;::::3;17440:55:::0;;;17302:63;;-1:-1:-1;17440:55:40::3;::::0;17454:10:::3;::::0;17440:13:::3;:55::i;:::-;17647:26:::0;;17584:18:::3;::::0;:90:::3;::::0;:18:::3;::::0;;::::3;::::0;17620:10:::3;::::0;17640:4:::3;::::0;17584:90:::3;:35;:90;:::i;:::-;1354:1:12;;1365:20:::2;:18;:20::i;10785:415:41:-:0;5426:20;:18;:20::i;:::-;1298:19:12::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;10873:33:41::2;10909:28;10926:10;10909:16;:28::i;:::-;10873:64;;10955:12;:49;;;11008:1;10955:54;;10947:86;;;;;;;;;;;;;;11049:43;::::0;11081:10:::2;::::0;11049:43:::2;::::0;;;::::2;11192:1;11140:49;::::0;;::::2;:53:::0;1365:20:12::1;:18;:20::i;1209:29:32:-:0;;;;;;:::o;15135:993:41:-;5426:20;:18;:20::i;:::-;15278:10:::1;5975:40;6007:7;5975:31;:40::i;:::-;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;15327:33:41::3;15363:28;15380:10;15363:16;:28::i;:::-;15327:64:::0;-1:-1:-1;15422:33:41::3;:16:::0;15453:1:::3;15422:33;:30;:33;:::i;:::-;:142;;;;-1:-1:-1::0;15510:53:41::3;::::0;;::::3;::::0;::::3;::::0;;;15536:26:::3;::::0;::::3;15510:53:::0;;;15475:89:::3;::::0;15510:53:::3;::::0;:25:::3;:53::i;:::-;15475:16:::0;;:89:::3;:34;:89;:::i;:::-;15401:214;;;;;;;;;;;;;;15707:23;15733:40;15754:18;;15733:16;:14;:16::i;:40::-;15707:66;;15809:19;;15791:15;:37;15783:77;;;;;;;;;;;;;;15923:43;::::0;::::3;:61:::0;;;15994:55;;:36:::3;::::0;::::3;:55:::0;;;16065:56:::3;::::0;16083:10:::3;::::0;16065:56:::3;::::0;15994:55:::3;::::0;16065:56:::3;1354:1:12;;1365:20:::2;:18;:20::i;30271:96:41:-:0;5426:20;:18;:20::i;:::-;1298:19:12::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1365:20;:18;:20::i;4803:50:40:-:0;;;;:::o;12811:221:41:-;12986:39;12996:10;13008:16;12986:9;:39::i;:::-;12811:221;:::o;1873:50:32:-;;;;:::o;3743:38:41:-;;;;:::o;24374:3363::-;24500:42;;:::i;:::-;5510:21;:19;:21::i;:::-;2409:16:32::1;:14;:16::i;:::-;;1298:19:12::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;24695:18:41::3;24678:13;::::0;::::3;;:35;::::0;::::3;;;;;;;;24670:66;;;;;;;;;;;;;;24861:34;24844:13;::::0;::::3;;:51;::::0;::::3;;;;;;;24840:196;;24925:36;24941:19;;24925:15;:36::i;:::-;24911:50:::0;:11:::3;:50:::0;24975:13:::3;:50:::0;;;::::3;24991:34;24975:50;::::0;;24840:196:::3;25138:41;;:::i;:::-;25182:56;::::0;;::::3;::::0;::::3;::::0;;;;25202:13:::3;::::0;:35;;;;25182:56;;;25202:13:::3;;:23;:35;25226:10;25202:35:::0;;;::::3;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::3;2:2;25202:35:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::3;77:16;74:1;67:27;5:2;25202:35:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25202:35:41;;;;;;;;;25182:56:::0;;25138:100;-1:-1:-1;25248:52:41::3;;:::i;:::-;25303:31;::::0;;::::3;::::0;::::3;::::0;;;25322:11:::3;25303:31:::0;;;::::3;::::0;:14;;:31:::3;:18;:31;:::i;:::-;25525:10;25479:33;25515:21:::0;;;:9:::3;:21;::::0;;;;;;;25550:53;;;;::::3;::::0;;;25576:26:::3;::::0;::::3;25550:53:::0;;;25248:86;;-1:-1:-1;25550:70:41::3;::::0;25479:33;25550:53:::3;::::0;:25:::3;:53::i;:::-;:67:::0;:70:::3;:67;:70;:::i;:::-;25546:1190;;;25746:53;;:::i;:::-;25802:47;::::0;;::::3;::::0;;::::3;::::0;;25837:11:::3;25802:47:::0;;;:34;;;;::::3;::::0;;;;;;;:47:::3;::::0;:34;:47:::3;:34;:47;:::i;:::-;25746:103;;25863:45;;:::i;:::-;25911:53;::::0;;::::3;::::0;::::3;::::0;;;25937:26:::3;::::0;::::3;25911:53:::0;;;::::3;::::0;:25:::3;:53::i;:::-;25863:101;;26077:55;;:::i;:::-;26135:87;:26:::0;26190:18;26135:87:::3;:37;:87;:::i;:::-;:197;;26310:22;;;;;;;;26330:1;26310:22;;::::0;26135:197:::3;;;26241:50;:18:::0;26264:26;26241:50:::3;:22;:50;:::i;:::-;26077:255:::0;-1:-1:-1;26480:59:41::3;:25:::0;26077:255;26480:59:::3;:29;:59;:::i;:::-;26663:10;26653:21;::::0;;;:9:::3;:21;::::0;;;;;26646:28;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;;::::0;;;26693:32;26452:87;;-1:-1:-1;26663:10:41;;26693:32:::3;::::0;26653:21;26693:32:::3;25546:1190;;;;26941:33;;:::i;:::-;27005:53;::::0;;::::3;::::0;::::3;::::0;;;27031:26:::3;27005:53:::0;;;26977:130:::3;::::0;27005:53:::3;::::0;:25:::3;:53::i;:::-;27072:25;26977:14;:130::i;:::-;26941:166;;27205:53;27223:26;27251:6;27205:17;:53::i;:::-;27293:26;::::0;;::::3;::::0;::::3;::::0;;;:22:::3;:26:::0;;;27187:71;;-1:-1:-1;27293:42:41::3;::::0;27320:14;27293:42:::3;:26;:42;:::i;:::-;27268:67:::0;:22:::3;:67:::0;27411:23;;27385:24;;27351:84:::3;::::0;27373:10:::3;::::0;27351:84:::3;::::0;27268:67:::3;::::0;27351:84:::3;27560:24:::0;;27516:18:::3;::::0;:69:::3;::::0;:18:::3;::::0;;::::3;::::0;27548:10:::3;::::0;27516:69:::3;:31;:69;:::i;:::-;27653:23:::0;;27595:13:::3;::::0;:82:::3;::::0;:13:::3;::::0;;::::3;::::0;27626:10:::3;::::0;27646:4:::3;::::0;27595:82:::3;:30;:82;:::i;:::-;27687:13;::::0;27706:23;;27687:43:::3;::::0;;;;:13:::3;::::0;;::::3;::::0;:18:::3;::::0;:43:::3;::::0;::::3;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::3;2:2;27687:43:41;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::3;77:16;74:1;67:27;5:2;27687:43:41;;;;1354:1:12;;;;1365:20:::2;:18;:20::i;39224:136:41:-:0;39305:19;;39286:16;:14;:16::i;:::-;:38;39278:75;;;;;;;;;;;;;40099:181;40189:25;40206:7;40189:16;:25::i;:::-;:56;;;:61;40181:92;;;;;;;;;;;;;2117:186:12;2249:11;;;;;;;2241:55;;;;;;;;;;;;;2309:136;2433:5;2419:19;;;;;;2309:136::o;1938:147:11:-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:11;;;;:::o;34631:202:41:-;34765:20;34739:7;5618:36;5646:7;5618:27;:36::i;:::-;-1:-1:-1;;34808:18:41::1;;;::::0;;;:9:::1;:18;::::0;;;;;34631:202::o;36857:340::-;37015:26;;:::i;:::-;37053:60;37068:12;:26;;37096:16;37053:14;:60::i;:::-;;37130;37145:26;37173:16;37130:14;:60::i;:::-;37123:67;36857:340;-1:-1:-1;;;36857:340:41:o;843:203:79:-;943:96;963:5;993:27;;;1022:4;1028:2;1032:5;970:68;;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;970:68:79;;;49:4:-1;25:18;;61:17;;970:68:79;182:15:-1;970:68:79;;;;179:29:-1;;;;160:49;;;943:19:79;:96::i;:::-;843:203;;;;:::o;2451:206:12:-;2632:11;:18;;;;;;;;2451:206::o;36510:220:41:-;36636:30;36664:1;36636:27;:30::i;:::-;36597:69;:36;;;:69;;36676:43;;;;:47;36510:220::o;5482:146:11:-;5556:15;;:::i;:::-;5603:10;;5590;;:23;:31;;5620:1;5590:31;;;-1:-1:-1;5616:1:11;;5482:146;-1:-1:-1;5482:146:11:o;9282:233:32:-;9406:37;;:::i;:::-;9466:42;;;;;;;;;9484:23;9466:42;;;;;:13;;:42;:17;:42;:::i;722:135:11:-;782:15;;:::i;:::-;816:34;;;;;;;;;;825:24;:1;436:6;825:24;:5;:24;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:11:o;4510:142::-;4635:10;4621;;:24;;;4510:142::o;6797:151::-;6871:15;;:::i;:::-;6905:36;;;;;;;;;6929:10;;6914;;6905:36;;6914:26;;:10;:26;:14;:26;:::i;:::-;6905:36;;6898:43;6797:151;-1:-1:-1;;;6797:151:11:o;7876:650::-;7950:15;;:::i;:::-;8463:56;;;;;;;;;8487:10;;8472;;8463:56;;436:6;;8472:26;;;:14;:26;:::i;:::-;:46;;;;;;8463:56;;8456:63;7876:650;-1:-1:-1;;;7876:650:11:o;2586:145::-;2714:10;2700;;:24;;;2586:145::o;8808:208:32:-;8860:36;;:::i;:::-;8908:20;8931:11;:9;:11::i;:::-;8989:18;;8959:50;;;;;8908:34;;-1:-1:-1;8959:21:32;;;;;;;:50;;8989:18;;8959:50;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8959:50:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8959:50:32;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8959:50:32;;;;;;;;;8952:57;;;8808:208;:::o;10292:634:11:-;10366:15;;:::i;:::-;10860:59;;;;;;;;;10907:10;;10869;;10860:59;;10869:49;;:33;;436:6;10869:33;:14;:33;:::i;:::-;:37;:49;:37;:49;:::i;31863:1480:41:-;32112:33;32148:25;32165:7;32148:16;:25::i;:::-;32272:54;;;;;;;;;;;;;32112:61;;-1:-1:-1;32272:54:41;;:14;;:54;:22;:54;:::i;:::-;:151;;;;-1:-1:-1;32342:53:41;;;;;;;;;32368:26;;;32342:53;;;:81;;32404:18;;32342:53;;:25;:53::i;:81::-;32255:255;;;32448:31;32471:7;32448:22;:31::i;:::-;;32493:7;;;32255:255;32597:62;32626:12;32640:18;32597:28;:62::i;:::-;;32758:40;;:::i;:::-;32801:34;;;;;;;;;;;;;:50;;32836:14;32801:50;:34;:50;:::i;:::-;32869:52;;;;;;;;;32904:16;32869:52;;;32758:93;;-1:-1:-1;32869:52:41;;32758:93;;32869:52;:34;:52;:::i;:::-;32861:95;;;;;;;;;;;;;;32966:46;;;;33117:40;;;;;;;;;:36;;;:40;;;:66;;33158:24;33117:66;:40;:66;:::i;:::-;33078:105;:36;;;:105;33294:26;;;;;;;;;:22;:26;;;:42;;33321:14;33294:42;:26;:42;:::i;:::-;33269:67;:22;:67;-1:-1:-1;;31863:1480:41;;;;:::o;6123:151:11:-;6197:15;;:::i;:::-;6231:36;;;;;;;;;6255:10;;6240;;6231:36;;6240:26;;:10;:26;:14;:26;:::i;11951:561:32:-;12096:42;;:::i;:::-;12154:41;;:::i;:::-;12198:40;;;;;;;;;;;;;;;:25;:40::i;:::-;12154:84;;12248:45;;:::i;:::-;12296:40;12320:15;12296:23;:40::i;:::-;12371:17;;;;;;;;;;;;;12248:88;;-1:-1:-1;12371:37:32;;12248:88;12371:37;:17;:37;:::i;:::-;:46;12346:71;;;12445:40;;;;;;;;;;;;:60;;12490:14;;12445:40;;:25;:40::i;:60::-;12427:78;11951:561;-1:-1:-1;;;;;11951:561:32:o;9759:228::-;9878:40;;:::i;:::-;9941:39;;;;;;;;;9956:23;9941:39;;;;;:10;;:39;:14;:39;:::i;834:176:75:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;1632:137:11;1752:10;1739;;:23;;1632:137::o;37663:346:41:-;37821:26;;:::i;:::-;37859:63;37877:12;:26;;37905:16;37859:17;:63::i;:::-;;37939;37957:26;37985:16;37939:17;:63::i;662:175:79:-;744:86;764:5;794:23;;;819:2;823:5;771:58;;;;;;;;;;39087:131:41;39162:18;39145:13;;;;:35;;;;;;;;;39137:74;;;;;;;;;;;;;35221:175;35316:6;;:73;;;;;35290:7;;35316:6;;;:31;;:73;;35348:40;;35316:73;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;35316:73:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35316:73:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35316:73:41;;;;;;;;35484:176;35555:22;35580:12;:10;:12::i;:::-;35622:15;;35602:51;;;;;35555:37;;-1:-1:-1;35602:19:41;;;;;;:51;;35639:13;;35602:51;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;35602:51:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35602:51:41;;;;35484:176;;:::o;28278:506:40:-;28365:35;28403:43;28423:7;28432:13;28403:19;:43::i;:::-;28471:17;;;;;;;-1:-1:-1;28471:17:40;;;;;;;28587:5;:25;;;;;;;;;28586:137;;;;28673:16;:14;:16::i;:::-;28635:34;28657:11;28635:21;:34::i;:::-;:54;;28634:88;;;;-1:-1:-1;28704:17:40;28695:5;:26;;;;;;;;;28634:88;28565:212;;;;;;;;;;;;;26824:631;27036:21;;;26940:35;27036:21;;;:12;:21;;;;;27264:23;;27248:39;;:104;;;;-1:-1:-1;27332:20:40;27291:16;27308:13;27291:31;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:61;;;;;;;;;;27248:104;27227:173;;;;;;;;;;;;;;27417:16;27434:13;27417:31;;;;;;;;;;;;;;;;;;27410:38;;;26824:631;;;;:::o;24920:1723::-;24996:35;25034:43;25054:7;25063:13;25034:19;:43::i;:::-;24996:81;-1:-1:-1;25318:21:40;25297:17;;;;;;;;;:42;;;;;;;;;25293:79;;25355:7;;;25293:79;25505:44;25521:11;:27;;;25505:15;:44::i;:::-;25475:74;:27;;;:74;25630:47;;:::i;:::-;25680:84;;;;;;;;;25727:27;;;25680:84;;;:33;;;;;;;;:29;;;:33;;;:84;;:33;:84;:33;:84;:::i;:::-;25630:134;;25880:45;;:::i;:::-;25928:47;;;;;;;;;25953:21;25928:47;;;;;:20;;:47;:24;:47;:::i;:::-;26256:53;;;;;;;;;:32;;;:53;;;25880:95;;-1:-1:-1;26232:21:40;;26256:73;;25880:95;26256:73;:53;:73;:::i;:::-;26232:97;;26359:16;:65;;26404:20;26359:65;;;26378:23;26359:65;26339:17;;;:85;;;;;;;;;;;;;;;;;;-1:-1:-1;26513:22:40;;;;26549:20;;;;26440:196;;26513:22;;;;;26440:196;;;;26468:10;;26440:196;;;;26549:20;;26583:13;;26610:16;;26440:196;;;;;;;;;;24920:1723;;;;;;:::o;10567:574:32:-;10718:44;;:::i;:::-;10778:41;;:::i;:::-;10822:40;;;;;;;;;;;;;;;:25;:40::i;:::-;10778:84;;10872:45;;:::i;:::-;10920:43;10944:18;10920:23;:43::i;:::-;10998:17;;;;;;;;;;;;;10872:91;;-1:-1:-1;10998:37:32;;10872:91;10998:37;:17;:37;:::i;:::-;:46;10973:71;;;11093:40;;;;;;;;;;;;11074:60;;11093:40;;:25;:40::i;:::-;11074:14;;:60;:18;:60;:::i;8647:155::-;8739:6;;:55;;;;;8691:14;;8739:6;;;:31;;:55;;8771:22;;8739:55;;;;26649:169:40;26697:26;;:::i;:::-;26759:51;;;;;;;;;26785:24;26759:51;;;26742:69;;26759:51;;:25;:51::i;:::-;26742:12;:10;:12::i;1020:142:11:-;1090:4;1127:19;1144:1;1127:16;:19::i;:::-;:28;1113:10;;:42;;-1:-1:-1;1020:142:11;;;;:::o;12622:333:32:-;12767:39;;:::i;:::-;12809:26;:6;12824:10;12809:26;:14;:26;:::i;:::-;12767:68;;12871:77;12899:48;12934:12;12899:30;12927:1;12899:27;:30::i;:48::-;12871:27;;;;;;;;;:23;:27;;;;:77;:27;:77;:::i;:::-;12845:103;:23;:103;-1:-1:-1;;;12622:333:32:o;1671:283:79:-;1767:20;1790:50;1834:5;1790;:15;;;1814:4;1821:7;1790:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1790:39:79;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1790:39:79;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1790:39:79;;;;;;;;:50;1767:73;;1850:97;1870:5;1900:22;;;1924:7;1933:12;1877:69;;;;;;;;;;38373:434:41;38539:26;;:::i;:::-;38577:63;38595:12;:26;;38623:16;38577:17;:63::i;:::-;;38658:45;38690:12;38658:31;:45::i;:::-;38650:70;;;;;;;;;;;;;;38737:63;38755:26;38783:16;38737:17;:63::i;1328:132:11:-;1443:10;1429;;:24;;1328:132::o;33452:1006:41:-;33519:26;;:::i;:::-;33557:40;33600:25;33617:7;33600:16;:25::i;:::-;33557:68;;33636:51;;:::i;:::-;33690:53;;;;;;;;;33716:26;33690:53;;;;;:25;:53::i;:::-;33636:107;;33836:49;;:::i;:::-;-1:-1:-1;33836:85:41;;;;;;;;;33888:33;;;33836:85;;;33960:30;;;;;;;;:26;:30;;;33836:85;33960:54;;33836:85;33960:54;:30;:54;:::i;:::-;33931:83;:26;:83;34049:65;;;;;;;;;;;;;:26;;;;;;;;:22;:26;;;:65;;:26;:65;:26;:65;:::i;:::-;34024:90;:22;:90;34212:18;;;34024:90;34212:18;;;:9;:18;;;;;;34205:25;;;;;;;;;;;;;;;;;;;;;;;;;;34246:29;;;34024:90;34246:29;34397:53;;;;;;;;;34423:26;34397:53;;;34368:83;;34397:53;;:25;:53::i;40871:507::-;41027:4;41047:33;;:::i;:::-;41123:53;;;;;;;;;41149:26;41123:53;;;41083:139;;41123:53;;:25;:53::i;:::-;41083:139;;;;;;;;;41190:22;41083:139;;;:26;:139::i;:::-;41047:175;;41232:37;;:::i;:::-;41272:49;41299:10;41311:9;41272:26;:49::i;:::-;41232:89;-1:-1:-1;41339:32:41;:6;41232:89;41339:32;:20;:32;:::i;:::-;41338:33;;40871:507;-1:-1:-1;;;;;40871:507:41:o;39366:139::-;39449:19;;39429:16;:14;:16::i;:::-;:39;;39421:77;;;;;;;;;;;;;7510:1050:32;7606:17;:6;7621:1;7606:17;:14;:17;:::i;:::-;7602:54;;;7639:7;;7602:54;7670:22;;;7687:4;7670:22;7666:643;;7850:15;;7792:18;;:74;;:18;;;;;7828:5;;7843:4;;7792:74;:35;:74;:::i;:::-;7666:643;;;7992:41;;:::i;:::-;8036:6;:4;:6::i;:::-;7992:50;-1:-1:-1;8162:36:32;7992:50;8191:6;8162:36;:28;:36;:::i;:::-;8154:75;;;;;;;;;;;;;;8244:54;8275:6;8283:14;8244:30;:54::i;:::-;7666:643;;8338:15;;8324:30;;;;8338:15;;8324:30;8365:20;8388:11;:9;:11::i;:::-;8466:15;;8409:18;;8365:34;;-1:-1:-1;8409:73:32;;:18;;;8365:34;;8409:73;:40;:73;:::i;:::-;8525:18;;8492:61;;;;;:24;;;;;;;:61;;8525:18;;;;8546:6;;8492:61;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8492:61:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8492:61:32;;;;7510:1050;;;:::o;27917:355:40:-;28002:35;28040:43;28060:7;28069:13;28040:19;:43::i;:::-;28002:81;;28134:34;28156:11;28134:21;:34::i;:::-;28115:16;:14;:16::i;:::-;:53;28114:99;;;;-1:-1:-1;28195:17:40;28174;;;;;;;;;:38;;;;;;;;;28114:99;28093:172;;;;;;;;;;;;;35778:629:41;35849:26;;:::i;:::-;35987:22;36012:12;:10;:12::i;:::-;36058:15;;36042:47;;;;;35987:37;;-1:-1:-1;36042:15:41;;;;;;:47;;36075:13;;36042:47;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;36042:47:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36042:47:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36042:47:41;;;;;;;;;36034:83;;;;;;;;;;;;;;36164:15;;36148:47;;;;;36127:18;;36148:15;;;;;;:47;;36181:13;;36148:47;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;36148:47:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36148:47:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36148:47:41;;;;;;;;;36127:68;;36300:1;36286:11;:15;36282:61;;;-1:-1:-1;36331:1:41;36282:61;36359:41;;;;;;;;;;;;;35778:629;-1:-1:-1;;;35778:629:41:o;3574:134:11:-;3691:10;3678;;:23;;3574:134::o;39511:234:41:-;39636:18;;;39684:1;39636:18;;;:9;:18;;;;;;;;39610:59;;;;;;;;39636:32;;39610:59;;;:76;;39684:1;39610:59;;:25;:59::i;:76::-;39589:149;;;;;;;;;;;;;2671:1096:79;3267:27;3275:5;3267:25;;;:27::i;:::-;3259:71;;;;;;;;;;;;;;3401:12;3415:23;3450:5;3442:19;;3462:4;3442:25;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3400:67:79;;;;3485:7;3477:52;;;;;;;;;;;;;;3544:17;;:21;3540:221;;3684:10;3673:30;;;;;;;;;;;;;;3665:85;;;;;;;;;;;;;2119:459:75;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:75;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;;;;;;;;;;1274:134;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;35056:159:41:-;35151:6;;:56;;;;;35101:15;;35151:6;;;:31;;:56;;35183:23;;35151:56;;;;27461:176:40;27552:7;27578:52;27610:19;;27578:11;:27;;;:31;;:52;;;;:::i;34464:161:41:-;34520:26;;:::i;12067:398:11:-;12145:15;;:::i;:::-;12190:10;;12172:15;;12190:33;;436:6;12190:33;:14;:33;:::i;:::-;12264:10;;12172:51;;-1:-1:-1;12233:16:11;;12252:23;;12172:51;;12252:23;:11;:23;:::i;:::-;12311:10;;12233:42;;-1:-1:-1;12285:11:11;;12299:23;;:7;;:23;:11;:23;:::i;:::-;12285:37;-1:-1:-1;12336:8:11;;12332:127;;12367:25;;;;;;;;;;12376:15;:8;12389:1;12376:15;:12;:15;:::i;:::-;12367:25;;;12360:32;;;;;;;12332:127;12430:18;;;;;;;;12439:8;12430:18;;;12423:25;;;;;;;40425:296:41;40599:53;;;;;;;;;40625:26;;;40599:53;;;40523:4;;40558:156;;40599:53;;:25;:53::i;:::-;40558:156;;;;;;;;;;;;;:23;:156::i;41384:371::-;41543:32;;:::i;:::-;41596:26;:9;41620:1;41596:26;:23;:26;:::i;:::-;41591:158;;41645:30;41673:1;41645:27;:30::i;:::-;41638:37;;;;41591:158;41713:25;:10;41728:9;41713:25;:14;:25;:::i;685:610:80:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:80;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:80:o;1692:187:75:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:75;;;1692:187::o;3638:338::-;3724:7;3824:12;3817:5;3809:28;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:75:o;4420:128::-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;5098:7;5133:12;5125:6;5117:29;;;;;;;;;;;;;;;;5167:1;5163;:5;;;;;;;5012:163;-1:-1:-1;;;;5012:163:75:o;178:518:37:-;;;;;;;;;;;;;;:::o;592:159:-1:-;;704:2;695:6;690:3;686:16;682:25;679:2;;;-1:-1;;710:12;791:328;;906:4;894:9;889:3;885:19;881:30;878:2;;;-1:-1;;914:12;878:2;942:20;906:4;942:20;;;1583;;1023:75;;-1:-1;933:29;872:247;-1:-1;872:247;1159:350;;1285:4;1273:9;1268:3;1264:19;1260:30;1257:2;;;-1:-1;;1293:12;1257:2;1321:20;1285:4;1321:20;;;1731:13;;1402:86;;-1:-1;1312:29;1251:258;-1:-1;1251:258;1794:241;;1898:2;1886:9;1877:7;1873:23;1869:32;1866:2;;;-1:-1;;1904:12;1866:2;85:6;72:20;97:33;124:5;97:33;;2042:263;;2157:2;2145:9;2136:7;2132:23;2128:32;2125:2;;;-1:-1;;2163:12;2125:2;226:6;220:13;238:33;265:5;238:33;;2312:911;;;;;;2568:3;2556:9;2547:7;2543:23;2539:33;2536:2;;;-1:-1;;2575:12;2536:2;85:6;72:20;97:33;124:5;97:33;;;2627:63;-1:-1;2745:81;2818:7;2727:2;2794:22;;2745:81;;;2735:91;;2881:81;2954:7;2863:2;2934:9;2930:22;2881:81;;;2871:91;;3017:81;3090:7;2999:2;3070:9;3066:22;3017:81;;;2530:693;;;;-1:-1;2530:693;;3135:3;3175:22;1583:20;;2530:693;-1:-1;;2530:693;3230:418;;;3377:2;3365:9;3356:7;3352:23;3348:32;3345:2;;;-1:-1;;3383:12;3345:2;85:6;72:20;97:33;124:5;97:33;;;3435:63;-1:-1;3553:79;3624:7;3535:2;3600:22;;3553:79;;;3543:89;;3339:309;;;;;;3655:366;;;3776:2;3764:9;3755:7;3751:23;3747:32;3744:2;;;-1:-1;;3782:12;3744:2;85:6;72:20;97:33;124:5;97:33;;;3834:63;3934:2;3973:22;;;;1583:20;;-1:-1;;;3738:283;4028:257;;4140:2;4128:9;4119:7;4115:23;4111:32;4108:2;;;-1:-1;;4146:12;4108:2;364:6;358:13;57198:5;54128:13;54121:21;57176:5;57173:32;57163:2;;-1:-1;;57209:12;4292:261;;4406:2;4394:9;4385:7;4381:23;4377:32;4374:2;;;-1:-1;;4412:12;4374:2;-1:-1;495:13;;4368:185;-1:-1;4368:185;4560:293;;4690:2;4678:9;4669:7;4665:23;4661:32;4658:2;;;-1:-1;;4696:12;4658:2;4758:79;4829:7;4805:22;4758:79;;4860:315;;5001:2;4989:9;4980:7;4976:23;4972:32;4969:2;;;-1:-1;;5007:12;4969:2;5069:90;5151:7;5127:22;5069:90;;5182:470;;;5355:2;5343:9;5334:7;5330:23;5326:32;5323:2;;;-1:-1;;5361:12;5323:2;5423:79;5494:7;5470:22;5423:79;;5659:503;;;5843:2;5831:9;5822:7;5818:23;5814:32;5811:2;;;-1:-1;;5849:12;5811:2;5911:90;5993:7;5969:22;5911:90;;;5901:100;;6056:90;6138:7;6038:2;6118:9;6114:22;6056:90;;6169:241;;6273:2;6261:9;6252:7;6248:23;6244:32;6241:2;;;-1:-1;;6279:12;6241:2;-1:-1;1583:20;;6235:175;-1:-1;6235:175;6687:366;;;6808:2;6796:9;6787:7;6783:23;6779:32;6776:2;;;-1:-1;;6814:12;6776:2;1596:6;1583:20;6866:63;;6966:2;7009:9;7005:22;72:20;97:33;124:5;97:33;;;6974:63;;;;6770:283;;;;;;7513:103;54668:42;54657:54;7574:37;;7568:48;10046:134;56964:1;56957:5;56954:12;56944:2;;56970:9;56944:2;10116:59;;10110:70;25215:328;25430:23;8942:37;;25333:210;26558:262;;9151:5;52981:12;9262:52;9307:6;9302:3;9295:4;9288:5;9284:16;9262:52;;;9326:16;;;;;26683:137;-1:-1;;26683:137;26827:213;54668:42;54657:54;;;;7574:37;;26945:2;26930:18;;26916:124;27283:340;54668:42;54657:54;;;;7443:58;;27609:2;27594:18;;8942:37;27437:2;27422:18;;27408:215;27630:324;54668:42;54657:54;;;7574:37;;54657:54;;27940:2;27925:18;;7574:37;27776:2;27761:18;;27747:207;27961:1927;54668:42;54657:54;;;7574:37;;54657:54;;;28822:2;28807:18;;7574:37;28657:3;28642:19;;;28837:81;28914:2;28899:18;;28890:6;28837:81;;;28997:2;28982:18;;8942:37;;;;25430:23;;29128:3;29113:19;;8942:37;25430:23;;29260:3;29245:19;;8942:37;25430:23;;29392:3;29377:19;;8942:37;25430:23;;29524:3;29509:19;;8942:37;54657:54;;;29608:3;29593:19;;7574:37;25430:23;;29740:3;29725:19;;8942:37;25430:23;;29873:3;29858:19;;;8942:37;;;;28628:1260;;-1:-1;;;28628:1260;29895:435;54668:42;54657:54;;;7574:37;;54657:54;;;;30233:2;30218:18;;7574:37;30316:2;30301:18;;8942:37;;;;30069:2;30054:18;;30040:290;30337:428;54668:42;54657:54;;;;7574:37;;25430:23;30751:2;30736:18;;8942:37;30535:2;30520:18;;30506:259;31103:423;54668:42;54657:54;;;;7574:37;;31435:2;31420:18;;8942:37;;;;54128:13;54121:21;31512:2;31497:18;;8825:34;31271:2;31256:18;;31242:284;31533:477;31759:2;31773:47;;;52981:12;;31744:18;;;53571:19;;;31533:477;;31759:2;53611:14;;;;;;52806;;;31533:477;8383:347;8408:6;8405:1;8402:13;8383:347;;;8475:6;8469:13;23121:63;23169:14;23098:16;23092:23;23121:63;;;31759:2;23262:5;23258:16;23252:23;23281:63;31759:2;23333:3;23329:14;23315:12;23281:63;;;;53611:14;23417:5;23413:16;23407:23;23436:72;53611:14;23497:3;23493:14;23479:12;23436:72;;;-1:-1;23598:4;23587:16;;;23581:23;23658:14;;;8942:37;23765:4;23754:16;;;23748:23;23777:111;23873:14;;;23748:23;23777:111;;;;;23979:4;;23972:5;23968:16;23962:23;23991:111;23979:4;24091:3;24087:14;24073:12;23991:111;;;;;24197:4;;24190:5;24186:16;24180:23;24209:111;24197:4;24309:3;24305:14;24291:12;24209:111;;;;;24412:4;;24405:5;24401:16;24395:23;24424:111;24412:4;24524:3;24520:14;24506:12;24424:111;;;;;24618:6;;24611:5;24607:18;24601:25;24632:65;24618:6;24684:3;24680:16;24666:12;24632:65;;;;;24787:6;;24780:5;24776:18;24770:25;24801:113;24787:6;24901:3;24897:16;24883:12;24801:113;;;;;24997:6;;24990:5;24986:18;24980:25;25011:113;24997:6;25111:3;25107:16;25093:12;25011:113;;;-1:-1;;;7343:6;7334:16;;;;;53397:14;;;;8430:1;8423:9;8383:347;;;-1:-1;31826:174;;31730:280;-1:-1;;;;;;;31730:280;32017:213;8942:37;;;32135:2;32120:18;;32106:124;32237:324;8942:37;;;32547:2;32532:18;;8942:37;32383:2;32368:18;;32354:207;33356:245;33490:2;33475:18;;56855:1;56845:12;;56835:2;;56861:9;56835:2;9968:66;;;33461:140;;33608:301;;33746:2;33767:17;33760:47;10483:5;52981:12;53583:6;33746:2;33735:9;33731:18;53571:19;10577:52;10622:6;53611:14;33735:9;53611:14;33746:2;10603:5;10599:16;10577:52;;;56751:2;56731:14;56747:7;56727:28;10641:39;;;;53611:14;10641:39;;33717:192;-1:-1;;33717:192;33916:407;34107:2;34121:47;;;10917:2;34092:18;;;53571:19;10953:27;53611:14;;;10933:48;11000:12;;;34078:245;34330:407;34521:2;34535:47;;;11251:2;34506:18;;;53571:19;11287:30;53611:14;;;11267:51;11337:12;;;34492:245;34744:407;34935:2;34949:47;;;11588:2;34920:18;;;53571:19;11624:32;53611:14;;;11604:53;11676:12;;;34906:245;35158:407;35349:2;35363:47;;;11927:2;35334:18;;;53571:19;11963:29;53611:14;;;11943:50;12012:12;;;35320:245;35572:407;35763:2;35777:47;;;12263:2;35748:18;;;53571:19;12299:21;53611:14;;;12279:42;12340:12;;;35734:245;35986:407;36177:2;36191:47;;;12591:2;36162:18;;;53571:19;12627:22;53611:14;;;12607:43;12669:12;;;36148:245;36400:407;36591:2;36605:47;;;36576:18;;;53571:19;12956:34;53611:14;;;12936:55;13010:12;;;36562:245;36814:407;37005:2;37019:47;;;13261:2;36990:18;;;53571:19;13297:22;53611:14;;;13277:43;13339:12;;;36976:245;37228:407;37419:2;37433:47;;;13590:2;37404:18;;;53571:19;13626:28;53611:14;;;13606:49;13674:12;;;37390:245;37642:407;37833:2;37847:47;;;13925:2;37818:18;;;53571:19;13961:25;53611:14;;;13941:46;14006:12;;;37804:245;38056:407;38247:2;38261:47;;;14257:2;38232:18;;;53571:19;14293:32;53611:14;;;14273:53;14345:12;;;38218:245;38470:407;38661:2;38675:47;;;14596:2;38646:18;;;53571:19;14632:24;53611:14;;;14612:45;14676:12;;;38632:245;38884:407;39075:2;39089:47;;;14927:2;39060:18;;;53571:19;14963:27;53611:14;;;14943:48;15010:12;;;39046:245;39298:407;39489:2;39503:47;;;15261:2;39474:18;;;53571:19;15297:28;53611:14;;;15277:49;15345:12;;;39460:245;39712:407;39903:2;39917:47;;;15596:2;39888:18;;;53571:19;15632:28;53611:14;;;15612:49;15680:12;;;39874:245;40126:407;40317:2;40331:47;;;15931:2;40302:18;;;53571:19;15967:34;53611:14;;;15947:55;16036:3;16022:12;;;16015:25;16059:12;;;40288:245;40540:407;40731:2;40745:47;;;16310:2;40716:18;;;53571:19;16346:20;53611:14;;;16326:41;16386:12;;;40702:245;40954:407;41145:2;41159:47;;;16637:2;41130:18;;;53571:19;16673:26;53611:14;;;16653:47;16719:12;;;41116:245;41368:407;41559:2;41573:47;;;16970:2;41544:18;;;53571:19;17006:26;53611:14;;;16986:47;17052:12;;;41530:245;41782:407;41973:2;41987:47;;;17303:2;41958:18;;;53571:19;17339:21;53611:14;;;17319:42;17380:12;;;41944:245;42196:407;42387:2;42401:47;;;17631:2;42372:18;;;53571:19;17667:33;53611:14;;;17647:54;17720:12;;;42358:245;42610:407;42801:2;42815:47;;;17971:2;42786:18;;;53571:19;18007:32;53611:14;;;17987:53;18059:12;;;42772:245;43024:407;43215:2;43229:47;;;18310:2;43200:18;;;53571:19;18346:14;53611;;;18326:35;18380:12;;;43186:245;43438:407;43629:2;43643:47;;;18631:2;43614:18;;;53571:19;18667:30;53611:14;;;18647:51;18717:12;;;43600:245;43852:407;44043:2;44057:47;;;18968:2;44028:18;;;53571:19;19004:26;53611:14;;;18984:47;19050:12;;;44014:245;44266:407;44457:2;44471:47;;;19301:2;44442:18;;;53571:19;19337:27;53611:14;;;19317:48;19384:12;;;44428:245;44680:407;44871:2;44885:47;;;19635:2;44856:18;;;53571:19;19671:29;53611:14;;;19651:50;19720:12;;;44842:245;45094:407;45285:2;45299:47;;;19971:2;45270:18;;;53571:19;20007:32;53611:14;;;19987:53;20059:12;;;45256:245;45508:407;45699:2;45713:47;;;20310:2;45684:18;;;53571:19;20346:34;53611:14;;;20326:55;20415:12;20401;;;20394:34;20447:12;;;45670:245;45922:407;46113:2;46127:47;;;20698:2;46098:18;;;53571:19;20734:33;53611:14;;;20714:54;20787:12;;;46084:245;46336:407;46527:2;46541:47;;;21038:2;46512:18;;;53571:19;21074:18;53611:14;;;21054:39;21112:12;;;46498:245;46750:407;46941:2;46955:47;;;21363:2;46926:18;;;53571:19;21399:20;53611:14;;;21379:41;21439:12;;;46912:245;47164:407;47355:2;47369:47;;;21690:2;47340:18;;;53571:19;21726:18;53611:14;;;21706:39;21764:12;;;47326:245;47578:407;47769:2;47783:47;;;22015:2;47754:18;;;53571:19;22051:33;53611:14;;;22031:54;22104:12;;;47740:245;47992:407;48183:2;48197:47;;;22355:2;48168:18;;;53571:19;22391:28;53611:14;;;22371:49;22439:12;;;48154:245;48406:407;48597:2;48611:47;;;22690:2;48582:18;;;53571:19;22726:23;53611:14;;;22706:44;22769:12;;;48568:245;48820:317;25430:23;;8942:37;;48990:2;48975:18;;48961:176;49144:947;25430:23;;8942:37;;49731:2;49716:18;;8942:37;;;;25430:23;;49862:2;49847:18;;8942:37;25430:23;49993:2;49978:18;;8942:37;50076:3;50061:19;;8942:37;49518:3;49503:19;;49489:602;50318:643;8942:37;;;25430:23;;50812:2;50797:18;;8942:37;25430:23;50947:2;50932:18;;8942:37;50596:2;50581:18;;50567:394;51299:539;8942:37;;;51689:2;51674:18;;8942:37;;;;25430:23;51824:2;51809:18;;8942:37;51525:2;51510:18;;51496:342;51845:547;8942:37;;;52212:2;52197:18;;8942:37;;;;52295:2;52280:18;;8942:37;52378:2;52363:18;;8942:37;52047:3;52032:19;;52018:374;52399:256;52461:2;52455:9;52487:17;;;52562:18;52547:34;;52583:22;;;52544:62;52541:2;;;52619:1;;52609:12;52541:2;52461;52628:22;52439:216;;-1:-1;52439:216;56387:268;56452:1;56459:101;56473:6;56470:1;56467:13;56459:101;;;56540:11;;;56534:18;56521:11;;;56514:39;56495:2;56488:10;56459:101;;;56575:6;56572:1;56569:13;56566:2;;;-1:-1;;56452:1;56622:16;;56615:27;56436:219;56993:117;54668:42;57080:5;54657:54;57055:5;57052:35;57042:2;;57101:1;;57091:12;57036:74;3947:4:11;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:11;;;;:::o",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Liquidatable.sol\";\n\n\n/**\n * @title Expiring Multi Party.\n * @notice Convenient wrapper for Liquidatable.\n */\ncontract ExpiringMultiParty is Liquidatable {\n    /**\n     * @notice Constructs the ExpiringMultiParty contract.\n     * @param params struct to define input parameters for construction of Liquidatable. Some params\n     * are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\n     */\n    constructor(ConstructorParams memory params)\n        public\n        Liquidatable(params)\n    // Note: since there is no logic here, there is no need to add a re-entrancy guard.\n    {\n\n    }\n}\n",
  "sourcePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
  "ast": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        8281
      ]
    },
    "id": 8282,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8265,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:37"
      },
      {
        "id": 8266,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:37"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 8267,
        "nodeType": "ImportDirective",
        "scope": 8282,
        "sourceUnit": 9853,
        "src": "59:28:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8269,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9852,
              "src": "209:12:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$9852",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 8270,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:37"
          }
        ],
        "contractDependencies": [
          4331,
          5011,
          7084,
          9852,
          11738,
          16347
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8268,
          "nodeType": "StructuredDocumentation",
          "src": "90:87:37",
          "text": "@title Expiring Multi Party.\n@notice Convenient wrapper for Liquidatable."
        },
        "fullyImplemented": true,
        "id": 8281,
        "linearizedBaseContracts": [
          8281,
          9852,
          11738,
          16347,
          7084,
          4331,
          5011
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8279,
              "nodeType": "Block",
              "src": "686:8:37",
              "statements": []
            },
            "documentation": {
              "id": 8271,
              "nodeType": "StructuredDocumentation",
              "src": "228:272:37",
              "text": "@notice Constructs the ExpiringMultiParty contract.\n@param params struct to define input parameters for construction of Liquidatable. Some params\nare fed directly into the PricelessPositionManager's constructor within the inheritance tree."
            },
            "id": 8280,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8276,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8273,
                    "src": "586:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$8664_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 8277,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8275,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9852,
                  "src": "573:12:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$9852_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:20:37"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8273,
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8280,
                  "src": "517:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$8664_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8272,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8664,
                    "src": "517:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$8664_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:33:37"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:37"
            },
            "scope": 8281,
            "src": "505:189:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8282,
        "src": "178:518:37"
      }
    ],
    "src": "0:697:37"
  },
  "legacyAST": {
    "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        8281
      ]
    },
    "id": 8282,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8265,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:37"
      },
      {
        "id": 8266,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:37"
      },
      {
        "absolutePath": "/home/alessandrovm/JarvisLavoro/SynFiat/packages/contracts/contracts/uma-contracts/financial-templates/expiring-multiparty/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 8267,
        "nodeType": "ImportDirective",
        "scope": 8282,
        "sourceUnit": 9853,
        "src": "59:28:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8269,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9852,
              "src": "209:12:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$9852",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 8270,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:37"
          }
        ],
        "contractDependencies": [
          4331,
          5011,
          7084,
          9852,
          11738,
          16347
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8268,
          "nodeType": "StructuredDocumentation",
          "src": "90:87:37",
          "text": "@title Expiring Multi Party.\n@notice Convenient wrapper for Liquidatable."
        },
        "fullyImplemented": true,
        "id": 8281,
        "linearizedBaseContracts": [
          8281,
          9852,
          11738,
          16347,
          7084,
          4331,
          5011
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8279,
              "nodeType": "Block",
              "src": "686:8:37",
              "statements": []
            },
            "documentation": {
              "id": 8271,
              "nodeType": "StructuredDocumentation",
              "src": "228:272:37",
              "text": "@notice Constructs the ExpiringMultiParty contract.\n@param params struct to define input parameters for construction of Liquidatable. Some params\nare fed directly into the PricelessPositionManager's constructor within the inheritance tree."
            },
            "id": 8280,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8276,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8273,
                    "src": "586:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$8664_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 8277,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8275,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9852,
                  "src": "573:12:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$9852_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:20:37"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8273,
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8280,
                  "src": "517:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$8664_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8272,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8664,
                    "src": "517:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$8664_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:33:37"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:37"
            },
            "scope": 8281,
            "src": "505:189:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8282,
        "src": "178:518:37"
      }
    ],
    "src": "0:697:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-09-18T09:03:22.745Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "params": "struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
        }
      },
      "create((uint256),(uint256))": {
        "details": "Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "is the number of collateral tokens to collateralize the position with",
          "numTokens": "is the number of tokens to mint from the position."
        }
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "details": "This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.",
        "params": {
          "deadline": "abort the liquidation if the transaction is mined after this timestamp.",
          "maxCollateralPerToken": "abort the liquidation if the position's collateral per token exceeds this value.",
          "maxTokensToLiquidate": "max number of tokens to liquidate.",
          "minCollateralPerToken": "abort the liquidation if the position's collateral per token is below this value.",
          "sponsor": "address of the sponsor to liquidate."
        },
        "returns": {
          "finalFeeBond": "amount of collateral to be posted by liquidator and returned if not disputed successfully.",
          "liquidationId": "ID of the newly created liquidation.",
          "tokensLiquidated": "amount of synthetic tokens removed and liquidated from the `sponsor`'s position."
        }
      },
      "deposit((uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position."
        }
      },
      "depositTo(address,(uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position.",
          "sponsor": "the sponsor to credit the deposit to."
        }
      },
      "dispute(uint256,address)": {
        "details": "Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPct` times the collateral in the liquidation.",
        "params": {
          "liquidationId": "of the disputed liquidation.",
          "sponsor": "the address of the sponsor whose liquidation is being disputed."
        },
        "returns": {
          "totalPaid": "amount of collateral charged to disputer (i.e. final fee bond + dispute bond)."
        }
      },
      "emergencyShutdown()": {
        "details": "Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees."
      },
      "expire()": {
        "details": "this function can only be called once the contract is expired and can't be re-called."
      },
      "getCollateral(address)": {
        "details": "This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.",
        "params": {
          "sponsor": "address whose collateral amount is retrieved."
        },
        "returns": {
          "collateralAmount": "amount of collateral within a sponsors position."
        }
      },
      "getLiquidations(address)": {
        "params": {
          "sponsor": "address of the position sponsor."
        },
        "returns": {
          "liquidationData": "array of all liquidation information for the given sponsor address."
        }
      },
      "payRegularFees()": {
        "details": "These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.",
        "returns": {
          "totalPaid": "Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0."
        }
      },
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corrution denominated in collateral currency."
        }
      },
      "redeem((uint256))": {
        "details": "Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.",
        "params": {
          "numTokens": "is the number of tokens to be burnt for a commensurate amount of collateral."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "remargin()": {
        "details": "This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing."
      },
      "requestTransferPosition()": {
        "details": "The liveness length is the same as the withdrawal liveness."
      },
      "requestWithdrawal((uint256))": {
        "details": "The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.",
        "params": {
          "collateralAmount": "the amount of collateral requested to withdraw"
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "settleExpired()": {
        "details": "This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "transferPositionPassedRequest(address)": {
        "details": "Transferring positions can only occur if the recipient does not already have a position.",
        "params": {
          "newSponsorAddress": "is the address to which the position will be transferred."
        }
      },
      "withdraw((uint256))": {
        "details": "Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.",
        "params": {
          "collateralAmount": "is the amount of collateral to withdraw."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "withdrawLiquidation(uint256,address)": {
        "details": "If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. Once all collateral is withdrawn, delete the liquidation data.",
        "params": {
          "liquidationId": "uniquely identifies the sponsor's liquidation.",
          "sponsor": "address of the sponsor associated with the liquidation."
        },
        "returns": {
          "amountWithdrawn": "the total amount of underlying returned from the liquidation."
        }
      },
      "withdrawPassedRequest()": {
        "details": "Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      }
    },
    "title": "Expiring Multi Party."
  },
  "userdoc": {
    "methods": {
      "cancelTransferPosition()": {
        "notice": "Cancels a pending transfer position request."
      },
      "cancelWithdrawal()": {
        "notice": "Cancels a pending withdrawal request."
      },
      "constructor": "Constructs the ExpiringMultiParty contract.",
      "create((uint256),(uint256))": {
        "notice": "Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`."
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "notice": "Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens."
      },
      "deposit((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the caller's position."
      },
      "depositTo(address,(uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position."
      },
      "dispute(uint256,address)": {
        "notice": "Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request."
      },
      "emergencyShutdown()": {
        "notice": "Premature contract settlement under emergency circumstances."
      },
      "expire()": {
        "notice": "Locks contract state in expired and requests oracle price."
      },
      "getCollateral(address)": {
        "notice": "Accessor method for a sponsor's collateral."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getLiquidations(address)": {
        "notice": "Gets all liquidation information for a given sponsor address."
      },
      "payRegularFees()": {
        "notice": "Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "redeem((uint256))": {
        "notice": "Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`."
      },
      "remargin()": {
        "notice": "Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract."
      },
      "requestTransferPosition()": {
        "notice": "Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor."
      },
      "requestWithdrawal((uint256))": {
        "notice": "Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "settleExpired()": {
        "notice": "After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function."
      },
      "totalPositionCollateral()": {
        "notice": "Accessor method for the total collateral stored within the PricelessPositionManager."
      },
      "transferPositionPassedRequest(address)": {
        "notice": "After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`."
      },
      "withdraw((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor."
      },
      "withdrawLiquidation(uint256,address)": {
        "notice": "After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments."
      },
      "withdrawPassedRequest()": {
        "notice": "After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency."
      }
    },
    "notice": "Convenient wrapper for Liquidatable."
  }
}