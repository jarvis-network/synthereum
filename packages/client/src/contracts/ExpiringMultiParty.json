{
  "contractName": "ExpiringMultiParty",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isTest",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalLiveness",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "priceFeedIdentifier",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "syntheticName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "syntheticSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLiveness",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "collateralRequirement",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputeBondPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "sponsorDisputeRewardPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputerDisputeRewardPct",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.ConstructorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ContractExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "DisputeSucceeded",
          "type": "bool"
        }
      ],
      "name": "DisputeSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalExpirationTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shutdownTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EmergencyShutdown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutstanding",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidatedCollateral",
          "type": "uint256"
        }
      ],
      "name": "LiquidationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeBondAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidationDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Liquidatable.Status",
          "name": "liquidationStatus",
          "type": "uint8"
        }
      ],
      "name": "LiquidationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "NewSponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "PositionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralReturned",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokensBurned",
          "type": "uint256"
        }
      ],
      "name": "SettleExpiredPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSponsor",
          "type": "address"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRequirement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractState",
      "outputs": [
        {
          "internalType": "enum PricelessPositionManager.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxTokensToLiquidate",
          "type": "tuple"
        }
      ],
      "name": "createLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputeBondPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputerDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getLiquidations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "internalType": "enum Liquidatable.Status",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "liquidationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "tokensOutstanding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "lockedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "liquidatedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "rawUnitCollateral",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "settlementPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "finalFee",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.LiquidationData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPaymentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "enum Liquidatable.Status",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "lockedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "liquidatedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawUnitCollateral",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "settlementPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requestPassTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "withdrawalRequestAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawCollateral",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceIdentifer",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawLiquidationCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawTotalPositionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "requestWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleExpired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCurrency",
      "outputs": [
        {
          "internalType": "contract ExpandedIERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPositionCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensOutstanding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSponsorAddress",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "withdrawLiquidation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "withdrawalAmount",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPassedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isTest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLiveness\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceFeedIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"syntheticName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"syntheticSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLiveness\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputeBondPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"sponsorDisputeRewardPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputerDisputeRewardPct\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ContractExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"DisputeSucceeded\",\"type\":\"bool\"}],\"name\":\"DisputeSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalExpirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shutdownTimestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyShutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutstanding\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateral\",\"type\":\"uint256\"}],\"name\":\"LiquidationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeBondAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidationDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Liquidatable.Status\",\"name\":\"liquidationStatus\",\"type\":\"uint8\"}],\"name\":\"LiquidationWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"NewSponsor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"PositionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralReturned\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokensBurned\",\"type\":\"uint256\"}],\"name\":\"SettleExpiredPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSponsor\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"internalType\":\"enum PricelessPositionManager.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxTokensToLiquidate\",\"type\":\"tuple\"}],\"name\":\"createLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeFeeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"dispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeBondPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputerDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getLiquidations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.LiquidationData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPaymentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requestPassTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"withdrawalRequestAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawCollateral\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceIdentifer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawLiquidationCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawTotalPositionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleExpired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsorDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCurrency\",\"outputs\":[{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPositionCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSponsorAddress\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"withdrawLiquidation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"withdrawalAmount\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPassedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"create((uint256),(uint256))\":{\"details\":\"Reverts if the minting these tokens would put the position's collateralization ratio below the global collateralization ratio.\",\"params\":{\"collateralAmount\":\"is the number of collateral tokens to collateralize the position with\",\"numTokens\":\"is the number of tokens to mint from the position.\"}},\"createLiquidation(address,(uint256),(uint256))\":{\"details\":\"This method generates an ID that will uniquely identify liquidation for the sponsor.\",\"params\":{\"collateralPerToken\":\"abort the liquidation if the position's collateral per token exceeds this value.\",\"maxTokensToLiquidate\":\"max number of tokes to liquidate.\",\"sponsor\":\"address to liquidate.\"},\"returns\":{\"liquidationId\":\"of the newly created liquidation.\"}},\"deposit((uint256))\":{\"details\":\"Increases the collateralization level of a position after creation.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\"}},\"dispute(uint256,address)\":{\"details\":\"Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes.\",\"params\":{\"liquidationId\":\"of the disputed liquidation.\",\"sponsor\":\"the address of the sponsor who's liquidation is being disputed.\"}},\"emergencyShutdown()\":{\"details\":\"Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees.\"},\"expire()\":{\"details\":\"this function can only be called once the contract is expired and cant be re-called due to the state modifiers applied on it.\"},\"getCollateral(address)\":{\"details\":\"This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.\",\"params\":{\"sponsor\":\"address whose collateral amount is retrieved.\"}},\"payFees()\":{\"details\":\"These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or mre then a late penalty is applied which is sent to the caller.\",\"returns\":{\"totalPaid\":\"The amount of collateral that the contract paid (sum of the amount paid to the Store and the caller).\"}},\"pfc()\":{\"details\":\"This overrides pfc() so the Liquidatable contract can report its profit from corruption.\"},\"redeem((uint256))\":{\"details\":\"Can only be called by a token sponsor.\",\"params\":{\"numTokens\":\"is the number of tokens to be burnt for a commensurate amount of collateral.\"}},\"requestWithdrawal((uint256))\":{\"details\":\"The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.\",\"params\":{\"collateralAmount\":\"the amount of collateral requested to withdraw\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\"},\"settleExpired()\":{\"details\":\"This Burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`.\"},\"transfer(address)\":{\"details\":\"Transferring positions can only occur if the recipient does not already have a position.\",\"params\":{\"newSponsorAddress\":\"is the address to which the position will be transferred.\"}},\"withdraw((uint256))\":{\"details\":\"Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawawal`.\",\"params\":{\"collateralAmount\":\"is the amount of collateral to withdraw\"}},\"withdrawLiquidation(uint256,address)\":{\"details\":\"If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment If the dispute FAILED: only the liquidator can receive payment Once all collateral is withdrawn, delete the liquidation data.\",\"params\":{\"liquidationId\":\"uniquely identifies the sponsor's liquidation.\",\"sponsor\":\"address of the sponsor associated with the liquidation.\"},\"returns\":{\"withdrawalAmount\":\"the total amount of underlying returned from the liquidation.\"}}}},\"userdoc\":{\"methods\":{\"cancelWithdrawal()\":{\"notice\":\"Cancels a pending withdrawal request.\"},\"create((uint256),(uint256))\":{\"notice\":\"Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`.\"},\"createLiquidation(address,(uint256),(uint256))\":{\"notice\":\"Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens.\"},\"deposit((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the sponsor's position.\"},\"dispute(uint256,address)\":{\"notice\":\"Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request.\"},\"emergencyShutdown()\":{\"notice\":\"Premature contract settlement under emergency circumstances.\"},\"expire()\":{\"notice\":\"Locks contract state in expired and requests oracle price.\"},\"getCollateral(address)\":{\"notice\":\"Accessor method for a sponsor's collateral.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"payFees()\":{\"notice\":\"Pays UMA DVM regular fees to the Store contract.\"},\"redeem((uint256))\":{\"notice\":\"Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`.\"},\"requestWithdrawal((uint256))\":{\"notice\":\"Starts a withdrawal request that, if passed, allows the sponsor to withdraw `collateralAmount` from their position.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"settleExpired()\":{\"notice\":\"After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function.\"},\"totalPositionCollateral()\":{\"notice\":\"Accessor method for the total collateral stored within the PricelessPositionManager.\"},\"transfer(address)\":{\"notice\":\"Transfers ownership of the caller's current position to `newSponsorAddress`.\"},\"withdraw((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor.\"},\"withdrawLiquidation(uint256,address)\":{\"notice\":\"After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments.\"},\"withdrawPassedRequest()\":{\"notice\":\"After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/ExpiringMultiParty.sol\":\"ExpiringMultiParty\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x63955c0414bf21fdf62cd8a18e0a58084836aa3099137330add653db999d9e77\",\"urls\":[\"bzz-raw://c667ee90d983472ca676ff2e357e58f78576045e37589f97a6aad07e946cd488\",\"dweb:/ipfs/QmVrBe716duKKXuWHXp39hgWd5T5cdQnD5cPCFZYHufT35\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xf93005a2285b10a0b7e7b53fef45c4921c5131edc80f6481848b670a37343275\",\"urls\":[\"bzz-raw://dd2db53bbd8b4c3312e274e392c3f0781c56e520f858ef77a04a075d18123625\",\"dweb:/ipfs/QmPxr5HSYVJKfzWnQpGVf4hg4kxMrCRTAw5isjkBmvsA5N\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x292293332467c5c7b70566f0027258a8f19004e969f851821a49aff9a561ed04\",\"urls\":[\"bzz-raw://310333655fb54c503cf4c1fc0218cbe2a367ef766632f4202594f8f4aa277216\",\"dweb:/ipfs/Qma6YduUK1GYww9as1u6mov1TbnMn2FSobPMBPV5TyhGUu\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x1ea9262aa640c92290496eaefe68dde2543e4582c0f7b0499b680342ce5b6d19\",\"urls\":[\"bzz-raw://e87bba4ff3007d8c02ee4a3b0464267966ff8445c107fc887b1a627241cf1c7b\",\"dweb:/ipfs/QmPkCdBf7BpeXVEpthncz2FpRvKFzjwWMHQ58ZdY3J7kXY\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x6c4c90297aee292b99eedeb39f4e65701034ef6f49642ae628d4b0ad12e9c78d\",\"urls\":[\"bzz-raw://17d100eb81c1cacd0d5b459f7a983c58a69032e6a1538ff0204744e49476ee2e\",\"dweb:/ipfs/QmTJYi7up1wVhHWbPi21XJEmw7wNwfZZLNLtjLfoKc4ewe\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/ExpiringMultiParty.sol\":{\"keccak256\":\"0xe42a439cc7996acb85e4ea91055ba3dd16284881402a5430213fb72f86e33a29\",\"urls\":[\"bzz-raw://f0c8061dca3d8710fcee7ebc6d108b2a07017901458d9ab84a8acd36851fa9cd\",\"dweb:/ipfs/QmWsUnZP2wyvcWd7recnT4GegEhSC76UFacPjxr4TaF1Zq\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/FeePayer.sol\":{\"keccak256\":\"0x4adfd51cec83bdf9cae3ed08576f7faabff7247a8382e0d8aa1af97022b32f1b\",\"urls\":[\"bzz-raw://97ec18425cccff90c9c239a3d9faf0d948ee69412c29ffc96fcb34606aecc18c\",\"dweb:/ipfs/QmYdd7nbn5PTXBwBg4Nut2upJSME3atqBNpa4hXhxY1gen\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/Liquidatable.sol\":{\"keccak256\":\"0xf4670e02fedf0a4fe28f7cebc997fd3cfe036d17ff2482eaafbceed464aa40fc\",\"urls\":[\"bzz-raw://5c354b2746423acb1955d025d369faacd18b02783896cb78dc8a9ca720a39141\",\"dweb:/ipfs/QmWBYcSckFVket7MqVoDLQkCfqEcqsCdqKe4MLjGe2ENhS\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/PricelessPositionManager.sol\":{\"keccak256\":\"0x7cd9415398499350efd611f75a0de76dbc7f277edf69998f9c6760546ac18011\",\"urls\":[\"bzz-raw://e2f2427a33c80d2f4bc9ba95d0f1ae5472dce3841a169c2b51975eb75534ca7a\",\"dweb:/ipfs/QmcUHGKFDXeXxdCRFeES1adE21xsv6qFAQ3gTgBWzs3EBQ\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/SyntheticToken.sol\":{\"keccak256\":\"0x328f819d0e87f6dc8ec322289b7f6a932d9a2f6fd4f892e5ce16d6b0c4cc8a0f\",\"urls\":[\"bzz-raw://037e87cdde8ffbef2d2013015f01ed5d4b6cc041146d2cd9977ff486d23f7d76\",\"dweb:/ipfs/QmY85B5MGfJeo7DFockSSqeNMW2SwykXkEfcPcEtc5d6q6\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/TokenFactory.sol\":{\"keccak256\":\"0xa8c5099adfeee904a136ce524b489f92ed693c3864046cb7a4f2f6910b77fdb6\",\"urls\":[\"bzz-raw://d00647fa44ed1cdb0e3d1d32c1d01de0828b5459ea5e66539515bd2a7c605fff\",\"dweb:/ipfs/QmPNhKxknMKctsBWWRSGy64UX73KhaMtn8GQSjvqgHbwpX\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0xfa1232ab562e3c279e5665745804f4ba9e62758e34d63b71b65dc92bfdd7cac9\",\"urls\":[\"bzz-raw://cc16bafaf3b1ec0a8064946c09fb918db68beaf219d6d1a431beb1b3ef01ede5\",\"dweb:/ipfs/QmZg7BxqNE82CxVm1pYViL3abRRbJgGXp5iAjvVWefzdiJ\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x1b6484df2bc4fd0cc0386acdf65b8c85918b663480f5826a08a4145fee44fdf7\",\"urls\":[\"bzz-raw://134e18e6b0c7b55a58ef432f19dc9155ab3e887a02c6df55b4d45ee21576b481\",\"dweb:/ipfs/QmZRYxk4jzvcetpsKLgqQrVT6Rf4CNxBfaFADvyzp6Df1y\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x5c98652625d064a41b0e68cf1ab557658869f9798b2535581d92377f4cea9edb\",\"urls\":[\"bzz-raw://2e58a66b95a9e5b409fce1a01b05e8b93c44b174c001c832ab29fee2933de2c3\",\"dweb:/ipfs/QmeL3hefTjvUmQtHVtVqaGU3MZuZp2aUcnBkU9GQh3NRpF\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x7ec095e4197dc4205c95619bf91e62d8efd39bf3787e9e26a200b1da8360b7a8\",\"urls\":[\"bzz-raw://33102100780930ea7c09dd946c4048e5a82020a2cc0f755478c44cbce097ec0b\",\"dweb:/ipfs/QmdYecrLnKnF47y2CCPZET2fBnzfeeh6zU9XkwVZmGG94w\"]},\"/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x199b2dedeae928a19753066a889aad1bc13c1376553f57e51163b4c9e132061a\",\"urls\":[\"bzz-raw://9e3f1f3efcd312c3e5396750a235fa429d7a9c0809bbaf5eab4428342dcff12a\",\"dweb:/ipfs/Qme9fMMduhxRhQXvBMo1mEggEf2Me9FNLFG6qGKA3bFZcj\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe4ed9d633e8e678e8ece3756e4002cc7989b72cd29a17ecdacdabf4fd48820a7\",\"urls\":[\"bzz-raw://03a55c81a7d4c93a1ca6d9b931830c1fde2799bfbbf5841321f67e7b056c36c2\",\"dweb:/ipfs/QmbcgdfB278NvzVZKjA7Jf1NjSeCCQ2277mJGL4UskyS56\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa43329c05d4d75bb1f2e952b54cd40c7c197d3923b5927e61815cdac21a14dce\",\"urls\":[\"bzz-raw://f3c6697a015140d3a341499debb51032ec681f1d7123f54a9a272086cf606bbc\",\"dweb:/ipfs/QmRT1hwHzNoCWLLDBEBRXfGNjRZZyawi2wgrtRz24B8jLa\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x060d944bc6f17414d07853a46d056bf594e5b3a7899e0e76b4520cdbe384e231\",\"urls\":[\"bzz-raw://5142118f78f0ea251eabf2d6688a04027898cb1ddfa885e27f781a2fde3a7a86\",\"dweb:/ipfs/QmQjAwm2oREFKkBEZDVod5LVPJ11ucgswnPFoZ1sZwYpTH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x694157db506e282b703e469c9e5843d8a0120947a6de6b6e8ccd8d808d037234\",\"urls\":[\"bzz-raw://e83680e0074c54c2bd7ddf1e6d73525d9c8027d43cb60706acbe12b81c4276f7\",\"dweb:/ipfs/QmZ5C4duBeYSGej3KrURVGUUMUGjFAKZdNKPRGhV2uJ67A\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dda04d1cbd7c09e7187c8d5c30074cc32f17e247adb84034c0b3e40dd96c74f\",\"urls\":[\"bzz-raw://2f06fa27e220da3d4e949b69ffc6225091ec031ad64cd5f9e9ea7c66c54304ae\",\"dweb:/ipfs/QmYBiLxdMBbhevWsGLLLSjpV92FqDVv5tB2LwiQsgwvLQz\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200511f3803806200511f83398101604081905262000034916200060a565b80806000015181602001518260400151836060015184608001518560c001518660e001518761010001518860a0015185858a80806000806101000a81548160ff02191690831515021790555080156200008c57426001555b50600280546001600160a01b038086166001600160a01b0319928316179092556003805492851692909116919091179055620000d06001600160e01b03620002f816565b600481905550620000ed60016200031560201b620029ef1760201c565b51600555505050600c889055600d87905560405163e8a0aed360e01b815281906001600160a01b0382169063e8a0aed390620001339087908790601290600401620007b8565b602060405180830381600087803b1580156200014e57600080fd5b505af115801562000163573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001899190620005c9565b600a80546001600160a01b0319166001600160a01b0392909216919091179055620001b362000354565b6001600160a01b03166390978d1b866040518263ffffffff1660e01b8152600401620001e09190620007af565b60206040518083038186803b158015620001f957600080fd5b505afa1580156200020e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002349190620005e8565b6200023e57600080fd5b84600b81905550505050505050505050506200026f60018261014001516200040560201b6200304f1790919060201c565b6200027957600080fd5b620002b76001620002a3836101a001518461018001516200042860201b62002ff41790919060201c565b6200046860201b620047e21790919060201c565b620002c157600080fd5b6101208101516011556101408101515160125561016081015151601355610180810151516014556101a001515160155550620008e0565b6000805460ff16156200030f575060015462000312565b50425b90565b6200031f62000502565b60405180602001604052806200034c670de0b6b3a7640000856200048a60201b62003a221790919060201c565b905292915050565b6003546040516302abf57960e61b81526000917f4964656e74696669657257686974656c69737400000000000000000000000000916001600160a01b039091169063aafd5e4090620003ab908490600401620007af565b60206040518083038186803b158015620003c457600080fd5b505afa158015620003d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ff9190620005c9565b91505090565b60006200041b826001600160e01b036200031516565b5183511190505b92915050565b6200043262000502565b60405180602001604052806200045f84600001518660000151620004da60201b62003ca91790919060201c565b90529392505050565b60006200047e826001600160e01b036200031516565b51835110905092915050565b6000826200049b5750600062000422565b82820282848281620004a957fe5b0414620004d35760405162461bcd60e51b8152600401620004ca906200082c565b60405180910390fd5b9392505050565b600082820183811015620004d35760405162461bcd60e51b8152600401620004ca90620007f5565b6040518060200160405280600081525090565b80516200042281620008c7565b805180151581146200042257600080fd5b600082601f83011262000544578081fd5b81516001600160401b038111156200055a578182fd5b6200056f601f8201601f19166020016200086d565b91508082528360208285010111156200058757600080fd5b6200059a81602084016020860162000894565b5092915050565b600060208284031215620005b3578081fd5b620005bf60206200086d565b9151825250919050565b600060208284031215620005db578081fd5b8151620004d381620008c7565b600060208284031215620005fa578081fd5b81518015158114620004d3578182fd5b6000602082840312156200061c578081fd5b81516001600160401b038082111562000633578283fd5b6101c091840180860383131562000648578384fd5b62000653836200086d565b6200065f878362000522565b8152602082015160208201526040820151604082015262000684876060840162000515565b606082015262000698876080840162000515565b6080820152620006ac8760a0840162000515565b60a082015260c082015160c082015260e0820151935082841115620006cf578485fd5b620006dd8785840162000533565b60e082015261010093508382015183811115620006f8578586fd5b620007068882850162000533565b85830152506101209350838201518482015261014093506200072b87858401620005a1565b8482015261016093506200074287858401620005a1565b8482015261018093506200075987858401620005a1565b848201526101a093506200077087858401620005a1565b848201528094505050505092915050565b600081518084526200079b81602086016020860162000894565b601f01601f19169290920160200192915050565b90815260200190565b600060608252620007cd606083018662000781565b8281036020840152620007e1818662000781565b91505060ff83166040830152949350505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6040518181016001600160401b03811182821017156200088c57600080fd5b604052919050565b60005b83811015620008b157818101518382015260200162000897565b83811115620008c1576000848401525b50505050565b6001600160a01b0381168114620008dd57600080fd5b50565b61482f80620008f06000396000f3fe608060405234801561001057600080fd5b50600436106102e95760003560e01c80636ba2f99211610191578063a765fbea116100e3578063d1e92c1111610097578063edfa9a9b11610071578063edfa9a9b1461053d578063f4d2115314610545578063fcccedc714610558576102e9565b8063d1e92c111461051a578063dd0eef3d1461052d578063dfe607f914610535576102e9565b8063bc121630116100c8578063bc121630146104f7578063bda02e771461050a578063c13f62e114610512576102e9565b8063a765fbea146104dc578063b9a3c84c146104ef576102e9565b80638c382eb2116101455780639f43ddd21161011f5780639f43ddd2146104ac5780639ff4dea8146104b4578063a1c4d1e7146104bc576102e9565b80638c382eb21461047c5780639381a345146104845780639b56d6c914610499576102e9565b806379599f961161017657806379599f961461045757806381a10ae11461045f57806385209ee014610467576102e9565b80636ba2f9921461043c5780637048594b1461044f576102e9565b8063360598e11161024a5780634f8c4847116101fe5780635ee0fe32116101d85780635ee0fe32146104195780635f1af1ca1461042157806362779e1514610434576102e9565b80634f8c4847146103c457806350f49846146103ee57806355f57510146103f6576102e9565b80633ee7a5ce1161022f5780633ee7a5ce146103a157806343e4771b146103b457806348e30c3f146103bc576102e9565b8063360598e114610379578063391fe4e214610399576102e9565b806322f8e566116102a15780632d5436cf116102865780632d5436cf1461036157806333a46ca2146103695780633403c2fc14610371576102e9565b806322f8e5661461034657806329cb924d14610359576102e9565b8063175d9e7c116102d2578063175d9e7c146103215780631a69523014610329578063226112801461033e576102e9565b80630c9229ca146102ee5780630de15fd91461030c575b600080fd5b6102f6610560565b604051610303919061446a565b60405180910390f35b610314610566565b60405161030391906141c6565b6102f6610582565b61033c610337366004613fc1565b610588565b005b61033c6106e4565b61033c610354366004614137565b610756565b6102f661076a565b6102f6610785565b61033c61078b565b61033c6108c9565b61038c61038736600461414f565b61099c565b604051610303919061470e565b6102f661112a565b61033c6103af3660046140a2565b611130565b61038c6111e9565b6102f661120f565b6103d76103d236600461403f565b611215565b6040516103039b9a9998979695949392919061426f565b6102f66112f7565b610409610404366004613fc1565b6112fd565b6040516103039493929190614718565b6102f6611343565b61033c61042f3660046140a2565b611349565b61038c6115b4565b61033c61044a3660046140d8565b611841565b610314611a81565b61033c611a9d565b61038c611b2a565b61046f611b57565b6040516103039190614481565b6102f6611b60565b61048c611b66565b604051610303919061445f565b61038c6104a7366004613fc1565b611b6f565b6102f6611bbf565b6102f6611bc5565b6104cf6104ca366004613fc1565b611bcb565b6040516103039190614350565b61033c6104ea36600461414f565b611d5c565b610314611f12565b61033c6105053660046140a2565b611f2e565b61033c611fb3565b6102f6611fbd565b61033c6105283660046140a2565b611fc3565b6102f661206c565b6102f6612072565b6102f6612078565b6102f6610553366004613ff9565b61207e565b61033c6125de565b60085481565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b6105906129da565b6105eb61059d60006129ef565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020908152604091829020825191820190925260039091015481526105df90612a23565b9063ffffffff612a4c16565b6105f457600080fd5b60006105ff33612a53565b9050806001015460001461061257600080fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602052604080822084548155600180860154818301556002808701548184015560038088015493810193909355338086528486208681559283018690559082018590559101839055905190917f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed8291a360405173ffffffffffffffffffffffffffffffffffffffff8316907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a25050565b6106ec6129da565b60006106f733612a53565b905080600101546000141561070b57600080fd5b600281015460405133907f74d8a3658feb89d1a5c335229bbbfc3bbcfaf492769feb7aa4cd2d92efeaf69190600090a360006001820181905561074d906129ef565b51600290910155565b60005460ff1661076557600080fd5b600155565b6000805460ff161561077f5750600154610782565b50425b90565b60115481565b6107936129da565b61079b6115b4565b5060006107a733612a53565b90506107b161076a565b816001015411156107c157600080fd5b6107c9613f4d565b5060408051602080820183526002840154825282519081019092526003830154825290610817906107f990612a23565b6040805160208101909152600285015481529063ffffffff612a8816565b1561083a5760408051602081019091526003830154815261083790612a23565b90505b6108478260030182612a8f565b610852600982612a8f565b80516002546108819173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b805160405133907fc86c3298cb79f486674dca87d9247e88b76146160e7d412cc59b26b14c358a6890600090a36108b860006129ef565b516002830155506000600190910155565b6108d16129da565b6108d9612b70565b6108e1612b8d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461091857600080fd5b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600c5461094e61076a565b600c81905561095c90612c5e565b600c5460405133917fd39eeb7157d9c446579a0893ecf9ecd87d1f466cdb270c6a189cf38ca1e30f4891610991918591614473565b60405180910390a250565b6109a4613f4d565b82826109b08282612cf6565b6109b86115b4565b5060006109c58587612d74565b600781015490915073ffffffffffffffffffffffffffffffffffffffff16331480610a095750600181015473ffffffffffffffffffffffffffffffffffffffff1633145b80610a2a5750805473ffffffffffffffffffffffffffffffffffffffff1633145b610a3357600080fd5b610a3d8686612e0b565b610a45613f4d565b604080516020810190915260068301548152610a6090612a23565b9050610a6a613f4d565b604080516020808201835260088601548252825190810190925260038501548252610aad918491610aa1919063ffffffff612fb116565b9063ffffffff612fb116565b9050610ab7613f4d565b604080516020810190915260048501548152610ad9908463ffffffff612fb116565b9050610ae3613f4d565b60408051602081019091526015548152610b03908463ffffffff612fb116565b9050610b0d613f4d565b60408051602081019091526014548152610b2d908563ffffffff612fb116565b9050610b37613f4d565b60408051602081019091526013548152610b5890859063ffffffff612fb116565b9050610b62613f4d565b604080516020810190915260098901548152610b84908863ffffffff612fb116565b90506003600189015474010000000000000000000000000000000000000000900460ff166004811115610bb357fe5b1415610e9257600788015473ffffffffffffffffffffffffffffffffffffffff16331415610c4357610be3613f4d565b610c0382610bf7878663ffffffff612ff416565b9063ffffffff612ff416565b9050610c158c8263ffffffff612ff416565b60078a0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559b50505b875473ffffffffffffffffffffffffffffffffffffffff16331415610cd157610c6a613f4d565b610c7a868863ffffffff61302616565b9050610c84613f4d565b610c94858363ffffffff612ff416565b9050610ca68d8263ffffffff612ff416565b8a547fffffffffffffffffffffffff0000000000000000000000000000000000000000168b559c5050505b600188015473ffffffffffffffffffffffffffffffffffffffff16331415610d5b57610cfb613f4d565b610d1b85610d0f898763ffffffff61302616565b9063ffffffff61302616565b9050610d2d8c8263ffffffff612ff416565b60018a0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559b50505b600788015473ffffffffffffffffffffffffffffffffffffffff16158015610d985750875473ffffffffffffffffffffffffffffffffffffffff16155b8015610dbc5750600188015473ffffffffffffffffffffffffffffffffffffffff16155b15610e8d5773ffffffffffffffffffffffffffffffffffffffff8c166000908152600f6020526040902080548e908110610df257fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b61106a565b6004600189015474010000000000000000000000000000000000000000900460ff166004811115610ebf57fe5b148015610ee55750600188015473ffffffffffffffffffffffffffffffffffffffff1633145b15610f3357610efe81610bf7878563ffffffff612ff416565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152600f602052604090208054919c50908e908110610df257fe5b60018089015474010000000000000000000000000000000000000000900460ff166004811115610f5f57fe5b148015610f855750600188015473ffffffffffffffffffffffffffffffffffffffff1633145b1561106a57610f9a858263ffffffff612ff416565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152600f602052604090208054919c50908e908110610fcf57fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b61107b8b600063ffffffff61304f16565b61108457600080fd5b61108f60108c612a8f565b8a516002546110be9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8a5160018901546040517f6b1dd0a2f9139859db0869429aa0d5042a624c6da84633f568767549a58937b0926111129233927401000000000000000000000000000000000000000090910460ff169061420d565b60405180910390a15050505050505050505092915050565b60135481565b6111386129da565b6111406115b4565b50600061114c33612a53565b9050806001015460001461115f57600080fd5b61116c8160030183612a8f565b61117581613066565b61117e57600080fd5b611189600983612a8f565b81516002546111b89173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b815160405133907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050565b6111f1613f4d565b6040805160208101909152600954815261120a90612a23565b905090565b60125481565b600f602052816000526040600020818154811061122e57fe5b6000918252602091829020600a919091020180546001820154600283015460408051808701825260038601548152815180880183526004870154815282518089018452600588015481528351808a0185526006890154815260078901548551808c01875260088b0154815286519b8c019096526009909901548a5273ffffffffffffffffffffffffffffffffffffffff9788169b508787169a507401000000000000000000000000000000000000000090960460ff16989497929691959094909391909216918b565b60105481565b6007602090815260009182526040918290208251808301845281548152600182015484518085018652600284015481528551948501909552600390920154835292909184565b60155481565b6113516129da565b6113596115b4565b50600061136533612a53565b9050806001015460001461137857600080fd5b60408051602081019091528154815261139890839063ffffffff612a8816565b156113a257600080fd5b6113aa613f4d565b6040805160208101909152825481526113ca90849063ffffffff61309c16565b90506113d4613f4d565b604080516020810190915260038401548152611400906113f390612a23565b839063ffffffff612fb116565b604080516020810190915284548152909150611422908563ffffffff612a4c16565b1561143557611430336130dd565b611494565b6114428360030182612a8f565b604080516020810190915283548152611461908563ffffffff61302616565b51835561146f600982612a8f565b6040805160208101909152600854815261148f908563ffffffff61302616565b516008555b80516002546114c39173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8351600a546114f49173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5484516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c689161154a9160040161446a565b600060405180830381600087803b15801561156457600080fd5b505af1158015611578573d6000803e3d6000fd5b505085518351604051919350915033907fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a92990600090a450505050565b6115bc613f4d565b60006115c66131aa565b905060006115d261076a565b90506115dc613f4d565b6115e4611b2a565b90506115f781600063ffffffff61322516565b156116055750610782915050565b61160d613f4d565b611615613f4d565b600480546040517f74201feb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816926374201feb9261166d9290918991899101614736565b604080518083038186803b15801561168457600080fd5b505afa158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc919061410c565b600486905590925090506116d782600063ffffffff61304f16565b1561179657815160025461170b9173ffffffffffffffffffffffffffffffffffffffff90911690879063ffffffff61323c16565b6002546040517f4933a88700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811692634933a8879261176392909116906004016141c6565b600060405180830381600087803b15801561177d57600080fd5b505af1158015611791573d6000803e3d6000fd5b505050505b6117a781600063ffffffff61304f16565b156117db5780516002546117db9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b6117eb828263ffffffff612ff416565b95506117f5613f4d565b611805878563ffffffff6132fa16565b905061183461181882610d0f60016129ef565b604080516020810190915260055481529063ffffffff612fb116565b5160055550505050505090565b6118496129da565b6118516115b4565b5061185c828261339c565b61186557600080fd5b33600090815260076020526040902060018101541561188357600080fd5b6040805160208101909152815481526118a390600063ffffffff61322516565b156118d45760405133907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a25b6118e18160030184613408565b604080516020810190915281548152611900908363ffffffff612ff416565b51815561190e600984613408565b6040805160208101909152600854815261192e908363ffffffff612ff416565b5160085582516002546119639173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5482516040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f19916119bc913391906004016141e7565b602060405180830381600087803b1580156119d657600080fd5b505af11580156119ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0e919061406a565b611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614643565b60405180910390fd5b8151835160405133907f4b82aa16e071a61de1a6b9aeec9edab0356331f8122c78683b469ac8e685dabc90600090a4505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1681565b611aa561343b565b611aad612b70565b611ab56115b4565b50600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611af230611aed613451565b61350c565b611afd600c54612c5e565b60405133907f18600820405d6cf356e3556301762ca32395e72d8c81494fa344835c9da3633d90600090a2565b611b32613f4d565b6040805160208101909152601054815261120a90611b4f90612a23565b610bf76111e9565b60065460ff1681565b60095481565b60005460ff1681565b611b77613f4d565b73ffffffffffffffffffffffffffffffffffffffff821660009081526007602090815260409182902082519182019092526003909101548152611bb990612a23565b92915050565b600c5481565b600d5481565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f60209081526040808320805482518185028101850190935280835260609492939192909184015b82821015611d515760008481526020908190206040805161016081018252600a8602909201805473ffffffffffffffffffffffffffffffffffffffff908116845260018201549081169484019490945291929083019074010000000000000000000000000000000000000000900460ff166004811115611c8c57fe5b6004811115611c9757fe5b8152600282015460208083019190915260408051808301825260038501548152818401528051808301825260048501548152606084015280518083018252600585015481526080840152805180830182526006850154815260a0840152600784015473ffffffffffffffffffffffffffffffffffffffff1660c0840152805180830182526008850154815260e084015280518083019091526009909301548352610100909101919091529082526001929092019101611c10565b505050509050919050565b8181611d6882826136a8565b611d706115b4565b506000611d7d8486612d74565b9050611d87613f4d565b604080516020810190915260068301548152611dd590611da690612a23565b60408051602080820183526013548252825190810190925260048601548252610aa1919063ffffffff612fb116565b9050611de2601082613408565b8051600254611e139173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b6001820180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740200000000000000000000000000000000000000001790556007820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556002820154611e8e90612c5e565b604080516020810190915260098301548152611eab90339061350c565b60018201548151604051339273ffffffffffffffffffffffffffffffffffffffff90811692908916917fcaca181ccad7979cf36ed4fc921e496001ab5264608f0fac7007ae1b43d3610291611f02918c9190614473565b60405180910390a4505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b611f366129da565b6000611f4133612a53565b90508060010154600014611f5457600080fd5b6000600d54611f6161076a565b019050600c54811115611f7357600080fd5b6001820181905582516002830181905560405133907fd33b726e11d2c5d38e6702b16613df0160a07f7ba5185455ee3c45d0494fab1190600090a3505050565b611fbb6129da565b565b60145481565b611fcb6129da565b611fd36115b4565b506000611fdf33612a53565b90508060010154600014611ff257600080fd5b611fff8160030183613408565b61200a600983613408565b815160025461203b9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b815160405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b60055481565b60045481565b600e5481565b60006120886115b4565b506120916129da565b600061209c85612a53565b90506120a6613f4d565b6120cc6120b8368690038601866140a2565b604080516020810190915284548152613706565b90506120d6613f4d565b6040805160208101909152835481526120f690839063ffffffff61309c16565b9050612100613f4d565b60408051602081019091526003850154815261211b90612a23565b9050612125613f4d565b61212f60006129ef565b604080516020810190915260028701548152909150612154908363ffffffff61372616565b1561217f5760408051602081019091526002860154815261217c90839063ffffffff61302616565b90505b612187613f4d565b506040805160208101909152855481526121ba826121ae83610aa1368e90038e018e6140a2565b9063ffffffff61372e16565b6121c357600080fd5b506121cc613f4d565b6121dc838563ffffffff612fb116565b90506121e6613f4d565b6121f6838663ffffffff612fb116565b9050612200613f4d565b604080516020810190915260028901548152612222908763ffffffff612fb116565b905061222c613f4d565b612234613451565b73ffffffffffffffffffffffffffffffffffffffff8e166000818152600f602090815260409182902080548351610160810185529485523392850192909252909d5092935081016001815260200161228a61076a565b81526020018a81526020018681526020018581526020016122b36122ae60016129ef565b613736565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016122df60006129ef565b815260209081018490528254600180820185556000948552938290208351600a9092020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161782559284015194810180549093169490911693909317808255604083015192939291907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008360048111156123a957fe5b021790555060608201516002820155608082015151600382015560a082015151600482015560c082015151600582015560e08201515160068201556101008201516007820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905561012082015151600882015561014090910151516009909101556124568d89868561375f565b612470601061246b868463ffffffff612ff416565b613408565b8751600a546124a19173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5488516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c68916124f79160040161446a565b600060405180830381600087803b15801561251157600080fd5b505af1158015612525573d6000803e3d6000fd5b50508251600254612558935073ffffffffffffffffffffffffffffffffffffffff1691503390309063ffffffff61318916565b893373ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff167fb936121d607177b497d6d988b46eba92e61c4d475c0cf8e27fc7d1731e2365dc8b60000151886000015188600001516040516125c69392919061474d565b60405180910390a45050505050505050509392505050565b6125e661343b565b6125ee6115b4565b50600060065460ff16600281111561260257fe5b141561260d57600080fd5b600260065460ff16600281111561262057fe5b1461266057612630600c54613856565b51600e55600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660021790555b612668613f4d565b604080516020810191829052600a547f70a082310000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff166370a082316126c633602485016141c6565b60206040518083038186803b1580156126de57600080fd5b505afa1580156126f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612716919061408a565b90529050612722613f4d565b6040805160208101909152600e54815261274390839063ffffffff612fb116565b336000908152600760209081526040808320815192830190915260038101548252929350612781919061277590612a23565b9063ffffffff61304f16565b1561285e5761278e613f4d565b6040805160208082018352600e5482528251908101909252835482526127ba919063ffffffff612fb116565b90506127c4613f4d565b6040805160208101909152600384015481526127df90612a23565b90506127e9613f4d565b6127f9838363ffffffff613a1b16565b6128125760405180602001604052806000815250612822565b612822828463ffffffff61302616565b9050612834858263ffffffff612ff416565b33600090815260076020526040812081815560018101829055600281018290556003015594505050505b612866613f4d565b604080516020810190915260095481526128899061288390612a23565b84613706565b9050612896600982612a8f565b604080516020810190915260085481526128b6908563ffffffff61302616565b5160085580516002546128e99173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8351600a5461291a9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5484516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c68916129709160040161446a565b600060405180830381600087803b15801561298a57600080fd5b505af115801561299e573d6000803e3d6000fd5b505085518351604051919350915033907f9d349c102bec959fb7f20f9a3621e015819d3ae4ed6e9afd1f56a69d5845600690600090a450505050565b600c546129e561076a565b10611fbb57600080fd5b6129f7613f4d565b604080516020810190915280612a1b84670de0b6b3a764000063ffffffff613a2216565b905292915050565b612a2b613f4d565b60408051602081019091526005548152611bb990839063ffffffff612fb116565b5190511490565b600081612a5f81613a76565b505073ffffffffffffffffffffffffffffffffffffffff16600090815260076020526040902090565b5190511190565b612a97613f4d565b612aa082613736565b604080516020810190915284548152909150612ac2908263ffffffff61302616565b519092555050565b612b6b8363a9059cbb60e01b8484604051602401612ae99291906141e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613ac6565b505050565b600060065460ff166002811115612b8357fe5b14611fbb57600080fd5b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f46696e616e6369616c436f6e74726163747341646d696e0000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b60206040518083038186803b158015612c2057600080fd5b505afa158015612c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c589190613fdd565b91505090565b6000612c68613c13565b600b546040517f68ad8ae300000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff8316916368ad8ae391612cc0918690600401614473565b600060405180830381600087803b158015612cda57600080fd5b505af1158015612cee573d6000803e3d6000fd5b505050505050565b6000612d028284612d74565b6001818101549192507401000000000000000000000000000000000000000090910460ff1690816004811115612d3457fe5b1180612d655750612d4361076a565b612d4c83613c8e565b11158015612d6557506001816004811115612d6357fe5b145b612d6e57600080fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f60205260408120805483108015612ddf57506000818481548110612db257fe5b90600052602060002090600a020160010160149054906101000a900460ff166004811115612ddc57fe5b14155b612de857600080fd5b808381548110612df457fe5b90600052602060002090600a020191505092915050565b6000612e178284612d74565b90506002600182015474010000000000000000000000000000000000000000900460ff166004811115612e4657fe5b14612e515750612fad565b612e5e8160020154613856565b516008820155612e6c613f4d565b604080516020808201835260088501548252825190810190925260038401548252612e9d919063ffffffff612fb116565b9050612ea7613f4d565b60408051602081019091526012548152612ec890839063ffffffff612fb116565b604080516020810190915260058501548152909150600090612ef0908363ffffffff61372e16565b905080612efe576004612f01565b60035b6001850180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000836004811115612f4b57fe5b02179055506001840154600785015460405173ffffffffffffffffffffffffffffffffffffffff928316928881169233927f6c5582199868fabbe697f9ea10abe481bacf53ac78c02a965b34dff82fd20e3b92611f029216908c908890614320565b5050565b612fb9613f4d565b6040805160208101909152825184518291670de0b6b3a764000091612fe39163ffffffff613a2216565b81612fea57fe5b0490529392505050565b612ffc613f4d565b604080516020810190915282518451829161301d919063ffffffff613ca916565b90529392505050565b61302e613f4d565b604080516020810190915282518451829161301d919063ffffffff613ce816565b600061305a826129ef565b51835111905092915050565b604080516020810190915260038201548152600090611bb99061308890612a23565b60408051602081019091528454815261339c565b6130a4613f4d565b604080516020810190915282518451829161301d916130d190670de0b6b3a764000063ffffffff613a2216565b9063ffffffff613d2a16565b60006130e882612a53565b604080516020808201835260038401548252825190810190925260095482529192506131199163ffffffff61302616565b5160095560408051602080820183528354825282519081019092526008548252613149919063ffffffff61302616565b516008555073ffffffffffffffffffffffffffffffffffffffff166000908152600760205260408120818155600181018290556002810182905560030155565b612d6e846323b872dd60e01b858585604051602401612ae9939291906142ef565b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f53746f72650000000000000000000000000000000000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b6000613230826129ef565b51835114905092915050565b60006132d9828573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30876040518363ffffffff1660e01b815260040161327d929190614248565b60206040518083038186803b15801561329557600080fd5b505afa1580156132a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132cd919061408a565b9063ffffffff613ca916565b9050612d6e8463095ea7b360e01b8584604051602401612ae99291906141e7565b613302613f4d565b825160009061331f90670de0b6b3a764000063ffffffff613a2216565b835190915060009061333890839063ffffffff613d2a16565b845190915060009061335190849063ffffffff613d6c16565b905080156133835760408051602081019091528061337684600163ffffffff613ca916565b8152509350505050611bb9565b6040518060200160405280838152509350505050611bb9565b60006133a6613f4d565b604080516020810190915260095481526133d8906133c390612a23565b60408051602081019091526008548152613dae565b90506133e2613f4d565b6133ec8585613dae565b90506133fe828263ffffffff612a8816565b1595945050505050565b613410613f4d565b61341982613736565b604080516020810190915284548152909150612ac2908263ffffffff612ff416565b600c5461344661076a565b1015611fbb57600080fd5b613459613f4d565b60006134636131aa565b6002546040517f5b97aadd00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff80841692635b97aadd926134bc9216906004016141c6565b60206040518083038186803b1580156134d457600080fd5b505afa1580156134e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5891906140bd565b61351d81600063ffffffff61322516565b1561352757612fad565b73ffffffffffffffffffffffffffffffffffffffff8216301461357a5780516002546135759173ffffffffffffffffffffffffffffffffffffffff909116908490309063ffffffff61318916565b6135df565b613582613f4d565b61358a611b2a565b905061359c818363ffffffff612a8816565b6135a557600080fd5b6135ad613f4d565b6135c56135b8611b2a565b849063ffffffff6132fa16565b90506135d861181882610d0f60016129ef565b5160055550505b60006135e96131aa565b82516002549192506136199173ffffffffffffffffffffffffffffffffffffffff1690839063ffffffff61323c16565b6002546040517f4933a88700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811692634933a8879261367192909116906004016141c6565b600060405180830381600087803b15801561368b57600080fd5b505af115801561369f573d6000803e3d6000fd5b50505050505050565b60006136b48284612d74565b90506136bf81613c8e565b6136c761076a565b1080156136fd575060018082015474010000000000000000000000000000000000000000900460ff1660048111156136fb57fe5b145b612b6b57600080fd5b61370e613f4d565b815183511061371d578161371f565b825b9392505050565b519051111590565b519051101590565b61373e613f4d565b60408051602081019091526005548152611bb990839063ffffffff61309c16565b600061376a85612a53565b60408051602081019091528154815290915061378d90859063ffffffff612a4c16565b80156137b557506040805160208101909152600382015481526137b59084906105df90612a23565b156137c9576137c3856130dd565b50612d6e565b6137d68160030184612a8f565b6040805160208101909152815481526137f5908563ffffffff61302616565b51815560408051602081019091526002820154815261381a908363ffffffff61302616565b51600282015561382b600984612a8f565b6040805160208101909152600854815261384b908563ffffffff61302616565b516008555050505050565b61385e613f4d565b6000613868613c13565b600b546040517fa03e881a00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff83169163a03e881a916138c0918790600401614473565b60206040518083038186803b1580156138d857600080fd5b505afa1580156138ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613910919061406a565b613946576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614589565b600b546040517fc9280f0600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff84169163c9280f069161399e918890600401614473565b60206040518083038186803b1580156139b657600080fd5b505afa1580156139ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ee919061408a565b905060008112156139fd575060005b6040518060200160405280613a1183613dec565b9052949350505050565b5190511090565b600082613a3157506000611bb9565b82820282848281613a3e57fe5b041461371f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906145e6565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602090815260408083208151928301909152600301548152613aba919061277590612a23565b613ac357600080fd5b50565b613ae58273ffffffffffffffffffffffffffffffffffffffff16613e2c565b613b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906146d7565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051613b4491906141aa565b6000604051808303816000865af19150503d8060008114613b81576040519150601f19603f3d011682016040523d82523d6000602084013e613b86565b606091505b509150915081613bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614554565b805115612d6e5780806020019051810190613bdd919061406a565b612d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449061467a565b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f4f7261636c6500000000000000000000000000000000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b6000611bb96011548360020154613ca990919063ffffffff16565b60008282018381101561371f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906144e6565b600061371f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613e68565b600061371f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613eae565b600061371f83836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250613eff565b613db6613f4d565b613dc782600063ffffffff61304f16565b613ddc57613dd560006129ef565b9050611bb9565b613dd5838363ffffffff61309c16565b600080821215613e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449061451d565b5090565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590613e6057508115155b949350505050565b60008184841115613ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b505050900390565b60008183613ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b506000838581613ef557fe5b0495945050505050565b60008183613f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b50828481613f4457fe5b06949350505050565b6040518060200160405280600081525090565b600060208284031215613f71578081fd5b50919050565b600060208284031215613f88578081fd5b613f926020614763565b9135825250919050565b600060208284031215613fad578081fd5b613fb76020614763565b9151825250919050565b600060208284031215613fd2578081fd5b813561371f816147c0565b600060208284031215613fee578081fd5b815161371f816147c0565b60008060006060848603121561400d578182fd5b8335614018816147c0565b92506140278560208601613f60565b91506140368560408601613f60565b90509250925092565b60008060408385031215614051578182fd5b823561405c816147c0565b946020939093013593505050565b60006020828403121561407b578081fd5b8151801515811461371f578182fd5b60006020828403121561409b578081fd5b5051919050565b6000602082840312156140b3578081fd5b61371f8383613f77565b6000602082840312156140ce578081fd5b61371f8383613f9c565b600080604083850312156140ea578182fd5b6140f48484613f77565b91506141038460208501613f77565b90509250929050565b6000806040838503121561411e578182fd5b6141288484613f9c565b91506141038460208501613f9c565b600060208284031215614148578081fd5b5035919050565b60008060408385031215614161578182fd5b823591506020830135614173816147c0565b809150509250929050565b73ffffffffffffffffffffffffffffffffffffffff169052565b6141a1816147b6565b9052565b519052565b600082516141bc81846020870161478a565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff84168152602081018390526060810161423a836147b6565b826040830152949350505050565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff8c811682528b811660208301526101608201906142a08c6147b6565b604083019b909b52606082019990995296516080880152945160a0870152925160c0860152905160e0850152909416610100830152925161012082015291516101409092019190915292915050565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff93909316835260208301919091521515604082015260600190565b602080825282518282018190526000919060409081850190868401855b8281101561445257815161438285825161417e565b868101516143928887018261417e565b50858101516143a387870182614198565b50606081810151908601526080808201516143c0828801826141a5565b505060a0808201516143d4828801826141a5565b505060c0808201516143e8828801826141a5565b505060e0808201516143fc828801826141a5565b5050610100808201516144118288018261417e565b505061012080820151614426828801826141a5565b50506101408082015161443b828801826141a5565b50505061016093909301929085019060010161436d565b5091979650505050505050565b901515815260200190565b90815260200190565b918252602082015260400190565b602081016003831061448f57fe5b91905290565b60006020825282518060208401526144b481604085016020870161478a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201527f55696e7420756e646572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252602e908201527f43616e206f6e6c79206765742061207072696365206f6e63652074686520445660408201527f4d20686173207265736f6c766564000000000000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f4d696e74696e672073796e74686574696320746f6b656e73206661696c656400604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604082015260600190565b9051815260200190565b93518452602084019290925251604083015251606082015260800190565b928352602083019190915251604082015260600190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561478257600080fd5b604052919050565b60005b838110156147a557818101518382015260200161478d565b83811115612d6e5750506000910152565b60058110613ac357fe5b73ffffffffffffffffffffffffffffffffffffffff81168114613ac357600080fd5b60006147ed826129ef565b5183511090509291505056fea2646970667358221220085c589ea498b9d3acfcc41a288a39de415c93cdd4f85897e9c88afc860906cc64736f6c63430006040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102e95760003560e01c80636ba2f99211610191578063a765fbea116100e3578063d1e92c1111610097578063edfa9a9b11610071578063edfa9a9b1461053d578063f4d2115314610545578063fcccedc714610558576102e9565b8063d1e92c111461051a578063dd0eef3d1461052d578063dfe607f914610535576102e9565b8063bc121630116100c8578063bc121630146104f7578063bda02e771461050a578063c13f62e114610512576102e9565b8063a765fbea146104dc578063b9a3c84c146104ef576102e9565b80638c382eb2116101455780639f43ddd21161011f5780639f43ddd2146104ac5780639ff4dea8146104b4578063a1c4d1e7146104bc576102e9565b80638c382eb21461047c5780639381a345146104845780639b56d6c914610499576102e9565b806379599f961161017657806379599f961461045757806381a10ae11461045f57806385209ee014610467576102e9565b80636ba2f9921461043c5780637048594b1461044f576102e9565b8063360598e11161024a5780634f8c4847116101fe5780635ee0fe32116101d85780635ee0fe32146104195780635f1af1ca1461042157806362779e1514610434576102e9565b80634f8c4847146103c457806350f49846146103ee57806355f57510146103f6576102e9565b80633ee7a5ce1161022f5780633ee7a5ce146103a157806343e4771b146103b457806348e30c3f146103bc576102e9565b8063360598e114610379578063391fe4e214610399576102e9565b806322f8e566116102a15780632d5436cf116102865780632d5436cf1461036157806333a46ca2146103695780633403c2fc14610371576102e9565b806322f8e5661461034657806329cb924d14610359576102e9565b8063175d9e7c116102d2578063175d9e7c146103215780631a69523014610329578063226112801461033e576102e9565b80630c9229ca146102ee5780630de15fd91461030c575b600080fd5b6102f6610560565b604051610303919061446a565b60405180910390f35b610314610566565b60405161030391906141c6565b6102f6610582565b61033c610337366004613fc1565b610588565b005b61033c6106e4565b61033c610354366004614137565b610756565b6102f661076a565b6102f6610785565b61033c61078b565b61033c6108c9565b61038c61038736600461414f565b61099c565b604051610303919061470e565b6102f661112a565b61033c6103af3660046140a2565b611130565b61038c6111e9565b6102f661120f565b6103d76103d236600461403f565b611215565b6040516103039b9a9998979695949392919061426f565b6102f66112f7565b610409610404366004613fc1565b6112fd565b6040516103039493929190614718565b6102f6611343565b61033c61042f3660046140a2565b611349565b61038c6115b4565b61033c61044a3660046140d8565b611841565b610314611a81565b61033c611a9d565b61038c611b2a565b61046f611b57565b6040516103039190614481565b6102f6611b60565b61048c611b66565b604051610303919061445f565b61038c6104a7366004613fc1565b611b6f565b6102f6611bbf565b6102f6611bc5565b6104cf6104ca366004613fc1565b611bcb565b6040516103039190614350565b61033c6104ea36600461414f565b611d5c565b610314611f12565b61033c6105053660046140a2565b611f2e565b61033c611fb3565b6102f6611fbd565b61033c6105283660046140a2565b611fc3565b6102f661206c565b6102f6612072565b6102f6612078565b6102f6610553366004613ff9565b61207e565b61033c6125de565b60085481565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b6105906129da565b6105eb61059d60006129ef565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020908152604091829020825191820190925260039091015481526105df90612a23565b9063ffffffff612a4c16565b6105f457600080fd5b60006105ff33612a53565b9050806001015460001461061257600080fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602052604080822084548155600180860154818301556002808701548184015560038088015493810193909355338086528486208681559283018690559082018590559101839055905190917f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed8291a360405173ffffffffffffffffffffffffffffffffffffffff8316907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a25050565b6106ec6129da565b60006106f733612a53565b905080600101546000141561070b57600080fd5b600281015460405133907f74d8a3658feb89d1a5c335229bbbfc3bbcfaf492769feb7aa4cd2d92efeaf69190600090a360006001820181905561074d906129ef565b51600290910155565b60005460ff1661076557600080fd5b600155565b6000805460ff161561077f5750600154610782565b50425b90565b60115481565b6107936129da565b61079b6115b4565b5060006107a733612a53565b90506107b161076a565b816001015411156107c157600080fd5b6107c9613f4d565b5060408051602080820183526002840154825282519081019092526003830154825290610817906107f990612a23565b6040805160208101909152600285015481529063ffffffff612a8816565b1561083a5760408051602081019091526003830154815261083790612a23565b90505b6108478260030182612a8f565b610852600982612a8f565b80516002546108819173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b805160405133907fc86c3298cb79f486674dca87d9247e88b76146160e7d412cc59b26b14c358a6890600090a36108b860006129ef565b516002830155506000600190910155565b6108d16129da565b6108d9612b70565b6108e1612b8d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461091857600080fd5b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600c5461094e61076a565b600c81905561095c90612c5e565b600c5460405133917fd39eeb7157d9c446579a0893ecf9ecd87d1f466cdb270c6a189cf38ca1e30f4891610991918591614473565b60405180910390a250565b6109a4613f4d565b82826109b08282612cf6565b6109b86115b4565b5060006109c58587612d74565b600781015490915073ffffffffffffffffffffffffffffffffffffffff16331480610a095750600181015473ffffffffffffffffffffffffffffffffffffffff1633145b80610a2a5750805473ffffffffffffffffffffffffffffffffffffffff1633145b610a3357600080fd5b610a3d8686612e0b565b610a45613f4d565b604080516020810190915260068301548152610a6090612a23565b9050610a6a613f4d565b604080516020808201835260088601548252825190810190925260038501548252610aad918491610aa1919063ffffffff612fb116565b9063ffffffff612fb116565b9050610ab7613f4d565b604080516020810190915260048501548152610ad9908463ffffffff612fb116565b9050610ae3613f4d565b60408051602081019091526015548152610b03908463ffffffff612fb116565b9050610b0d613f4d565b60408051602081019091526014548152610b2d908563ffffffff612fb116565b9050610b37613f4d565b60408051602081019091526013548152610b5890859063ffffffff612fb116565b9050610b62613f4d565b604080516020810190915260098901548152610b84908863ffffffff612fb116565b90506003600189015474010000000000000000000000000000000000000000900460ff166004811115610bb357fe5b1415610e9257600788015473ffffffffffffffffffffffffffffffffffffffff16331415610c4357610be3613f4d565b610c0382610bf7878663ffffffff612ff416565b9063ffffffff612ff416565b9050610c158c8263ffffffff612ff416565b60078a0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559b50505b875473ffffffffffffffffffffffffffffffffffffffff16331415610cd157610c6a613f4d565b610c7a868863ffffffff61302616565b9050610c84613f4d565b610c94858363ffffffff612ff416565b9050610ca68d8263ffffffff612ff416565b8a547fffffffffffffffffffffffff0000000000000000000000000000000000000000168b559c5050505b600188015473ffffffffffffffffffffffffffffffffffffffff16331415610d5b57610cfb613f4d565b610d1b85610d0f898763ffffffff61302616565b9063ffffffff61302616565b9050610d2d8c8263ffffffff612ff416565b60018a0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559b50505b600788015473ffffffffffffffffffffffffffffffffffffffff16158015610d985750875473ffffffffffffffffffffffffffffffffffffffff16155b8015610dbc5750600188015473ffffffffffffffffffffffffffffffffffffffff16155b15610e8d5773ffffffffffffffffffffffffffffffffffffffff8c166000908152600f6020526040902080548e908110610df257fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b61106a565b6004600189015474010000000000000000000000000000000000000000900460ff166004811115610ebf57fe5b148015610ee55750600188015473ffffffffffffffffffffffffffffffffffffffff1633145b15610f3357610efe81610bf7878563ffffffff612ff416565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152600f602052604090208054919c50908e908110610df257fe5b60018089015474010000000000000000000000000000000000000000900460ff166004811115610f5f57fe5b148015610f855750600188015473ffffffffffffffffffffffffffffffffffffffff1633145b1561106a57610f9a858263ffffffff612ff416565b73ffffffffffffffffffffffffffffffffffffffff8d166000908152600f602052604090208054919c50908e908110610fcf57fe5b600091825260208220600a9091020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556002820183905560038201839055600482018390556005820183905560068201839055600782018054909116905560088101829055600901555b61107b8b600063ffffffff61304f16565b61108457600080fd5b61108f60108c612a8f565b8a516002546110be9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8a5160018901546040517f6b1dd0a2f9139859db0869429aa0d5042a624c6da84633f568767549a58937b0926111129233927401000000000000000000000000000000000000000090910460ff169061420d565b60405180910390a15050505050505050505092915050565b60135481565b6111386129da565b6111406115b4565b50600061114c33612a53565b9050806001015460001461115f57600080fd5b61116c8160030183612a8f565b61117581613066565b61117e57600080fd5b611189600983612a8f565b81516002546111b89173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b815160405133907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050565b6111f1613f4d565b6040805160208101909152600954815261120a90612a23565b905090565b60125481565b600f602052816000526040600020818154811061122e57fe5b6000918252602091829020600a919091020180546001820154600283015460408051808701825260038601548152815180880183526004870154815282518089018452600588015481528351808a0185526006890154815260078901548551808c01875260088b0154815286519b8c019096526009909901548a5273ffffffffffffffffffffffffffffffffffffffff9788169b508787169a507401000000000000000000000000000000000000000090960460ff16989497929691959094909391909216918b565b60105481565b6007602090815260009182526040918290208251808301845281548152600182015484518085018652600284015481528551948501909552600390920154835292909184565b60155481565b6113516129da565b6113596115b4565b50600061136533612a53565b9050806001015460001461137857600080fd5b60408051602081019091528154815261139890839063ffffffff612a8816565b156113a257600080fd5b6113aa613f4d565b6040805160208101909152825481526113ca90849063ffffffff61309c16565b90506113d4613f4d565b604080516020810190915260038401548152611400906113f390612a23565b839063ffffffff612fb116565b604080516020810190915284548152909150611422908563ffffffff612a4c16565b1561143557611430336130dd565b611494565b6114428360030182612a8f565b604080516020810190915283548152611461908563ffffffff61302616565b51835561146f600982612a8f565b6040805160208101909152600854815261148f908563ffffffff61302616565b516008555b80516002546114c39173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8351600a546114f49173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5484516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c689161154a9160040161446a565b600060405180830381600087803b15801561156457600080fd5b505af1158015611578573d6000803e3d6000fd5b505085518351604051919350915033907fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a92990600090a450505050565b6115bc613f4d565b60006115c66131aa565b905060006115d261076a565b90506115dc613f4d565b6115e4611b2a565b90506115f781600063ffffffff61322516565b156116055750610782915050565b61160d613f4d565b611615613f4d565b600480546040517f74201feb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816926374201feb9261166d9290918991899101614736565b604080518083038186803b15801561168457600080fd5b505afa158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc919061410c565b600486905590925090506116d782600063ffffffff61304f16565b1561179657815160025461170b9173ffffffffffffffffffffffffffffffffffffffff90911690879063ffffffff61323c16565b6002546040517f4933a88700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811692634933a8879261176392909116906004016141c6565b600060405180830381600087803b15801561177d57600080fd5b505af1158015611791573d6000803e3d6000fd5b505050505b6117a781600063ffffffff61304f16565b156117db5780516002546117db9173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b6117eb828263ffffffff612ff416565b95506117f5613f4d565b611805878563ffffffff6132fa16565b905061183461181882610d0f60016129ef565b604080516020810190915260055481529063ffffffff612fb116565b5160055550505050505090565b6118496129da565b6118516115b4565b5061185c828261339c565b61186557600080fd5b33600090815260076020526040902060018101541561188357600080fd5b6040805160208101909152815481526118a390600063ffffffff61322516565b156118d45760405133907ff60993fa76f94c9e0a803526ee6e1314814ed4d2b0d223febf1436b36897fb3790600090a25b6118e18160030184613408565b604080516020810190915281548152611900908363ffffffff612ff416565b51815561190e600984613408565b6040805160208101909152600854815261192e908363ffffffff612ff416565b5160085582516002546119639173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5482516040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f19916119bc913391906004016141e7565b602060405180830381600087803b1580156119d657600080fd5b505af11580156119ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0e919061406a565b611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614643565b60405180910390fd5b8151835160405133907f4b82aa16e071a61de1a6b9aeec9edab0356331f8122c78683b469ac8e685dabc90600090a4505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1681565b611aa561343b565b611aad612b70565b611ab56115b4565b50600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611af230611aed613451565b61350c565b611afd600c54612c5e565b60405133907f18600820405d6cf356e3556301762ca32395e72d8c81494fa344835c9da3633d90600090a2565b611b32613f4d565b6040805160208101909152601054815261120a90611b4f90612a23565b610bf76111e9565b60065460ff1681565b60095481565b60005460ff1681565b611b77613f4d565b73ffffffffffffffffffffffffffffffffffffffff821660009081526007602090815260409182902082519182019092526003909101548152611bb990612a23565b92915050565b600c5481565b600d5481565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f60209081526040808320805482518185028101850190935280835260609492939192909184015b82821015611d515760008481526020908190206040805161016081018252600a8602909201805473ffffffffffffffffffffffffffffffffffffffff908116845260018201549081169484019490945291929083019074010000000000000000000000000000000000000000900460ff166004811115611c8c57fe5b6004811115611c9757fe5b8152600282015460208083019190915260408051808301825260038501548152818401528051808301825260048501548152606084015280518083018252600585015481526080840152805180830182526006850154815260a0840152600784015473ffffffffffffffffffffffffffffffffffffffff1660c0840152805180830182526008850154815260e084015280518083019091526009909301548352610100909101919091529082526001929092019101611c10565b505050509050919050565b8181611d6882826136a8565b611d706115b4565b506000611d7d8486612d74565b9050611d87613f4d565b604080516020810190915260068301548152611dd590611da690612a23565b60408051602080820183526013548252825190810190925260048601548252610aa1919063ffffffff612fb116565b9050611de2601082613408565b8051600254611e139173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b6001820180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740200000000000000000000000000000000000000001790556007820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556002820154611e8e90612c5e565b604080516020810190915260098301548152611eab90339061350c565b60018201548151604051339273ffffffffffffffffffffffffffffffffffffffff90811692908916917fcaca181ccad7979cf36ed4fc921e496001ab5264608f0fac7007ae1b43d3610291611f02918c9190614473565b60405180910390a4505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b611f366129da565b6000611f4133612a53565b90508060010154600014611f5457600080fd5b6000600d54611f6161076a565b019050600c54811115611f7357600080fd5b6001820181905582516002830181905560405133907fd33b726e11d2c5d38e6702b16613df0160a07f7ba5185455ee3c45d0494fab1190600090a3505050565b611fbb6129da565b565b60145481565b611fcb6129da565b611fd36115b4565b506000611fdf33612a53565b90508060010154600014611ff257600080fd5b611fff8160030183613408565b61200a600983613408565b815160025461203b9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b815160405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b60055481565b60045481565b600e5481565b60006120886115b4565b506120916129da565b600061209c85612a53565b90506120a6613f4d565b6120cc6120b8368690038601866140a2565b604080516020810190915284548152613706565b90506120d6613f4d565b6040805160208101909152835481526120f690839063ffffffff61309c16565b9050612100613f4d565b60408051602081019091526003850154815261211b90612a23565b9050612125613f4d565b61212f60006129ef565b604080516020810190915260028701548152909150612154908363ffffffff61372616565b1561217f5760408051602081019091526002860154815261217c90839063ffffffff61302616565b90505b612187613f4d565b506040805160208101909152855481526121ba826121ae83610aa1368e90038e018e6140a2565b9063ffffffff61372e16565b6121c357600080fd5b506121cc613f4d565b6121dc838563ffffffff612fb116565b90506121e6613f4d565b6121f6838663ffffffff612fb116565b9050612200613f4d565b604080516020810190915260028901548152612222908763ffffffff612fb116565b905061222c613f4d565b612234613451565b73ffffffffffffffffffffffffffffffffffffffff8e166000818152600f602090815260409182902080548351610160810185529485523392850192909252909d5092935081016001815260200161228a61076a565b81526020018a81526020018681526020018581526020016122b36122ae60016129ef565b613736565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016122df60006129ef565b815260209081018490528254600180820185556000948552938290208351600a9092020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161782559284015194810180549093169490911693909317808255604083015192939291907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008360048111156123a957fe5b021790555060608201516002820155608082015151600382015560a082015151600482015560c082015151600582015560e08201515160068201556101008201516007820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905561012082015151600882015561014090910151516009909101556124568d89868561375f565b612470601061246b868463ffffffff612ff416565b613408565b8751600a546124a19173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5488516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c68916124f79160040161446a565b600060405180830381600087803b15801561251157600080fd5b505af1158015612525573d6000803e3d6000fd5b50508251600254612558935073ffffffffffffffffffffffffffffffffffffffff1691503390309063ffffffff61318916565b893373ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff167fb936121d607177b497d6d988b46eba92e61c4d475c0cf8e27fc7d1731e2365dc8b60000151886000015188600001516040516125c69392919061474d565b60405180910390a45050505050505050509392505050565b6125e661343b565b6125ee6115b4565b50600060065460ff16600281111561260257fe5b141561260d57600080fd5b600260065460ff16600281111561262057fe5b1461266057612630600c54613856565b51600e55600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660021790555b612668613f4d565b604080516020810191829052600a547f70a082310000000000000000000000000000000000000000000000000000000090925290819073ffffffffffffffffffffffffffffffffffffffff166370a082316126c633602485016141c6565b60206040518083038186803b1580156126de57600080fd5b505afa1580156126f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612716919061408a565b90529050612722613f4d565b6040805160208101909152600e54815261274390839063ffffffff612fb116565b336000908152600760209081526040808320815192830190915260038101548252929350612781919061277590612a23565b9063ffffffff61304f16565b1561285e5761278e613f4d565b6040805160208082018352600e5482528251908101909252835482526127ba919063ffffffff612fb116565b90506127c4613f4d565b6040805160208101909152600384015481526127df90612a23565b90506127e9613f4d565b6127f9838363ffffffff613a1b16565b6128125760405180602001604052806000815250612822565b612822828463ffffffff61302616565b9050612834858263ffffffff612ff416565b33600090815260076020526040812081815560018101829055600281018290556003015594505050505b612866613f4d565b604080516020810190915260095481526128899061288390612a23565b84613706565b9050612896600982612a8f565b604080516020810190915260085481526128b6908563ffffffff61302616565b5160085580516002546128e99173ffffffffffffffffffffffffffffffffffffffff90911690339063ffffffff612aca16565b8351600a5461291a9173ffffffffffffffffffffffffffffffffffffffff909116903390309063ffffffff61318916565b600a5484516040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c68916129709160040161446a565b600060405180830381600087803b15801561298a57600080fd5b505af115801561299e573d6000803e3d6000fd5b505085518351604051919350915033907f9d349c102bec959fb7f20f9a3621e015819d3ae4ed6e9afd1f56a69d5845600690600090a450505050565b600c546129e561076a565b10611fbb57600080fd5b6129f7613f4d565b604080516020810190915280612a1b84670de0b6b3a764000063ffffffff613a2216565b905292915050565b612a2b613f4d565b60408051602081019091526005548152611bb990839063ffffffff612fb116565b5190511490565b600081612a5f81613a76565b505073ffffffffffffffffffffffffffffffffffffffff16600090815260076020526040902090565b5190511190565b612a97613f4d565b612aa082613736565b604080516020810190915284548152909150612ac2908263ffffffff61302616565b519092555050565b612b6b8363a9059cbb60e01b8484604051602401612ae99291906141e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613ac6565b505050565b600060065460ff166002811115612b8357fe5b14611fbb57600080fd5b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f46696e616e6369616c436f6e74726163747341646d696e0000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b60206040518083038186803b158015612c2057600080fd5b505afa158015612c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c589190613fdd565b91505090565b6000612c68613c13565b600b546040517f68ad8ae300000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff8316916368ad8ae391612cc0918690600401614473565b600060405180830381600087803b158015612cda57600080fd5b505af1158015612cee573d6000803e3d6000fd5b505050505050565b6000612d028284612d74565b6001818101549192507401000000000000000000000000000000000000000090910460ff1690816004811115612d3457fe5b1180612d655750612d4361076a565b612d4c83613c8e565b11158015612d6557506001816004811115612d6357fe5b145b612d6e57600080fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f60205260408120805483108015612ddf57506000818481548110612db257fe5b90600052602060002090600a020160010160149054906101000a900460ff166004811115612ddc57fe5b14155b612de857600080fd5b808381548110612df457fe5b90600052602060002090600a020191505092915050565b6000612e178284612d74565b90506002600182015474010000000000000000000000000000000000000000900460ff166004811115612e4657fe5b14612e515750612fad565b612e5e8160020154613856565b516008820155612e6c613f4d565b604080516020808201835260088501548252825190810190925260038401548252612e9d919063ffffffff612fb116565b9050612ea7613f4d565b60408051602081019091526012548152612ec890839063ffffffff612fb116565b604080516020810190915260058501548152909150600090612ef0908363ffffffff61372e16565b905080612efe576004612f01565b60035b6001850180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000836004811115612f4b57fe5b02179055506001840154600785015460405173ffffffffffffffffffffffffffffffffffffffff928316928881169233927f6c5582199868fabbe697f9ea10abe481bacf53ac78c02a965b34dff82fd20e3b92611f029216908c908890614320565b5050565b612fb9613f4d565b6040805160208101909152825184518291670de0b6b3a764000091612fe39163ffffffff613a2216565b81612fea57fe5b0490529392505050565b612ffc613f4d565b604080516020810190915282518451829161301d919063ffffffff613ca916565b90529392505050565b61302e613f4d565b604080516020810190915282518451829161301d919063ffffffff613ce816565b600061305a826129ef565b51835111905092915050565b604080516020810190915260038201548152600090611bb99061308890612a23565b60408051602081019091528454815261339c565b6130a4613f4d565b604080516020810190915282518451829161301d916130d190670de0b6b3a764000063ffffffff613a2216565b9063ffffffff613d2a16565b60006130e882612a53565b604080516020808201835260038401548252825190810190925260095482529192506131199163ffffffff61302616565b5160095560408051602080820183528354825282519081019092526008548252613149919063ffffffff61302616565b516008555073ffffffffffffffffffffffffffffffffffffffff166000908152600760205260408120818155600181018290556002810182905560030155565b612d6e846323b872dd60e01b858585604051602401612ae9939291906142ef565b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f53746f72650000000000000000000000000000000000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b6000613230826129ef565b51835114905092915050565b60006132d9828573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30876040518363ffffffff1660e01b815260040161327d929190614248565b60206040518083038186803b15801561329557600080fd5b505afa1580156132a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132cd919061408a565b9063ffffffff613ca916565b9050612d6e8463095ea7b360e01b8584604051602401612ae99291906141e7565b613302613f4d565b825160009061331f90670de0b6b3a764000063ffffffff613a2216565b835190915060009061333890839063ffffffff613d2a16565b845190915060009061335190849063ffffffff613d6c16565b905080156133835760408051602081019091528061337684600163ffffffff613ca916565b8152509350505050611bb9565b6040518060200160405280838152509350505050611bb9565b60006133a6613f4d565b604080516020810190915260095481526133d8906133c390612a23565b60408051602081019091526008548152613dae565b90506133e2613f4d565b6133ec8585613dae565b90506133fe828263ffffffff612a8816565b1595945050505050565b613410613f4d565b61341982613736565b604080516020810190915284548152909150612ac2908263ffffffff612ff416565b600c5461344661076a565b1015611fbb57600080fd5b613459613f4d565b60006134636131aa565b6002546040517f5b97aadd00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff80841692635b97aadd926134bc9216906004016141c6565b60206040518083038186803b1580156134d457600080fd5b505afa1580156134e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5891906140bd565b61351d81600063ffffffff61322516565b1561352757612fad565b73ffffffffffffffffffffffffffffffffffffffff8216301461357a5780516002546135759173ffffffffffffffffffffffffffffffffffffffff909116908490309063ffffffff61318916565b6135df565b613582613f4d565b61358a611b2a565b905061359c818363ffffffff612a8816565b6135a557600080fd5b6135ad613f4d565b6135c56135b8611b2a565b849063ffffffff6132fa16565b90506135d861181882610d0f60016129ef565b5160055550505b60006135e96131aa565b82516002549192506136199173ffffffffffffffffffffffffffffffffffffffff1690839063ffffffff61323c16565b6002546040517f4933a88700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811692634933a8879261367192909116906004016141c6565b600060405180830381600087803b15801561368b57600080fd5b505af115801561369f573d6000803e3d6000fd5b50505050505050565b60006136b48284612d74565b90506136bf81613c8e565b6136c761076a565b1080156136fd575060018082015474010000000000000000000000000000000000000000900460ff1660048111156136fb57fe5b145b612b6b57600080fd5b61370e613f4d565b815183511061371d578161371f565b825b9392505050565b519051111590565b519051101590565b61373e613f4d565b60408051602081019091526005548152611bb990839063ffffffff61309c16565b600061376a85612a53565b60408051602081019091528154815290915061378d90859063ffffffff612a4c16565b80156137b557506040805160208101909152600382015481526137b59084906105df90612a23565b156137c9576137c3856130dd565b50612d6e565b6137d68160030184612a8f565b6040805160208101909152815481526137f5908563ffffffff61302616565b51815560408051602081019091526002820154815261381a908363ffffffff61302616565b51600282015561382b600984612a8f565b6040805160208101909152600854815261384b908563ffffffff61302616565b516008555050505050565b61385e613f4d565b6000613868613c13565b600b546040517fa03e881a00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff83169163a03e881a916138c0918790600401614473565b60206040518083038186803b1580156138d857600080fd5b505afa1580156138ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613910919061406a565b613946576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614589565b600b546040517fc9280f0600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff84169163c9280f069161399e918890600401614473565b60206040518083038186803b1580156139b657600080fd5b505afa1580156139ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ee919061408a565b905060008112156139fd575060005b6040518060200160405280613a1183613dec565b9052949350505050565b5190511090565b600082613a3157506000611bb9565b82820282848281613a3e57fe5b041461371f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906145e6565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602090815260408083208151928301909152600301548152613aba919061277590612a23565b613ac357600080fd5b50565b613ae58273ffffffffffffffffffffffffffffffffffffffff16613e2c565b613b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906146d7565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051613b4491906141aa565b6000604051808303816000865af19150503d8060008114613b81576040519150601f19603f3d011682016040523d82523d6000602084013e613b86565b606091505b509150915081613bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490614554565b805115612d6e5780806020019051810190613bdd919061406a565b612d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449061467a565b6003546040517faafd5e400000000000000000000000000000000000000000000000000000000081526000917f4f7261636c6500000000000000000000000000000000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff9091169063aafd5e4090612c0890849060040161446a565b6000611bb96011548360020154613ca990919063ffffffff16565b60008282018381101561371f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906144e6565b600061371f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613e68565b600061371f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613eae565b600061371f83836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250613eff565b613db6613f4d565b613dc782600063ffffffff61304f16565b613ddc57613dd560006129ef565b9050611bb9565b613dd5838363ffffffff61309c16565b600080821215613e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449061451d565b5090565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590613e6057508115155b949350505050565b60008184841115613ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b505050900390565b60008183613ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b506000838581613ef557fe5b0495945050505050565b60008183613f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a449190614495565b50828481613f4457fe5b06949350505050565b6040518060200160405280600081525090565b600060208284031215613f71578081fd5b50919050565b600060208284031215613f88578081fd5b613f926020614763565b9135825250919050565b600060208284031215613fad578081fd5b613fb76020614763565b9151825250919050565b600060208284031215613fd2578081fd5b813561371f816147c0565b600060208284031215613fee578081fd5b815161371f816147c0565b60008060006060848603121561400d578182fd5b8335614018816147c0565b92506140278560208601613f60565b91506140368560408601613f60565b90509250925092565b60008060408385031215614051578182fd5b823561405c816147c0565b946020939093013593505050565b60006020828403121561407b578081fd5b8151801515811461371f578182fd5b60006020828403121561409b578081fd5b5051919050565b6000602082840312156140b3578081fd5b61371f8383613f77565b6000602082840312156140ce578081fd5b61371f8383613f9c565b600080604083850312156140ea578182fd5b6140f48484613f77565b91506141038460208501613f77565b90509250929050565b6000806040838503121561411e578182fd5b6141288484613f9c565b91506141038460208501613f9c565b600060208284031215614148578081fd5b5035919050565b60008060408385031215614161578182fd5b823591506020830135614173816147c0565b809150509250929050565b73ffffffffffffffffffffffffffffffffffffffff169052565b6141a1816147b6565b9052565b519052565b600082516141bc81846020870161478a565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff84168152602081018390526060810161423a836147b6565b826040830152949350505050565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff8c811682528b811660208301526101608201906142a08c6147b6565b604083019b909b52606082019990995296516080880152945160a0870152925160c0860152905160e0850152909416610100830152925161012082015291516101409092019190915292915050565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff93909316835260208301919091521515604082015260600190565b602080825282518282018190526000919060409081850190868401855b8281101561445257815161438285825161417e565b868101516143928887018261417e565b50858101516143a387870182614198565b50606081810151908601526080808201516143c0828801826141a5565b505060a0808201516143d4828801826141a5565b505060c0808201516143e8828801826141a5565b505060e0808201516143fc828801826141a5565b5050610100808201516144118288018261417e565b505061012080820151614426828801826141a5565b50506101408082015161443b828801826141a5565b50505061016093909301929085019060010161436d565b5091979650505050505050565b901515815260200190565b90815260200190565b918252602082015260400190565b602081016003831061448f57fe5b91905290565b60006020825282518060208401526144b481604085016020870161478a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201527f55696e7420756e646572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252602e908201527f43616e206f6e6c79206765742061207072696365206f6e63652074686520445660408201527f4d20686173207265736f6c766564000000000000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f4d696e74696e672073796e74686574696320746f6b656e73206661696c656400604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604082015260600190565b9051815260200190565b93518452602084019290925251604083015251606082015260800190565b928352602083019190915251604082015260600190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561478257600080fd5b604052919050565b60005b838110156147a557818101518382015260200161478d565b83811115612d6e5750506000910152565b60058110613ac357fe5b73ffffffffffffffffffffffffffffffffffffffff81168114613ac357600080fd5b60006147ed826129ef565b5183511090509291505056fea2646970667358221220085c589ea498b9d3acfcc41a288a39de415c93cdd4f85897e9c88afc860906cc64736f6c63430006040033",
  "sourceMap": "143:127:23:-:0;;;193:75;5:9:-1;2:2;;;27:1;24;17:12;2:2;193:75:23;;;;;;;;;;;;;;;;;;;;;258:6;6694::26;:13;;;6721:6;:26;;;6761:6;:25;;;6800:6;:24;;;6838:6;:20;;;6872:6;:26;;;6912:6;:20;;;6946:6;:22;;;6982:6;:26;;;6440:18:27;6460:14;6476:7;2521:6:25;386:7:13;377:6;;:16;;;;;;;;;;;;;;;;;;407:7;403:96;;;444:3;430:11;:17;403:96;-1:-1:-1;2539:18:25::1;:46:::0;;-1:-1:-1;2539:46:25;;::::1;-1:-1:-1::0;2539:46:25;;::::1;;::::0;;;2595:6:::1;:39:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2662:16:::1;:14;:16::i;:::-;2644:15;:34;;;;2714:30;2742:1;2714:27;;;;;:30;;:::i;:::-;2688:56:::0;:23:::1;:56:::0;-1:-1:-1;;;6495:19:27::1;:42:::0;;;6547:18:::1;:40:::0;;;6675:52:::1;::::0;-1:-1:-1;6675:52:27;;6628:20;;-1:-1:-1;6675:14:27;::::1;::::0;-1:-1:-1;;6675:52:27::1;::::0;6690:14;;6706:16;;6724:2:::1;::::0;6675:52:::1;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6675:52:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6675:52:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6675:52:27;;;;;;;;;6659:13;:68:::0;;-1:-1:-1;6659:68:27::1;-1:-1:-1::0;6659:68:27;;;::::1;::::0;;;::::1;::::0;;6746:25:::1;:23;:25::i;:::-;:65;::::0;;;;-1:-1:-1;6746:47:27;;;::::1;::::0;::::1;::::0;:65:::1;::::0;6794:16;;6746:65:::1;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6746:65:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6746:65:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6746:65:27;;;;;;;;;6738:74;;12:1:-1;9::::0;2:12:::1;6738:74:27;6840:16;6823:14;:33;;;;6097:766;::::0;;;;;;;;;7041:45:26::1;7084:1;7041:6;:28;;;:42;;;;;;:45;;;;:::i;:::-;7033:54;;12:1:-1;9::::0;2:12:::1;7033:54:26;7105:81;7184:1;7105:67;7140:6;:31;;;7105:6;:30;;;:34;;;;;;:67;;;;:::i;:::-;:78;;;;;;:81;;;;:::i;:::-;7097:90;;12:1:-1;9::::0;2:12:::1;7097:90:26;7268:26;::::0;::::1;::::0;7246:19:::1;:48:::0;7328:28:::1;::::0;::::1;::::0;7304:52;:21:::1;:52:::0;7383:21:::1;::::0;::::1;::::0;7366:38;:14:::1;:38:::0;7440:30:::1;::::0;::::1;::::0;7414:56;:23:::1;:56:::0;7507:31:::1;;::::0;7480:58;:24:::1;:58:::0;-1:-1:-1;143:127:23;;1036:206:13;1083:4;1103:6;;;;1099:137;;;-1:-1:-1;1132:11:13;;1125:18;;1099:137;-1:-1:-1;1181:3:13;1099:137;1036:206;:::o;603:132:11:-;660:15;;:::i;:::-;694:34;;;;;;;;703:24;427:6;703:1;:5;;;;;;:24;;;;:::i;:::-;694:34;;687:41;603:132;-1:-1:-1;;603:132:11:o;25597:273:27:-;25801:6;;:61;;-1:-1:-1;25801:61:27;;25655:28;;25695:60;;-1:-1:-1;25801:6:27;;;;:31;;:61;;25695:60;;25801:61;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;25801:61:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25801:61:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25801:61:27;;;;;;;;;25765:98;;;25597:273;:::o;1355:144:11:-;1428:4;1464:19;1481:1;1464:16;:19::i;:::-;:28;1451:10;;:41;;-1:-1:-1;1355:144:11;;;;;:::o;4019:151::-;4093:15;;:::i;:::-;4127:36;;;;;;;;4136:26;4151:1;:10;;;4136:1;:10;;;:14;;;;;;:26;;;;:::i;:::-;4127:36;;4120:43;4019:151;-1:-1:-1;;;4019:151:11:o;2586:141::-;2656:4;2692:19;2709:1;2692:16;:19::i;:::-;:28;2679:10;;:41;;-1:-1:-1;2586:141:11;;;;:::o;2159:459:68:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:68;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;2536:56:68;;;;;;;;;;;;;;;;;2610:1;2159:459;-1:-1:-1;;;2159:459:68:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;938:46:68;;;;;;;;143:127:23;;;;;;;;;;;;;;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;;146:128;221:13;;9805;;9798:21;11008:32;;10998:2;;11054:1;;11044:12;610:436;;719:3;712:4;704:6;700:17;696:27;686:2;;-1:-1;;727:12;686:2;761:13;;-1:-1;9144:30;;9141:2;;;-1:-1;;9177:12;9141:2;789:61;9318:4;-1:-1;9250:9;9231:17;;9227:33;9308:15;789:61;;;780:70;;870:6;863:5;856:21;974:3;9318:4;965:6;898;956:16;;953:25;950:2;;;991:1;;981:12;950:2;1001:39;1033:6;9318:4;932:5;928:16;9318:4;898:6;894:17;1001:39;;;;679:367;;;;;3973:346;;4095:4;4083:9;4078:3;4074:19;4070:30;4067:2;;;-1:-1;;4103:12;4067:2;4131:20;4095:4;4131:20;;;4404:13;;4212:86;;-1:-1;4122:29;4061:258;-1:-1;4061:258;4467:263;;4582:2;4570:9;4561:7;4557:23;4553:32;4550:2;;;-1:-1;;4588:12;4550:2;89:6;83:13;101:33;128:5;101:33;;4737:257;;4849:2;4837:9;4828:7;4824:23;4820:32;4817:2;;;-1:-1;;4855:12;4817:2;227:6;221:13;11033:5;9805:13;9798:21;11011:5;11008:32;10998:2;;-1:-1;;11044:12;5317:412;;5467:2;5455:9;5446:7;5442:23;5438:32;5435:2;;;-1:-1;;5473:12;5435:2;5518:24;;-1:-1;5551:30;;;5548:2;;;-1:-1;;5584:12;5548:2;1233:6;;5681:22;;1212:19;;;1208:32;-1:-1;1205:2;;;-1:-1;;1243:12;1205:2;1271:22;1233:6;1271:22;;;1377:57;1430:3;1406:22;1377:57;;;1359:16;1352:83;5467:2;1580:9;1576:22;4404:13;5467:2;1530:5;1526:16;1519:86;1680:2;1749:9;1745:22;4404:13;1680:2;1699:5;1695:16;1688:86;1881:60;1937:3;1848:2;1917:9;1913:22;1881:60;;;1848:2;1867:5;1863:16;1856:86;2046:60;2102:3;2012;2082:9;2078:22;2046:60;;;2012:3;2032:5;2028:16;2021:86;2217:60;2273:3;2183;2253:9;2249:22;2217:60;;;2183:3;2203:5;2199:16;2192:86;2354:3;2424:9;2420:22;359:13;2354:3;2374:5;2370:16;2363:86;2540:3;2529:9;2525:19;2519:26;2505:40;;5562:18;2557:6;2554:30;2551:2;;;-1:-1;;2587:12;2551:2;2632:66;2694:3;2685:6;2674:9;2670:22;2632:66;;;2540:3;2618:5;2614:16;2607:92;2792:3;;;;2781:9;2777:19;2771:26;5562:18;2809:6;2806:30;2803:2;;;-1:-1;;2839:12;2803:2;2886:66;2948:3;2939:6;2928:9;2924:22;2886:66;;;2792:3;2870:5;2866:18;2859:94;;3029:3;;;;3101:9;3097:22;4404:13;3029:3;3049:5;3045:18;3038:88;3204:3;;;3240:82;3318:3;3204;3298:9;3294:22;3240:82;;;3204:3;3224:5;3220:18;3213:110;3394:3;;;3430:82;3508:3;3394;3488:9;3484:22;3430:82;;;3394:3;3414:5;3410:18;3403:110;3593:3;;;3629:82;3707:3;3593;3687:9;3683:22;3629:82;;;3593:3;3613:5;3609:18;3602:110;3793:3;;;3829:82;3907:3;3793;3887:9;3883:22;3829:82;;;3793:3;3813:5;3809:18;3802:110;5604:109;;;;;;;5429:300;;;;;6003:347;;6148:5;9428:12;9585:6;9580:3;9573:19;6242:52;6287:6;9622:4;9617:3;9613:14;9622:4;6268:5;6264:16;6242:52;;;9250:9;10791:14;-1:-1;;10787:28;6306:39;;;;9622:4;6306:39;;6095:255;-1:-1;;6095:255;7072:213;5807:37;;;7190:2;7175:18;;7161:124;7292:625;;7513:2;7534:17;7527:47;7588:78;7513:2;7502:9;7498:18;7652:6;7588:78;;;7714:9;7708:4;7704:20;7699:2;7688:9;7684:18;7677:48;7739:78;7812:4;7803:6;7739:78;;;7731:86;;;10309:4;5984:5;10298:16;7903:2;7892:9;7888:18;5934:57;7484:433;;;;;;;7924:407;8115:2;8129:47;;;6582:2;8100:18;;;9573:19;6618:29;9613:14;;;6598:50;6667:12;;;8086:245;8338:407;8529:2;8543:47;;;6918:2;8514:18;;;9573:19;6954:34;9613:14;;;6934:55;-1:-1;7009:12;;;7002:25;7046:12;;;8500:245;8752:256;8814:2;8808:9;8840:17;;;8936:22;;;-1:-1;8900:34;;8897:62;8894:2;;;8972:1;;8962:12;8894:2;8814;8981:22;8792:216;;-1:-1;8792:216;10447:268;10512:1;10519:101;10533:6;10530:1;10527:13;10519:101;;;10600:11;;;10594:18;10581:11;;;10574:39;10555:2;10548:10;10519:101;;;10635:6;10632:1;10629:13;10626:2;;;10512:1;10691:6;10686:3;10682:16;10675:27;10626:2;;10496:219;;;;10828:117;-1:-1;10093:54;;10887:35;;10877:2;;10936:1;;10926:12;10877:2;10871:74;;;143:127:23;;;;;;",
  "deployedSourceMap": "143:127:23:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;143:127:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2534:49:27;;;:::i;:::-;;;;;;;;;;;;;;;;977:32:25;;;:::i;:::-;;;;;;;;2987:29:27;;;:::i;7308:517::-;;;;;;;;;:::i;:::-;;12356:458;;;:::i;755:92:13:-;;;;;;;;;:::i;1036:206::-;;;:::i;4186:31:26:-;;;:::i;11112:1169:27:-;;;:::i;21355:650::-;;;:::i;15278:5137:26:-;;;;;;;;;:::i;:::-;;;;;;;;4558:41;;;:::i;9102:653:27:-;;;;;;;;;:::i;22915:152::-;;;:::i;4321:48:26:-;;;:::i;3925:57::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4029:51;;;:::i;2302:49:27:-;;;;;;;;;:::i;:::-;;;;;;;;;;;4964:51:26;;;:::i;14720:1656:27:-;;;;;;;;;:::i;3307:1159:25:-;;;:::i;13268:1162:27:-;;;;;;;;;:::i;2893:35::-;;;:::i;20213:389::-;;;:::i;20650:154:26:-;;;:::i;1463:34:27:-;;;:::i;:::-;;;;;;;;2784:53;;;:::i;276:18:13:-;;;:::i;:::-;;;;;;;;22565:228:27;;;;;;;;;:::i;3134:31::-;;;:::i;3278:30::-;;;:::i;20810:136:26:-;;;;;;;;;:::i;:::-;;;;;;;;13273:1313;;;;;;;;;:::i;1092:29:25:-;;;:::i;10104:697:27:-;;;;;;;;;:::i;22188:81::-;;;:::i;4756:50:26:-;;;:::i;8127:597:27:-;;;;;;;;;:::i;1752:50:25:-;;;:::i;1187:27::-;;;:::i;3360:38:27:-;;;:::i;8237:4591:26:-;;;;;;;;;:::i;16723:3109:27:-;;;:::i;2534:49::-;;;;:::o;977:32:25:-;;;;;;:::o;2987:29:27:-;;;;:::o;7308:517::-;4760:20;:18;:20::i;:::-;7398:98:::1;7465:30;7493:1;7465:27;:30::i;:::-;7413:28;::::0;::::1;;::::0;;;:9:::1;:28;::::0;;;;;;;;7398:58;;;;::::1;::::0;;;7413:42:::1;::::0;;::::1;7398:58:::0;;;::::1;::::0;:14:::1;:58::i;:::-;:66:::0;:98:::1;:66;:98;:::i;:::-;7390:107;;12:1:-1;9::::0;2:12:::1;7390:107:27;7507:33;7543:28;7560:10;7543:16;:28::i;:::-;7507:64;;7589:12;:33;;;7626:1;7589:38;7581:47;;12:1:-1;9::::0;2:12:::1;7581:47:27;7638:28;::::0;::::1;;::::0;;;:9:::1;:28;::::0;;;;;:43;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;7708:10:::1;7698:21:::0;;;;;;7691:28;;;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;;;7735:39;;7708:10;;7735:39:::1;::::0;::::1;7789:29;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;4790:1;7308:517:::0;:::o;12356:458::-;4760:20;:18;:20::i;:::-;12423:33:::1;12459:28;12476:10;12459:16;:28::i;:::-;12423:64;;12505:12;:33;;;12542:1;12505:38;;12497:47;;12:1:-1;9::::0;2:12:::1;12497:47:27;12598:36;::::0;::::1;:45:::0;12560:84:::1;::::0;12586:10:::1;::::0;12560:84:::1;::::0;12598:45:::1;::::0;12560:84:::1;12727:1;12691:33;::::0;::::1;:37:::0;;;12777:30:::1;::::0;:27:::1;:30::i;:::-;12738:69:::0;:36:::1;::::0;;::::1;:69:::0;12356:458::o;755:92:13:-;617:6;;;;609:15;;12:1:-1;9;2:12;609:15:13;821:11:::1;:19:::0;755:92::o;1036:206::-;1083:4;1103:6;;;;1099:137;;;-1:-1:-1;1132:11:13;;1125:18;;1099:137;-1:-1:-1;1181:3:13;1099:137;1036:206;:::o;4186:31:26:-;;;;:::o;11112:1169:27:-;4760:20;:18;:20::i;:::-;2011:9:25::1;:7;:9::i;:::-;;11191:33:27::2;11227:28;11244:10;11227:16;:28::i;:::-;11191:64;;11310:16;:14;:16::i;:::-;11273:12;:33;;;:53;;11265:62;;12:1:-1;9::::0;2:12:::2;11265:62:27;11446:43;;:::i;:::-;-1:-1:-1::0;11446:82:27::2;::::0;;::::2;::::0;;::::2;::::0;;11492:36:::2;::::0;::::2;11446:82:::0;;;11593:42;;;;::::2;::::0;;;11608:26:::2;::::0;::::2;11593:42:::0;;;11446:82;11542:94:::2;::::0;11593:42:::2;::::0;:14:::2;:42::i;:::-;11542:50;::::0;;::::2;::::0;::::2;::::0;;;:36:::2;::::0;::::2;:50:::0;;;;:94:::2;:50;:94;:::i;:::-;11538:186;;;11671:42;::::0;;::::2;::::0;::::2;::::0;;;11686:26:::2;::::0;::::2;11671:42:::0;;;::::2;::::0;:14:::2;:42::i;:::-;11652:61;;11538:186;11734:63;11752:12;:26;;11780:16;11734:17;:63::i;:::-;11807;11825:26;11853:16;11807:17;:63::i;:::-;12005:25:::0;;11961:18:::2;::::0;:70:::2;::::0;:18:::2;::::0;;::::2;::::0;11993:10:::2;::::0;11961:70:::2;:31;:70;:::i;:::-;12085:25:::0;;12047:64:::2;::::0;12073:10:::2;::::0;12047:64:::2;::::0;12085:25:::2;::::0;12047:64:::2;12197:30;12225:1;12197:27;:30::i;:::-;12158:69:::0;:36:::2;::::0;::::2;:69:::0;-1:-1:-1;12158:69:27::2;12237:33;::::0;;::::2;:37:::0;11112:1169::o;21355:650::-;4760:20;:18;:20::i;:::-;5213:16:::1;:14;:16::i;:::-;21470:36:::2;:34;:36::i;:::-;21456:50;;:10;:50;;;21448:59;;12:1:-1;9::::0;2:12:::2;21448:59:27;21518:13;:51:::0;;;::::2;21534:35;21518:51;::::0;;21791:19:::2;::::0;21842:16:::2;:14;:16::i;:::-;21820:19;:38:::0;;;21868:40:::2;::::0;:19:::2;:40::i;:::-;21978:19;::::0;21924:74:::2;::::0;21942:10:::2;::::0;21924:74:::2;::::0;::::2;::::0;21954:22;;21924:74:::2;;;;;;;;;;5239:1;21355:650::o:0;15278:5137:26:-;15436:43;;:::i;:::-;15380:13;15395:7;6255:37;6269:13;6284:7;6255:13;:37::i;:::-;2011:9:25::1;:7;:9::i;:::-;;15495:35:26::2;15533:43;15553:7;15562:13;15533:19;:43::i;:::-;15622:20;::::0;::::2;::::0;;;-1:-1:-1;15622:20:26::2;;15608:10;:34;::::0;15607:94:::2;;-1:-1:-1::0;15678:22:26::2;::::0;::::2;::::0;::::2;;15664:10;:36;15607:94;:149;;;-1:-1:-1::0;15736:19:26;;::::2;;15722:10;:33;15607:149;15586:180;;12:1:-1;9::::0;2:12:::2;15586:180:26;15893:31;15901:13;15916:7;15893;:31::i;:::-;16105:41;;:::i;:::-;16149:45;::::0;;::::2;::::0;::::2;::::0;;;16164:29:::2;::::0;::::2;16149:45:::0;;;::::2;::::0;:14:::2;:45::i;:::-;16105:89;;16204:47;;:::i;:::-;16254:88;::::0;;::::2;::::0;;::::2;::::0;;16314:27:::2;::::0;::::2;16254:88:::0;;;:59;;;;::::2;::::0;;;:42:::2;::::0;::::2;:59:::0;;;:121:::2;::::0;16360:14;;16254:88:::2;::::0;:59;:88:::2;:59;:88;:::i;:::-;:105:::0;:121:::2;:105;:121;:::i;:::-;16204:171;;16385:37;;:::i;:::-;16425:32;::::0;;::::2;::::0;::::2;::::0;;;:28:::2;::::0;::::2;:32:::0;;;:48:::2;::::0;16458:14;16425:48:::2;:32;:48;:::i;:::-;16385:88;;16483:48;;:::i;:::-;16534:28;::::0;;::::2;::::0;::::2;::::0;;;:24:::2;:28:::0;;;:50:::2;::::0;16563:20;16534:50:::2;:28;:50;:::i;:::-;16483:101;;16594:47;;:::i;:::-;16644:27;::::0;;::::2;::::0;::::2;::::0;;;:23:::2;:27:::0;;;:49:::2;::::0;16672:20;16644:49:::2;:27;:49;:::i;:::-;16594:99;;16703:44;;:::i;:::-;16750:30;::::0;;::::2;::::0;::::2;::::0;;;16765:14:::2;16750:30:::0;;;::::2;::::0;:10;;:30:::2;:14;:30;:::i;:::-;16703:77;;16790:35;;:::i;:::-;16828:24;::::0;;::::2;::::0;::::2;::::0;;;:20:::2;::::0;::::2;:24:::0;;;:40:::2;::::0;16853:14;16828:40:::2;:24;:40;:::i;:::-;16790:78:::0;-1:-1:-1;17273:23:26::2;17252:17;::::0;::::2;::::0;;;::::2;;;:44;::::0;::::2;;;;;;;17248:2863;;;17427:20;::::0;::::2;::::0;::::2;;17413:10;:34;17409:376;;;17552:40;;:::i;:::-;17595:58;17644:8:::0;17595:44:::2;:21:::0;17621:17;17595:44:::2;:25;:44;:::i;:::-;:48:::0;:58:::2;:48;:58;:::i;:::-;17552:101:::0;-1:-1:-1;17690:35:26::2;:16:::0;17552:101;17690:35:::2;:20;:35;:::i;:::-;17750:20;::::0;::::2;17743:27:::0;;;::::2;::::0;;17671:54;-1:-1:-1;;17409:376:26::2;17817:19:::0;;::::2;;17803:10;:33;17799:466;;;17945:46;;:::i;:::-;17994:36;:10:::0;18009:20;17994:36:::2;:14;:36;:::i;:::-;17945:85;;18048:39;;:::i;:::-;18090:45;:20:::0;18115:19;18090:45:::2;:24;:45;:::i;:::-;18048:87:::0;-1:-1:-1;18172:34:26::2;:16:::0;18048:87;18172:34:::2;:20;:34;:::i;:::-;18224:26:::0;;;::::2;::::0;;18153:53;-1:-1:-1;;;17799:466:26::2;18297:22;::::0;::::2;::::0;::::2;;18283:10;:36;18279:685;;;18672:42;;:::i;:::-;18717:111;18789:21:::0;18717:46:::2;:20:::0;18742;18717:46:::2;:24;:46;:::i;:::-;:50:::0;:111:::2;:50;:111;:::i;:::-;18672:156:::0;-1:-1:-1;18865:37:26::2;:16:::0;18672:156;18865:37:::2;:20;:37;:::i;:::-;18927:22;::::0;::::2;18920:29:::0;;;::::2;::::0;;18846:56;-1:-1:-1;;18279:685:26::2;19061:20;::::0;::::2;::::0;:34:::2;:20;:34:::0;:87;::::2;;;-1:-1:-1::0;19115:19:26;;:33:::2;:19;:33:::0;19061:87:::2;:143;;;;-1:-1:-1::0;19168:22:26::2;::::0;::::2;::::0;:36:::2;:22;:36:::0;19061:143:::2;19040:255;;;19244:21;::::0;::::2;;::::0;;;:12:::2;:21;::::0;;;;:36;;19266:13;;19244:36;::::2;;;;;;::::0;;;::::2;::::0;;::::2;::::0;;::::2;;19237:43:::0;;;;;::::2;::::0;;;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;::::0;19040:255:::2;17248:2863;;;19417:20;19396:17;::::0;::::2;::::0;;;::::2;;;:41;::::0;::::2;;;;;;;:81;;;;-1:-1:-1::0;19455:22:26::2;::::0;::::2;::::0;::::2;;19441:10;:36;19396:81;19392:719;;;19590:47;19628:8:::0;19590:33:::2;:10:::0;19605:17;19590:33:::2;:14;:33;:::i;:47::-;19658:21;::::0;::::2;;::::0;;;:12:::2;:21;::::0;;;;:36;;19571:66;;-1:-1:-1;19658:21:26;19680:13;;19658:36;::::2;;;;19392:719;19864:17;19843::::0;;::::2;::::0;;;::::2;;;:38;::::0;::::2;;;;;;;:78;;;;-1:-1:-1::0;19899:22:26::2;::::0;::::2;::::0;::::2;;19885:10;:36;19843:78;19839:272;;;20019:24;:10:::0;20034:8;20019:24:::2;:14;:24;:::i;:::-;20064:21;::::0;::::2;;::::0;;;:12:::2;:21;::::0;;;;:36;;20000:43;;-1:-1:-1;20064:21:26;20086:13;;20064:36;::::2;;;;;;::::0;;;::::2;::::0;;::::2;::::0;;::::2;;20057:43:::0;;;;;::::2;::::0;;;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;::::0;19839:272:::2;20129:33;:16:::0;20160:1:::2;20129:33;:30;:33;:::i;:::-;20121:42;;12:1:-1;9::::0;2:12:::2;20121:42:26;20173:61;20191:24;20217:16;20173:17;:61::i;:::-;20288:25:::0;;20244:18:::2;::::0;:70:::2;::::0;:18:::2;::::0;;::::2;::::0;20276:10:::2;::::0;20244:70:::2;:31;:70;:::i;:::-;20363:25:::0;;20390:17:::2;::::0;::::2;::::0;20330:78:::2;::::0;::::2;::::0;::::2;::::0;20351:10:::2;::::0;20390:17;;;::::2;;;::::0;20330:78:::2;;;;;;;;;;2030:1:25;;;;;;;;15278:5137:26::0;;;;;;:::o;4558:41::-;;;;:::o;9102:653:27:-;4760:20;:18;:20::i;:::-;2011:9:25::1;:7;:9::i;:::-;;9209:33:27::2;9245:28;9262:10;9245:16;:28::i;:::-;9209:64;;9291:12;:33;;;9328:1;9291:38;9283:47;;12:1:-1;9::::0;2:12:::2;9283:47:27;9341:63;9359:12;:26;;9387:16;9341:17;:63::i;:::-;9422:45;9454:12;9422:31;:45::i;:::-;9414:54;;12:1:-1;9::::0;2:12:::2;9414:54:27;9478:63;9496:26;9524:16;9478:17;:63::i;:::-;9657:25:::0;;9613:18:::2;::::0;:70:::2;::::0;:18:::2;::::0;;::::2;::::0;9645:10:::2;::::0;9613:70:::2;:31;:70;:::i;:::-;9722:25:::0;;9699:49:::2;::::0;9710:10:::2;::::0;9699:49:::2;::::0;9722:25:::2;::::0;9699:49:::2;2030:1:25;9102:653:27::0;:::o;22915:152::-;22973:26;;:::i;:::-;23018:42;;;;;;;;;23033:26;23018:42;;;;;:14;:42::i;:::-;23011:49;;22915:152;:::o;4321:48:26:-;;;;:::o;3925:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3925:57:26;;;;-1:-1:-1;3925:57:26;;;;;;;;;;;;;;;;;;;;;;;:::o;4029:51::-;;;;:::o;2302:49:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4964:51:26:-;;;;:::o;14720:1656:27:-;4760:20;:18;:20::i;:::-;2011:9:25::1;:7;:9::i;:::-;;14818:33:27::2;14854:28;14871:10;14854:16;:28::i;:::-;14818:64;;14900:12;:33;;;14937:1;14900:38;14892:47;;12:1:-1;9::::0;2:12:::2;14892:47:27;14958:55;::::0;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;:9;;:55:::2;:23;:55;:::i;:::-;14957:56;14949:65;;12:1:-1;9::::0;2:12:::2;14949:65:27;15025:43;;:::i;:::-;15071:45;::::0;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;:9;;:45:::2;:13;:45;:::i;:::-;15025:91;;15126:45;;:::i;:::-;15208:42;::::0;;::::2;::::0;::::2;::::0;;;15223:26:::2;::::0;::::2;15208:42:::0;;;15174:86:::2;::::0;15208:42:::2;::::0;:14:::2;:42::i;:::-;15174:16:::0;;:86:::2;:20;:86;:::i;:::-;15386:38;::::0;;::::2;::::0;::::2;::::0;;;;;;;15126:134;;-1:-1:-1;15386:49:27::2;::::0;15425:9;15386:49:::2;:38;:49;:::i;:::-;15382:597;;;15451:34;15474:10;15451:22;:34::i;:::-;15382:597;;;15593:65;15611:12;:26;;15639:18;15593:17;:65::i;:::-;15705:34;::::0;;::::2;::::0;::::2;::::0;;;;;;;:45:::2;::::0;15740:9;15705:45:::2;:34;:45;:::i;:::-;15672:78:::0;;;15827:65:::2;15845:26;15873:18:::0;15827:17:::2;:65::i;:::-;15931:26;::::0;;::::2;::::0;::::2;::::0;;;:22:::2;:26:::0;;;:37:::2;::::0;15958:9;15931:37:::2;:26;:37;:::i;:::-;15906:62:::0;:22:::2;:62:::0;15382:597:::2;16123:27:::0;;16079:18:::2;::::0;:72:::2;::::0;:18:::2;::::0;;::::2;::::0;16111:10:::2;::::0;16079:72:::2;:31;:72;:::i;:::-;16219:18:::0;;16161:13:::2;::::0;:77:::2;::::0;:13:::2;::::0;;::::2;::::0;16192:10:::2;::::0;16212:4:::2;::::0;16161:77:::2;:30;:77;:::i;:::-;16248:13;::::0;16267:18;;16248:38:::2;::::0;;;;:13:::2;::::0;;::::2;::::0;:18:::2;::::0;:38:::2;::::0;::::2;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;16248:38:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;16350:18:27;;16321:27;;16302:67:::2;::::0;16350:18;;-1:-1:-1;16321:27:27;-1:-1:-1;16309:10:27::2;::::0;16302:67:::2;::::0;16350:18:::2;::::0;16302:67:::2;2030:1:25;;;14720:1656:27::0;:::o;3307:1159:25:-;3342:36;;:::i;:::-;3390:20;3413:11;:9;:11::i;:::-;3390:34;;3434:9;3446:16;:14;:16::i;:::-;3434:28;;3472:31;;:::i;:::-;3506:5;:3;:5::i;:::-;3472:39;-1:-1:-1;3595:15:25;3472:39;3608:1;3595:15;:12;:15;:::i;:::-;3591:62;;;-1:-1:-1;3626:16:25;;-1:-1:-1;;3626:16:25;3591:62;3664:37;;:::i;:::-;3703:38;;:::i;:::-;3782:15;;;3745:98;;;;;:23;;;;;;:98;;3782:15;;3811:4;;3829;;3745:98;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3745:98:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3745:98:25;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3745:98:25;;;;;;;;;3853:15;:22;;;3663:180;;-1:-1:-1;3663:180:25;-1:-1:-1;3890:27:25;3663:180;3915:1;3890:27;:24;:27;:::i;:::-;3886:202;;;3990:19;;3933:18;;:77;;:18;;;;;3982:5;;3933:77;:40;:77;:::i;:::-;4057:18;;4024:53;;;;;:24;;;;;;;:53;;4057:18;;;;4024:53;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4024:53:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4024:53:25;;;;3886:202;4102:28;:11;4128:1;4102:28;:25;:28;:::i;:::-;4098:124;;;4190:20;;4146:18;;:65;;:18;;;;;4178:10;;4146:65;:31;:65;:::i;:::-;4244:27;:10;4259:11;4244:27;:14;:27;:::i;:::-;4232:39;;4281;;:::i;:::-;4323:23;:9;4341:4;4323:23;:17;:23;:::i;:::-;4281:65;;4382:77;4410:48;4445:12;4410:30;4438:1;4410:27;:30::i;:48::-;4382:27;;;;;;;;;:23;:27;;;;:77;:27;:77;:::i;:::-;4356:103;:23;:103;-1:-1:-1;;;;;;3307:1159:25;:::o;13268:1162:27:-;4760:20;:18;:20::i;:::-;2011:9:25::1;:7;:9::i;:::-;;13447:52:27::2;13471:16;13489:9;13447:23;:52::i;:::-;13439:61;;12:1:-1;9::::0;2:12:::2;13439:61:27;13557:10;13511:33;13547:21:::0;;;:9:::2;:21;::::0;;;;13586:33:::2;::::0;::::2;::::0;:38;13578:47:::2;;12:1:-1;9::::0;2:12:::2;13578:47:27;13639:38;::::0;;::::2;::::0;::::2;::::0;;;;;;;:41:::2;::::0;13678:1:::2;13639:41;:38;:41;:::i;:::-;13635:99;;;13701:22;::::0;13712:10:::2;::::0;13701:22:::2;::::0;;;::::2;13635:99;13743:60;13758:12;:26;;13786:16;13743:14;:60::i;:::-;13846:34;::::0;;::::2;::::0;::::2;::::0;;;;;;;:45:::2;::::0;13881:9;13846:45:::2;:34;:45;:::i;:::-;13813:78:::0;;;13902:60:::2;13917:26;13945:16:::0;13902:14:::2;:60::i;:::-;13997:26;::::0;;::::2;::::0;::::2;::::0;;;:22:::2;:26:::0;;;:37:::2;::::0;14024:9;13997:37:::2;:26;:37;:::i;:::-;13972:62:::0;:22:::2;:62:::0;14203:25;;14140:18:::2;::::0;:89:::2;::::0;:18:::2;::::0;;::::2;::::0;14176:10:::2;::::0;14196:4:::2;::::0;14140:89:::2;:35;:89;:::i;:::-;14247:13;::::0;14278:18;;14247:50:::2;::::0;;;;:13:::2;::::0;;::::2;::::0;:18:::2;::::0;:50:::2;::::0;14266:10:::2;::::0;14278:18;14247:50:::2;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;14247:50:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;14247:50:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14247:50:27;;;;;;;;;14239:94;;;;;;;;;;;;;;;;;;;;;;14404:18:::0;;14377:25;;14349:74:::2;::::0;14365:10:::2;::::0;14349:74:::2;::::0;14404:18:::2;::::0;14349:74:::2;2030:1:25;13268:1162:27::0;;:::o;2893:35::-;;;;;;:::o;20213:389::-;4844:21;:19;:21::i;:::-;5213:16:::1;:14;:16::i;:::-;2011:9:25::2;:7;:9::i;:::-;-1:-1:-1::0;20294:13:27::3;:51:::0;;;::::3;20310:35;20294:51;::::0;;20453:49:::3;20475:4;20482:19;:17;:19::i;:::-;20453:13;:49::i;:::-;20512:40;20532:19;;20512;:40::i;:::-;20568:27;::::0;20584:10:::3;::::0;20568:27:::3;::::0;;;::::3;20213:389::o:0;20650:154:26:-;20695:26;;:::i;:::-;20756:40;;;;;;;;;20771:24;20756:40;;;20740:57;;20756:40;;:14;:40::i;:::-;20740:11;:9;:11::i;1463:34:27:-;;;;;;:::o;2784:53::-;;;;:::o;276:18:13:-;;;;;;:::o;22565:228:27:-;22628:26;;:::i;:::-;22753:18;;;;;;;:9;:18;;;;;;;;;22738:48;;;;;;;;22753:32;;;;22738:48;;;;;:14;:48::i;:::-;22731:55;22565:228;-1:-1:-1;;22565:228:27:o;3134:31::-;;;;:::o;3278:30::-;;;;:::o;20810:136:26:-;20918:21;;;;;;;:12;:21;;;;;;;;20911:28;;;;;;;;;;;;;;;;;20875:24;;20911:28;;20918:21;;20911:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20810:136;;;:::o;13273:1313::-;13347:13;13362:7;6127:35;6139:13;6154:7;6127:11;:35::i;:::-;2011:9:25::1;:7;:9::i;:::-;;13388:43:26::2;13434;13454:7;13463:13;13434:19;:43::i;:::-;13388:89;;13604:44;;:::i;:::-;13725:53;::::0;;::::2;::::0;::::2;::::0;;;13740:37:::2;::::0;::::2;13725:53:::0;;;13651:137:::2;::::0;13725:53:::2;::::0;:14:::2;:53::i;:::-;13651:56;::::0;;::::2;::::0;;::::2;::::0;;13692:14:::2;13651:56:::0;;;:40;;;;::::2;::::0;;;:36:::2;::::0;::::2;:40:::0;;;:56:::2;::::0;:40;:56:::2;:40;:56;:::i;:137::-;13604:184;;13798:59;13813:24;13839:17;13798:14;:59::i;:::-;13931:26:::0;;13868:18:::2;::::0;:90:::2;::::0;:18:::2;::::0;;::::2;::::0;13904:10:::2;::::0;13924:4:::2;::::0;13868:90:::2;:35;:90;:::i;:::-;14074:25;::::0;::::2;:49:::0;;;::::2;::::0;::::2;::::0;;14133:28:::2;::::0;::::2;:41:::0;;;::::2;14164:10;14133:41;::::0;;14102:21:::2;14248:35:::0;::::2;::::0;14228:56:::2;::::0;:19:::2;:56::i;:::-;14323:55;::::0;;::::2;::::0;::::2;::::0;;;14349:28:::2;::::0;::::2;14323:55:::0;;;::::2;::::0;14337:10:::2;::::0;14323:13:::2;:55::i;:::-;14448:30;::::0;::::2;::::0;14543:26;;14394:185:::2;::::0;14492:10:::2;::::0;14394:185:::2;14448:30:::0;;::::2;::::0;14394:185;;::::2;::::0;::::2;::::0;::::2;::::0;14516:13;;14543:26;14394:185:::2;;;;;;;;;;2030:1:25;;13273:1313:26::0;;;;:::o;1092:29:25:-;;;;;;:::o;10104:697:27:-;4760:20;:18;:20::i;:::-;10213:33:::1;10249:28;10266:10;10249:16;:28::i;:::-;10213:64;;10295:12;:33;;;10332:1;10295:38;10287:47;;12:1:-1;9::::0;2:12:::1;10287:47:27;10426:20;10468:18;;10449:16;:14;:16::i;:::-;:37;10426:60;;10523:19;;10504:15;:38;;10496:47;;12:1:-1;9::::0;2:12:::1;10496:47:27;10606:33;::::0;::::1;:51:::0;;;10667:55;;:36:::1;::::0;::::1;:55:::0;;;10738:56:::1;::::0;10756:10:::1;::::0;10738:56:::1;::::0;10667:55:::1;::::0;10738:56:::1;4790:1;;10104:697:::0;:::o;22188:81::-;4760:20;:18;:20::i;:::-;22188:81::o;4756:50:26:-;;;;:::o;8127:597:27:-;4760:20;:18;:20::i;:::-;2011:9:25::1;:7;:9::i;:::-;;8233:33:27::2;8269:28;8286:10;8269:16;:28::i;:::-;8233:64;;8315:12;:33;;;8352:1;8315:38;8307:47;;12:1:-1;9::::0;2:12:::2;8307:47:27;8364:60;8379:12;:26;;8407:16;8364:14;:60::i;:::-;8434;8449:26;8477:16;8434:14;:60::i;:::-;8629:25:::0;;8566:18:::2;::::0;:89:::2;::::0;:18:::2;::::0;;::::2;::::0;8602:10:::2;::::0;8622:4:::2;::::0;8566:89:::2;:35;:89;:::i;:::-;8691:25:::0;;8671:46:::2;::::0;8679:10:::2;::::0;8671:46:::2;::::0;8691:25:::2;::::0;8671:46:::2;2030:1:25;8127:597:27::0;:::o;1752:50:25:-;;;;:::o;1187:27::-;;;;:::o;3360:38:27:-;;;;:::o;8237:4591:26:-;8456:18;2011:9:25;:7;:9::i;:::-;;4760:20:27::1;:18;:20::i;:::-;8532:40:26::2;8575:25;8592:7;8575:16;:25::i;:::-;8532:68;;8611:44;;:::i;:::-;8658:109;;;::::0;;::::2;::::0;::::2;8686:20:::0;8658:109:::2;;;;::::0;;::::2;::::0;::::2;::::0;;;;;;;:14:::2;:109::i;:::-;8611:156;;8884:32;;:::i;:::-;8919:60;::::0;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;:17;;:60:::2;:21;:60;:::i;:::-;8884:95;;9207:42;;:::i;:::-;9252:49;::::0;;::::2;::::0;::::2;::::0;;;9267:33:::2;::::0;::::2;9252:49:::0;;;::::2;::::0;:14:::2;:49::i;:::-;9207:94;;9311:57;;:::i;:::-;9371:30;9399:1;9371:27;:30::i;:::-;9415:61;::::0;;::::2;::::0;::::2;::::0;;;:43:::2;::::0;::::2;:61:::0;;;9311:90;;-1:-1:-1;9415:78:26::2;::::0;9477:15;9415:78:::2;:61;:78;:::i;:::-;9411:206;;;9542:64;::::0;;::::2;::::0;::::2;::::0;;;9562:43:::2;::::0;::::2;9542:64:::0;;;::::2;::::0;:15;;:64:::2;:19;:64;:::i;:::-;9509:97;;9411:206;9698:38;;:::i;:::-;-1:-1:-1::0;9698:78:26::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;10070:88:::2;10127:30:::0;10070:35:::2;9698:78:::0;10070:22:::2;;::::0;;::::2;::::0;::::2;:18:::0;:22:::2;;:35;:56:::0;:88:::2;:56;:88;:::i;:::-;10062:97;;12:1:-1;9::::0;2:12:::2;10062:97:26;4790:1:27;10259:43:26;;:::i;:::-;10305:26;:15:::0;10325:5;10305:26:::2;:19;:26;:::i;:::-;10259:72;;10490:47;;:::i;:::-;10540:41;:30:::0;10575:5;10540:41:::2;:34;:41;:::i;:::-;10490:91;;10738:51;;:::i;:::-;10792:47;::::0;;::::2;::::0;::::2;::::0;;;:43:::2;::::0;::::2;:47:::0;;;:54:::2;::::0;10840:5;10792:54:::2;:47;:54;:::i;:::-;10738:108;;10910:35;;:::i;:::-;10948:19;:17;:19::i;:::-;11293:21;::::0;::::2;;::::0;;;:12:::2;:21;::::0;;;;;;;;:28;;11371:590;;::::2;::::0;::::2;::::0;;;;;11451:10:::2;11371:590:::0;;::::2;::::0;;;;11293:28;;-1:-1:-1;10910:57:26;;-1:-1:-1;11371:590:26;;11486:17:::2;11371:590;;;;11538:16;:14;:16::i;:::-;11371:590;;;;11591:17;11371:590;;;;11644:16;11371:590;;;;11700:20;11371:590;;;;11757:50;11776:30;11804:1;11776:27;:30::i;:::-;11757:18;:50::i;:::-;11371:590;;;;11843:1;11371:590;;;;;;11880:30;11908:1;11880:27;:30::i;:::-;11371:590:::0;;::::2;::::0;;::::2;::::0;;;27:10:-1;;39:1:::2;23:18:::0;;::::2;45:23:::0;;-1:-1;11331:640:26;;;;;;;;;::::2;::::0;;::::2;;::::0;;;;;::::2;;::::0;;::::2;;::::0;;;;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;::::2;;;;;;;;::::0;;-1:-1:-1;11331:640:26::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;;::::0;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;::::2;::::0;12034:94:::2;12057:7:::0;12066:17;12085:16;12103:24;12034:22:::2;:94::i;:::-;12198:72;12213:24;12239:30;:16:::0;12260:8;12239:30:::2;:20;:30;:::i;:::-;12198:14;:72::i;:::-;12365:26:::0;;12307:13:::2;::::0;:85:::2;::::0;:13:::2;::::0;;::::2;::::0;12338:10:::2;::::0;12358:4:::2;::::0;12307:85:::2;:30;:85;:::i;:::-;12402:13;::::0;12421:26;;12402:46:::2;::::0;;;;:13:::2;::::0;;::::2;::::0;:18:::2;::::0;:46:::2;::::0;::::2;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;12402:46:26;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;12565:17:26;;12502:18:::2;::::0;:81:::2;::::0;-1:-1:-1;12502:18:26::2;;::::0;-1:-1:-1;12538:10:26::2;::::0;12558:4:::2;::::0;12502:81:::2;:35;:81;:::i;:::-;12676:13;12652:10;12599:222;;12631:7;12599:222;;;12703:17;:26;;;12743:16;:25;;;12782:20;:29;;;12599:222;;;;;;;;;;;;;;;;;4790:1:27;;;;;;;;;8237:4591:26::0;;;;;:::o;16723:3109:27:-;4844:21;:19;:21::i;:::-;2011:9:25::1;:7;:9::i;:::-;-1:-1:-1::0;16932:18:27::2;16915:13;::::0;::::2;;:35;::::0;::::2;;;;;;;;16907:44;;12:1:-1;9::::0;2:12:::2;16907:44:27;17076:34;17059:13;::::0;::::2;;:51;::::0;::::2;;;;;;;17055:196;;17140:36;17156:19;;17140:15;:36::i;:::-;17126:50:::0;:11:::2;:50:::0;17190:13:::2;:50:::0;;;::::2;17206:34;17190:50;::::0;;17055:196:::2;17353:41;;:::i;:::-;17397:56;::::0;;::::2;::::0;::::2;::::0;;;;17417:13:::2;::::0;:35;;;;17397:56;;;17417:13:::2;;:23;:35;17441:10;17417:35:::0;;;::::2;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;17417:35:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;17417:35:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17417:35:27;;;;;;;;;17397:56:::0;;17353:100;-1:-1:-1;17463:52:27::2;;:::i;:::-;17518:31;::::0;;::::2;::::0;::::2;::::0;;;17537:11:::2;17518:31:::0;;;::::2;::::0;:14;;:31:::2;:18;:31;:::i;:::-;17740:10;17694:33;17730:21:::0;;;:9:::2;:21;::::0;;;;;;;17765:42;;;;::::2;::::0;;;17780:26:::2;::::0;::::2;17765:42:::0;;;17463:86;;-1:-1:-1;17765:59:27::2;::::0;17694:33;17765:42:::2;::::0;:14:::2;:42::i;:::-;:56:::0;:59:::2;:56;:59;:::i;:::-;17761:1117;;;17950:53;;:::i;:::-;18006:47;::::0;;::::2;::::0;;::::2;::::0;;18041:11:::2;18006:47:::0;;;:34;;;;::::2;::::0;;;;;;;:47:::2;::::0;:34;:47:::2;:34;:47;:::i;:::-;17950:103;;18067:45;;:::i;:::-;18115:42;::::0;;::::2;::::0;::::2;::::0;;;18130:26:::2;::::0;::::2;18115:42:::0;;;::::2;::::0;:14:::2;:42::i;:::-;18067:90;;18270:55;;:::i;:::-;18328:87;:26:::0;18383:18;18328:87:::2;:37;:87;:::i;:::-;:197;;18503:22;;;;;;;;18523:1;18503:22;;::::0;18328:197:::2;;;18434:50;:18:::0;18457:26;18434:50:::2;:22;:50;:::i;:::-;18270:255:::0;-1:-1:-1;18673:59:27::2;:25:::0;18270:255;18673:59:::2;:29;:59;:::i;:::-;18856:10;18846:21;::::0;;;:9:::2;:21;::::0;;;;18839:28;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;;::::0;18645:87;-1:-1:-1;;;;17761:1117:27::2;19083:33;;:::i;:::-;19147:42;::::0;;::::2;::::0;::::2;::::0;;;19162:26:::2;19147:42:::0;;;19119:119:::2;::::0;19147:42:::2;::::0;:14:::2;:42::i;:::-;19203:25;19119:14;:119::i;:::-;19083:155;;19318:53;19336:26;19364:6;19318:17;:53::i;:::-;19406:26;::::0;;::::2;::::0;::::2;::::0;;;:22:::2;:26:::0;;;:42:::2;::::0;19433:14;19406:42:::2;:26;:42;:::i;:::-;19381:67:::0;:22:::2;:67:::0;19573:15;;19529:18:::2;::::0;:60:::2;::::0;:18:::2;::::0;;::::2;::::0;19561:10:::2;::::0;19529:60:::2;:31;:60;:::i;:::-;19657:23:::0;;19599:13:::2;::::0;:82:::2;::::0;:13:::2;::::0;;::::2;::::0;19630:10:::2;::::0;19650:4:::2;::::0;19599:82:::2;:30;:82;:::i;:::-;19691:13;::::0;19710:23;;19691:43:::2;::::0;;;;:13:::2;::::0;;::::2;::::0;:18:::2;::::0;:43:::2;::::0;::::2;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;19691:43:27;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;19801:23:27;;19784:15;;19750:75:::2;::::0;19801:23;;-1:-1:-1;19784:15:27;-1:-1:-1;19772:10:27::2;::::0;19750:75:::2;::::0;19801:23:::2;::::0;19750:75:::2;2030:1:25;;;;16723:3109:27:o:0;29012:108::-;29093:19;;29074:16;:14;:16::i;:::-;:38;29066:47;;12:1:-1;9;2:12;603:132:11;660:15;;:::i;:::-;694:34;;;;;;;;;;703:24;:1;427:6;703:24;:5;:24;:::i;:::-;694:34;;687:41;603:132;-1:-1:-1;;603:132:11:o;6989:222:25:-;7102:37;;:::i;:::-;7162:42;;;;;;;;;7180:23;7162:42;;;;;:13;;:42;:17;:42;:::i;976:132:11:-;1091:10;1077;;:24;;976:132::o;25389:202:27:-;25523:20;25497:7;4952:36;4980:7;4952:27;:36::i;:::-;-1:-1:-1;;25566:18:27::1;;;::::0;;;:9:::1;:18;::::0;;;;;25389:202::o;1163:137:11:-;1283:10;1270;;:23;;1163:137::o;7691:322:25:-;7839:45;;:::i;:::-;7887:38;7906:18;7887;:38::i;:::-;7960:17;;;;;;;;;;;;;7839:86;;-1:-1:-1;7960:37:25;;7839:86;7960:37;:17;:37;:::i;:::-;:46;7935:71;;;-1:-1:-1;;7691:322:25:o;662:174:73:-;744:85;763:5;793:23;;;818:2;822:5;770:58;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;770:58:73;;;49:4:-1;25:18;;61:17;;770:58:73;182:15:-1;770:58:73;;;;179:29:-1;;;;160:49;;;744:18:73;:85::i;:::-;662:174;;;:::o;28905:101:27:-;28980:18;28963:13;;;;:35;;;;;;;;;28955:44;;12:1:-1;9;2:12;26256:245:27;26429:6;;:65;;;;;26325:7;;26344:68;;26429:6;;;;;:31;;:65;;26344:68;;26429:65;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26429:65:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26429:65:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26429:65:27;;;;;;;;;26422:72;;;26256:245;:::o;26507:172::-;26575:22;26600:12;:10;:12::i;:::-;26642:14;;26622:50;;;;;26575:37;;-1:-1:-1;26622:19:27;;;;;;:50;;26658:13;;26622:50;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26622:50:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26622:50:27;;;;26507:172;;:::o;24396:459:26:-;24480:35;24518:43;24538:7;24547:13;24518:19;:43::i;:::-;24586:17;;;;;;;-1:-1:-1;24586:17:26;;;;;;;24702:5;:25;;;;;;;;;24701:137;;;;24788:16;:14;:16::i;:::-;24750:34;24772:11;24750:21;:34::i;:::-;:54;;24749:88;;;;-1:-1:-1;24819:17:26;24810:5;:26;;;;;;;;;24749:88;24680:168;;12:1:-1;9;2:12;24680:168:26;24396:459;;;;:::o;23032:590::-;23241:21;;;23145:35;23241:21;;;:12;:21;;;;;23469:23;;23453:39;;:104;;;;-1:-1:-1;23537:20:26;23496:16;23513:13;23496:31;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:61;;;;;;;;;;23453:104;23432:135;;12:1:-1;9;2:12;23432:135:26;23584:16;23601:13;23584:31;;;;;;;;;;;;;;;;;;23577:38;;;23032:590;;;;:::o;21306:1720::-;21379:35;21417:43;21437:7;21446:13;21417:19;:43::i;:::-;21379:81;-1:-1:-1;21701:21:26;21680:17;;;;;;;;;:42;;;;;;;;;21676:79;;21738:7;;;21676:79;21888:44;21904:11;:27;;;21888:15;:44::i;:::-;21858:74;:27;;;:74;22013:47;;:::i;:::-;22063:84;;;;;;;;;22110:27;;;22063:84;;;:33;;;;;;;;:29;;;:33;;;:84;;:33;:84;:33;:84;:::i;:::-;22013:134;;22263:45;;:::i;:::-;22311:47;;;;;;;;;22336:21;22311:47;;;;;:20;;:47;:24;:47;:::i;:::-;22639:53;;;;;;;;;:32;;;:53;;;22263:95;;-1:-1:-1;22615:21:26;;22639:73;;22263:95;22639:73;:53;:73;:::i;:::-;22615:97;;22742:16;:65;;22787:20;22742:65;;;22761:23;22742:65;22722:17;;;:85;;;;;;;;;;;;;;;;;;-1:-1:-1;22896:22:26;;;;22932:20;;;;22823:196;;22896:22;;;;;22823:196;;;;22851:10;;22823:196;;;;22932:20;;22966:13;;22993:16;;22823:196;;21306:1720;;;:::o;5131:647:11:-;5205:15;;:::i;:::-;5715:56;;;;;;;;;5739:10;;5724;;5715:56;;427:6;;5724:26;;;:14;:26;:::i;:::-;:46;;;;;;5715:56;;5708:63;5131:647;-1:-1:-1;;;5131:647:11:o;4019:151::-;4093:15;;:::i;:::-;4127:36;;;;;;;;;4151:10;;4136;;4127:36;;4136:26;;:10;:26;:14;:26;:::i;:::-;4127:36;;4120:43;4019:151;-1:-1:-1;;;4019:151:11:o;4459:::-;4533:15;;:::i;:::-;4567:36;;;;;;;;;4591:10;;4576;;4567:36;;4576:26;;:10;:26;:14;:26;:::i;1355:144::-;1428:4;1464:19;1481:1;1464:16;:19::i;:::-;:28;1451:10;;:41;;-1:-1:-1;1355:144:11;;;;:::o;27341:227:27:-;27486:42;;;;;;;;;27501:26;;;27486:42;;;27439:4;;27462:99;;27486:42;;:14;:42::i;:::-;27462:99;;;;;;;;;;;;;:23;:99::i;6873:631:11:-;6947:15;;:::i;:::-;7438:59;;;;;;;;;7485:10;;7447;;7438:59;;7447:49;;:33;;427:6;7447:33;:14;:33;:::i;:::-;:37;:49;:37;:49;:::i;24837:546:27:-;24905:40;24948:25;24965:7;24948:16;:25::i;:::-;25095:65;;;;;;;;;25126:33;;;25095:65;;;:30;;;;;;;;:26;:30;;;24905:68;;-1:-1:-1;25095:65:27;;;:30;:65;:::i;:::-;25066:94;:26;:94;25195:65;;;;;;;;;;;;;:26;;;;;;;;:22;:26;;;:65;;:26;:65;:26;:65;:::i;:::-;25170:90;:22;:90;-1:-1:-1;25358:18:27;;25170:90;25358:18;;;:9;:18;;;;;25351:25;;;;;;;;;;;;;;;;;;24837:546::o;842:202:73:-;942:95;961:5;991:27;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;6325:189:25;6459:6;;:47;;;;;6369:14;;6395:32;;6459:6;;;;;:31;;:47;;6395:32;;6459:47;;;;786:139:11;853:4;890:19;907:1;890:16;:19::i;:::-;:28;876:10;;:42;;-1:-1:-1;786:139:11;;;;:::o;1668:282:73:-;1764:20;1787:50;1831:5;1787;:15;;;1811:4;1818:7;1787:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1787:39:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1787:39:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1787:39:73;;;;;;;;;:43;:50;:43;:50;:::i;:::-;1764:73;;1847:96;1866:5;1896:22;;;1920:7;1929:12;1873:69;;;;;;;;;;7920:386:11;7998:15;;:::i;:::-;8039:10;;8025:11;;8039:33;;427:6;8039:33;:14;:33;:::i;:::-;8109:10;;8025:47;;-1:-1:-1;8082:13:11;;8098:22;;8025:47;;8098:22;:10;:22;:::i;:::-;8152:10;;8082:38;;-1:-1:-1;8130:8:11;;8141:22;;:6;;:22;:10;:22;:::i;:::-;8130:33;-1:-1:-1;8177:8:11;;8173:127;;8208:25;;;;;;;;;;8217:15;:8;8230:1;8217:15;:12;:15;:::i;:::-;8208:25;;;8201:32;;;;;;;8173:127;8271:18;;;;;;;;8280:8;8271:18;;;8264:25;;;;;;;27574:496:27;27730:4;27750:33;;:::i;:::-;27826:42;;;;;;;;;27841:26;27826:42;;;27786:128;;27826:42;;:14;:42::i;:::-;27786:128;;;;;;;;;27882:22;27786:128;;;:26;:128::i;:::-;27750:164;;27924:37;;:::i;:::-;27964:49;27991:10;28003:9;27964:26;:49::i;:::-;27924:89;-1:-1:-1;28031:32:27;:6;27924:89;28031:32;:20;:32;:::i;:::-;28030:33;;27574:496;-1:-1:-1;;;;;27574:496:27:o;8019:313:25:-;8161:45;;:::i;:::-;8209:35;8228:15;8209:18;:35::i;:::-;8279:17;;;;;;;;;;;;;8161:83;;-1:-1:-1;8279:37:25;;8161:83;8279:37;:17;:37;:::i;29126:110:27:-;29209:19;;29189:16;:14;:16::i;:::-;:39;;29181:48;;12:1:-1;9;2:12;6520:203:25;6567:36;;:::i;:::-;6615:20;6638:11;:9;:11::i;:::-;6696:18;;6666:50;;;;;6615:34;;-1:-1:-1;6666:21:25;;;;;;;:50;;6696:18;;6666:50;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6666:50:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6666:50:25;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6666:50:25;;;;;;;;4740:1089;4836:17;:6;4851:1;4836:17;:14;:17;:::i;:::-;4832:54;;;4869:7;;4832:54;4900:22;;;4917:4;4900:22;4896:736;;5080:15;;5022:18;;:74;;:18;;;;;5058:5;;5073:4;;5022:74;:35;:74;:::i;:::-;4896:736;;;5222:31;;:::i;:::-;5256:5;:3;:5::i;:::-;5222:39;-1:-1:-1;5364:26:25;5222:39;5383:6;5364:26;:18;:26;:::i;:::-;5356:35;;12:1:-1;9;2:12;5356:35:25;5441:39;;:::i;:::-;5483:21;5498:5;:3;:5::i;:::-;5483:6;;:21;:14;:21;:::i;:::-;5441:63;;5544:77;5572:48;5607:12;5572:30;5600:1;5572:27;:30::i;5544:77::-;5518:103;:23;:103;-1:-1:-1;;4896:736:25;5642:20;5665:11;:9;:11::i;:::-;5743:15;;5686:18;;5642:34;;-1:-1:-1;5686:73:25;;:18;;;5642:34;;5686:73;:40;:73;:::i;:::-;5802:18;;5769:53;;;;;:24;;;;;;;:53;;5802:18;;;;5769:53;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5769:53:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5769:53:25;;;;4740:1089;;;:::o;24102:288:26:-;24184:35;24222:43;24242:7;24251:13;24222:19;:43::i;:::-;24184:81;;24303:34;24325:11;24303:21;:34::i;:::-;24284:16;:14;:16::i;:::-;:53;24283:99;;;;-1:-1:-1;24364:17:26;24343;;;;;;;;;:38;;;;;;;;;24283:99;24275:108;;12:1:-1;9;2:12;3606:146:11;3680:15;;:::i;:::-;3727:10;;3714;;:23;:31;;3744:1;3714:31;;;3740:1;3714:31;3707:38;3606:146;-1:-1:-1;;;3606:146:11:o;2984:142::-;3109:10;3095;;:24;;;2984:142::o;1765:145::-;1893:10;1879;;:24;;;1765:145::o;7462:223:25:-;7576:40;;:::i;:::-;7639:39;;;;;;;;;7654:23;7639:39;;;;;:10;;:39;:14;:39;:::i;23597:1234:27:-;23846:33;23882:25;23899:7;23882:16;:25::i;:::-;24006:54;;;;;;;;;;;;;23846:61;;-1:-1:-1;24006:54:27;;:14;;:54;:22;:54;:::i;:::-;:140;;;;-1:-1:-1;24076:42:27;;;;;;;;;24091:26;;;24076:42;;;:70;;24127:18;;24076:42;;:14;:42::i;:70::-;23989:244;;;24171:31;24194:7;24171:22;:31::i;:::-;24216:7;;;23989:244;24321:65;24339:12;:26;;24367:18;24321:17;:65::i;:::-;24429:34;;;;;;;;;;;;;:50;;24464:14;24429:50;:34;:50;:::i;:::-;24396:83;;;24528:40;;;;;;;;;:36;;;:40;;;:66;;24569:24;24528:66;:40;:66;:::i;:::-;24489:105;:36;;;:105;24682:65;24700:26;24728:18;24682:17;:65::i;:::-;24782:26;;;;;;;;;:22;:26;;;:42;;24809:14;24782:42;:26;:42;:::i;:::-;24757:67;:22;:67;-1:-1:-1;23597:1234:27;;;;:::o;26685:650::-;26753:26;;:::i;:::-;26891:22;26916:12;:10;:12::i;:::-;26962:14;;26946:46;;;;;26891:37;;-1:-1:-1;26946:15:27;;;;;;:46;;26978:13;;26946:46;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26946:46:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26946:46:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26946:46:27;;;;;;;;;26938:105;;;;;;;;;;;;;;27087:14;;27071:46;;;;;27053:15;;27071;;;;;;:46;;27103:13;;27071:46;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;27071:46:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27071:46:27;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27071:46:27;;;;;;;;;27053:64;;27222:1;27208:11;:15;27204:61;;;-1:-1:-1;27253:1:27;27204:61;27281:47;;;;;;;;27301:26;27315:11;27301:13;:26::i;:::-;27281:47;;27274:54;26685:650;-1:-1:-1;;;;26685:650:27:o;2400:134:11:-;2517:10;2504;;:23;;2400:134::o;2159:459:68:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:68;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;;;;;;;;;;29242:159:27;29343:18;;;29391:1;29343:18;;;:9;:18;;;;;;;;29328:48;;;;;;;;29343:32;;29328:48;;;:65;;29391:1;29328:48;;:14;:48::i;:65::-;29320:74;;12:1:-1;9;2:12;29320:74:27;29242:159;:::o;2666:1095:73:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3394:67:73;;;;3479:7;3471:52;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;25876:195:27;26015:6;;:48;;;;;25921:15;;25948:34;;26015:6;;;;;:31;;:48;;25948:34;;26015:48;;;;23628:173:26;23719:4;23742:52;23774:19;;23742:11;:27;;;:31;;:52;;;;:::i;834:176:68:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;1274:134;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;4500:128::-;4558:7;4584:37;4588:1;4591;4584:37;;;;;;;;;;;;;;;;;:3;:37::i;28076:371:27:-;28235:32;;:::i;:::-;28288:26;:9;28312:1;28288:26;:23;:26;:::i;:::-;28283:158;;28337:30;28365:1;28337:27;:30::i;:::-;28330:37;;;;28283:158;28405:25;:10;28420:9;28405:25;:14;:25;:::i;28453:151::-;28509:11;28549:1;28540:5;:10;;28532:37;;;;;;;;;;;;;;-1:-1:-1;28591:5:27;28453:151::o;685:610:74:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:74;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:74:o;1732:187:68:-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:68;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:68:o;5132:163::-;5218:7;5253:12;5245:6;5237:29;;;;;;;;;;;;;;;;5287:1;5283;:5;;;;;;;5132:163;-1:-1:-1;;;;5132:163:68:o;143:127:23:-;;;;;;;;;;;;;;:::o;592:159:-1:-;;704:2;695:6;690:3;686:16;682:25;679:2;;;-1:-1;;710:12;679:2;-1:-1;730:15;672:79;-1:-1;672:79;791:328;;906:4;894:9;889:3;885:19;881:30;878:2;;;-1:-1;;914:12;878:2;942:20;906:4;942:20;;;1583;;1023:75;;-1:-1;933:29;872:247;-1:-1;872:247;1159:350;;1285:4;1273:9;1268:3;1264:19;1260:30;1257:2;;;-1:-1;;1293:12;1257:2;1321:20;1285:4;1321:20;;;1731:13;;1402:86;;-1:-1;1312:29;1251:258;-1:-1;1251:258;1794:241;;1898:2;1886:9;1877:7;1873:23;1869:32;1866:2;;;-1:-1;;1904:12;1866:2;85:6;72:20;97:33;124:5;97:33;;2042:263;;2157:2;2145:9;2136:7;2132:23;2128:32;2125:2;;;-1:-1;;2163:12;2125:2;226:6;220:13;238:33;265:5;238:33;;2312:603;;;;2506:2;2494:9;2485:7;2481:23;2477:32;2474:2;;;-1:-1;;2512:12;2474:2;85:6;72:20;97:33;124:5;97:33;;;2564:63;-1:-1;2682:81;2755:7;2664:2;2731:22;;2682:81;;;2672:91;;2818:81;2891:7;2800:2;2871:9;2867:22;2818:81;;;2808:91;;2468:447;;;;;;2922:366;;;3043:2;3031:9;3022:7;3018:23;3014:32;3011:2;;;-1:-1;;3049:12;3011:2;85:6;72:20;97:33;124:5;97:33;;;3101:63;3201:2;3240:22;;;;1583:20;;-1:-1;;;3005:283;3295:257;;3407:2;3395:9;3386:7;3382:23;3378:32;3375:2;;;-1:-1;;3413:12;3375:2;364:6;358:13;34984:5;31914:13;31907:21;34962:5;34959:32;34949:2;;-1:-1;;34995:12;3559:261;;3673:2;3661:9;3652:7;3648:23;3644:32;3641:2;;;-1:-1;;3679:12;3641:2;-1:-1;495:13;;3635:185;-1:-1;3635:185;3827:293;;3957:2;3945:9;3936:7;3932:23;3928:32;3925:2;;;-1:-1;;3963:12;3925:2;4025:79;4096:7;4072:22;4025:79;;4127:315;;4268:2;4256:9;4247:7;4243:23;4239:32;4236:2;;;-1:-1;;4274:12;4236:2;4336:90;4418:7;4394:22;4336:90;;4449:470;;;4622:2;4610:9;4601:7;4597:23;4593:32;4590:2;;;-1:-1;;4628:12;4590:2;4690:79;4761:7;4737:22;4690:79;;;4680:89;;4824:79;4895:7;4806:2;4875:9;4871:22;4824:79;;;4814:89;;4584:335;;;;;;4926:503;;;5110:2;5098:9;5089:7;5085:23;5081:32;5078:2;;;-1:-1;;5116:12;5078:2;5178:90;5260:7;5236:22;5178:90;;;5168:100;;5323:90;5405:7;5305:2;5385:9;5381:22;5323:90;;5436:241;;5540:2;5528:9;5519:7;5515:23;5511:32;5508:2;;;-1:-1;;5546:12;5508:2;-1:-1;1583:20;;5502:175;-1:-1;5502:175;5954:366;;;6075:2;6063:9;6054:7;6050:23;6046:32;6043:2;;;-1:-1;;6081:12;6043:2;1596:6;1583:20;6133:63;;6233:2;6276:9;6272:22;72:20;97:33;124:5;97:33;;;6241:63;;;;6037:283;;;;;;6780:103;32454:42;32443:54;6841:37;;6835:48;9313:134;32247:44;32285:5;32247:44;;;9383:59;;9377:70;15218:328;15433:23;8209:37;;15336:210;16561:262;;8418:5;30767:12;8529:52;8574:6;8569:3;8562:4;8555:5;8551:16;8529:52;;;8593:16;;;;;16686:137;-1:-1;;16686:137;16830:213;32454:42;32443:54;;;;6841:37;;16948:2;16933:18;;16919:124;17286:340;32454:42;32443:54;;;;6710:58;;17612:2;17597:18;;8209:37;17440:2;17425:18;;17411:215;17633:469;32454:42;32443:54;;6710:58;;17996:2;17981:18;;8209:37;;;17824:2;17809:18;;32247:44;32285:5;32247:44;;;33882:35;18088:2;18077:9;18073:18;9383:59;17795:307;;;;;;;18109:324;32454:42;32443:54;;;6841:37;;32443:54;;18419:2;18404:18;;6841:37;18255:2;18240:18;;18226:207;18440:1927;32454:42;32443:54;;;6841:37;;32443:54;;;19301:2;19286:18;;6841:37;19136:3;19121:19;;;32247:44;32285:5;32247:44;;;19393:2;19378:18;;9383:59;;;;19476:2;19461:18;;8209:37;;;;15433:23;;19607:3;19592:19;;8209:37;15433:23;;19739:3;19724:19;;8209:37;15433:23;;19871:3;19856:19;;8209:37;15433:23;;20003:3;19988:19;;8209:37;32443:54;;;20087:3;20072:19;;6841:37;15433:23;;20219:3;20204:19;;8209:37;15433:23;;20352:3;20337:19;;;8209:37;;;;19107:1260;;-1:-1;;19107:1260;20374:435;32454:42;32443:54;;;6841:37;;32443:54;;;;20712:2;20697:18;;6841:37;20795:2;20780:18;;8209:37;;;;20548:2;20533:18;;20519:290;21147:423;32454:42;32443:54;;;;6841:37;;21479:2;21464:18;;8209:37;;;;31914:13;31907:21;21556:2;21541:18;;8092:34;21315:2;21300:18;;21286:284;21577:477;21803:2;21817:47;;;30767:12;;21788:18;;;31357:19;;;21577:477;;21803:2;31397:14;;;;;;30592;;;21577:477;7650:347;7675:6;7672:1;7669:13;7650:347;;;7742:6;7736:13;13124:63;13172:14;13101:16;13095:23;13124:63;;;21803:2;13265:5;13261:16;13255:23;13284:63;21803:2;13336:3;13332:14;13318:12;13284:63;;;;31397:14;13420:5;13416:16;13410:23;13439:72;31397:14;13500:3;13496:14;13482:12;13439:72;;;-1:-1;13601:4;13590:16;;;13584:23;13661:14;;;8209:37;13768:4;13757:16;;;13751:23;13780:111;13876:14;;;13751:23;13780:111;;;;;13982:4;;13975:5;13971:16;13965:23;13994:111;13982:4;14094:3;14090:14;14076:12;13994:111;;;;;14200:4;;14193:5;14189:16;14183:23;14212:111;14200:4;14312:3;14308:14;14294:12;14212:111;;;;;14415:4;;14408:5;14404:16;14398:23;14427:111;14415:4;14527:3;14523:14;14509:12;14427:111;;;;;14621:6;;14614:5;14610:18;14604:25;14635:65;14621:6;14687:3;14683:16;14669:12;14635:65;;;;;14790:6;;14783:5;14779:18;14773:25;14804:113;14790:6;14904:3;14900:16;14886:12;14804:113;;;;;15000:6;;14993:5;14989:18;14983:25;15014:113;15000:6;15114:3;15110:16;15096:12;15014:113;;;-1:-1;;;6610:6;6601:16;;;;;31183:14;;;;7697:1;7690:9;7650:347;;;-1:-1;21870:174;;21774:280;-1:-1;;;;;;;21774:280;22061:201;31914:13;;31907:21;8092:34;;22173:2;22158:18;;22144:118;22269:213;8209:37;;;22387:2;22372:18;;22358:124;22489:324;8209:37;;;22799:2;22784:18;;8209:37;22635:2;22620:18;;22606:207;23608:245;23742:2;23727:18;;34641:1;34631:12;;34621:2;;34647:9;34621:2;9235:66;;;23713:140;;23860:301;;23998:2;24019:17;24012:47;9750:5;30767:12;31369:6;23998:2;23987:9;23983:18;31357:19;9844:52;9889:6;31397:14;23987:9;31397:14;23998:2;9870:5;9866:16;9844:52;;;34537:2;34517:14;34533:7;34513:28;9908:39;;;;31397:14;9908:39;;23969:192;-1:-1;;23969:192;24168:407;24359:2;24373:47;;;10184:2;24344:18;;;31357:19;10220:29;31397:14;;;10200:50;10269:12;;;24330:245;24582:407;24773:2;24787:47;;;10520:2;24758:18;;;31357:19;10556:16;31397:14;;;10536:37;10592:12;;;24744:245;24996:407;25187:2;25201:47;;;25172:18;;;31357:19;10879:34;31397:14;;;10859:55;10933:12;;;25158:245;25410:407;25601:2;25615:47;;;11184:2;25586:18;;;31357:19;11220:34;31397:14;;;11200:55;11289:16;11275:12;;;11268:38;11325:12;;;25572:245;25824:407;26015:2;26029:47;;;11576:2;26000:18;;;31357:19;11612:34;31397:14;;;11592:55;11681:3;11667:12;;;11660:25;11704:12;;;25986:245;26238:407;26429:2;26443:47;;;11955:2;26414:18;;;31357:19;11991:33;31397:14;;;11971:54;12044:12;;;26400:245;26652:407;26843:2;26857:47;;;12295:2;26828:18;;;31357:19;12331:34;31397:14;;;12311:55;12400:12;12386;;;12379:34;12432:12;;;26814:245;27066:407;27257:2;27271:47;;;12683:2;27242:18;;;31357:19;12719:33;31397:14;;;12699:54;12772:12;;;27228:245;27480:317;15433:23;;8209:37;;27650:2;27635:18;;27621:176;27804:835;15433:23;;8209:37;;28363:2;28348:18;;8209:37;;;;15433:23;28494:2;28479:18;;8209:37;15433:23;28625:2;28610:18;;8209:37;28150:3;28135:19;;28121:518;29197:539;8209:37;;;29587:2;29572:18;;8209:37;;;;15433:23;29722:2;29707:18;;8209:37;29423:2;29408:18;;29394:342;29743:435;8209:37;;;30081:2;30066:18;;8209:37;;;;30164:2;30149:18;;8209:37;29917:2;29902:18;;29888:290;30185:256;30247:2;30241:9;30273:17;;;30348:18;30333:34;;30369:22;;;30330:62;30327:2;;;30405:1;;30395:12;30327:2;30247;30414:22;30225:216;;-1:-1;30225:216;34173:268;34238:1;34245:101;34259:6;34256:1;34253:13;34245:101;;;34326:11;;;34320:18;34307:11;;;34300:39;34281:2;34274:10;34245:101;;;34361:6;34358:1;34355:13;34352:2;;;-1:-1;;34238:1;34408:16;;34401:27;34222:219;34670:102;34750:1;34743:5;34740:12;34730:2;;34756:9;34779:117;32454:42;34866:5;32443:54;34841:5;34838:35;34828:2;;34887:1;;34877:12;34822:74;2656:4:11;2692:19;2709:1;2692:16;:19::i;:::-;:28;2679:10;;:41;;-1:-1:-1;2586:141:11;;;;:::o",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../common/implementation/FixedPoint.sol\";\nimport \"./Liquidatable.sol\";\n\n\ncontract ExpiringMultiParty is Liquidatable {\n    constructor(ConstructorParams memory params) public Liquidatable(params) {}\n}\n",
  "sourcePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/ExpiringMultiParty.sol",
  "ast": {
    "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        5675
      ]
    },
    "id": 5676,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5660,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "id": 5661,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:23"
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 5662,
        "nodeType": "ImportDirective",
        "scope": 5676,
        "sourceUnit": 4113,
        "src": "59:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 5663,
        "nodeType": "ImportDirective",
        "scope": 5676,
        "sourceUnit": 7585,
        "src": "112:28:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5664,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7584,
              "src": "174:12:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$7584",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 5665,
            "nodeType": "InheritanceSpecifier",
            "src": "174:12:23"
          }
        ],
        "contractDependencies": [
          4698,
          6431,
          7584,
          9139,
          13876
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5675,
        "linearizedBaseContracts": [
          5675,
          7584,
          9139,
          13876,
          6431,
          4698
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5673,
              "nodeType": "Block",
              "src": "266:2:23",
              "statements": []
            },
            "documentation": null,
            "id": 5674,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5670,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5667,
                    "src": "258:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$6509_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 5671,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5669,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7584,
                  "src": "245:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$7584_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "245:20:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5667,
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5674,
                  "src": "205:31:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$6509_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5666,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6509,
                    "src": "205:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$6509_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "204:33:23"
            },
            "returnParameters": {
              "id": 5672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:23"
            },
            "scope": 5675,
            "src": "193:75:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5676,
        "src": "143:127:23"
      }
    ],
    "src": "0:271:23"
  },
  "legacyAST": {
    "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        5675
      ]
    },
    "id": 5676,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5660,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "id": 5661,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:23"
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 5662,
        "nodeType": "ImportDirective",
        "scope": 5676,
        "sourceUnit": 4113,
        "src": "59:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/opz/Projects/SynFiat-update/ui/contracts/uma-contracts/financial-templates/implementation/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 5663,
        "nodeType": "ImportDirective",
        "scope": 5676,
        "sourceUnit": 7585,
        "src": "112:28:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5664,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7584,
              "src": "174:12:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$7584",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 5665,
            "nodeType": "InheritanceSpecifier",
            "src": "174:12:23"
          }
        ],
        "contractDependencies": [
          4698,
          6431,
          7584,
          9139,
          13876
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5675,
        "linearizedBaseContracts": [
          5675,
          7584,
          9139,
          13876,
          6431,
          4698
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5673,
              "nodeType": "Block",
              "src": "266:2:23",
              "statements": []
            },
            "documentation": null,
            "id": 5674,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5670,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5667,
                    "src": "258:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$6509_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 5671,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5669,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7584,
                  "src": "245:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$7584_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "245:20:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5667,
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5674,
                  "src": "205:31:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$6509_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5666,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6509,
                    "src": "205:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$6509_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "204:33:23"
            },
            "returnParameters": {
              "id": 5672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:23"
            },
            "scope": 5675,
            "src": "193:75:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5676,
        "src": "143:127:23"
      }
    ],
    "src": "0:271:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T17:20:03.088Z",
  "devdoc": {
    "methods": {
      "create((uint256),(uint256))": {
        "details": "Reverts if the minting these tokens would put the position's collateralization ratio below the global collateralization ratio.",
        "params": {
          "collateralAmount": "is the number of collateral tokens to collateralize the position with",
          "numTokens": "is the number of tokens to mint from the position."
        }
      },
      "createLiquidation(address,(uint256),(uint256))": {
        "details": "This method generates an ID that will uniquely identify liquidation for the sponsor.",
        "params": {
          "collateralPerToken": "abort the liquidation if the position's collateral per token exceeds this value.",
          "maxTokensToLiquidate": "max number of tokes to liquidate.",
          "sponsor": "address to liquidate."
        },
        "returns": {
          "liquidationId": "of the newly created liquidation."
        }
      },
      "deposit((uint256))": {
        "details": "Increases the collateralization level of a position after creation.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position."
        }
      },
      "dispute(uint256,address)": {
        "details": "Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes.",
        "params": {
          "liquidationId": "of the disputed liquidation.",
          "sponsor": "the address of the sponsor who's liquidation is being disputed."
        }
      },
      "emergencyShutdown()": {
        "details": "Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees."
      },
      "expire()": {
        "details": "this function can only be called once the contract is expired and cant be re-called due to the state modifiers applied on it."
      },
      "getCollateral(address)": {
        "details": "This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.",
        "params": {
          "sponsor": "address whose collateral amount is retrieved."
        }
      },
      "payFees()": {
        "details": "These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or mre then a late penalty is applied which is sent to the caller.",
        "returns": {
          "totalPaid": "The amount of collateral that the contract paid (sum of the amount paid to the Store and the caller)."
        }
      },
      "pfc()": {
        "details": "This overrides pfc() so the Liquidatable contract can report its profit from corruption."
      },
      "redeem((uint256))": {
        "details": "Can only be called by a token sponsor.",
        "params": {
          "numTokens": "is the number of tokens to be burnt for a commensurate amount of collateral."
        }
      },
      "requestWithdrawal((uint256))": {
        "details": "The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.",
        "params": {
          "collateralAmount": "the amount of collateral requested to withdraw"
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode."
      },
      "settleExpired()": {
        "details": "This Burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`."
      },
      "transfer(address)": {
        "details": "Transferring positions can only occur if the recipient does not already have a position.",
        "params": {
          "newSponsorAddress": "is the address to which the position will be transferred."
        }
      },
      "withdraw((uint256))": {
        "details": "Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawawal`.",
        "params": {
          "collateralAmount": "is the amount of collateral to withdraw"
        }
      },
      "withdrawLiquidation(uint256,address)": {
        "details": "If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment If the dispute FAILED: only the liquidator can receive payment Once all collateral is withdrawn, delete the liquidation data.",
        "params": {
          "liquidationId": "uniquely identifies the sponsor's liquidation.",
          "sponsor": "address of the sponsor associated with the liquidation."
        },
        "returns": {
          "withdrawalAmount": "the total amount of underlying returned from the liquidation."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cancelWithdrawal()": {
        "notice": "Cancels a pending withdrawal request."
      },
      "create((uint256),(uint256))": {
        "notice": "Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`."
      },
      "createLiquidation(address,(uint256),(uint256))": {
        "notice": "Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens."
      },
      "deposit((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the sponsor's position."
      },
      "dispute(uint256,address)": {
        "notice": "Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request."
      },
      "emergencyShutdown()": {
        "notice": "Premature contract settlement under emergency circumstances."
      },
      "expire()": {
        "notice": "Locks contract state in expired and requests oracle price."
      },
      "getCollateral(address)": {
        "notice": "Accessor method for a sponsor's collateral."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "payFees()": {
        "notice": "Pays UMA DVM regular fees to the Store contract."
      },
      "redeem((uint256))": {
        "notice": "Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`."
      },
      "requestWithdrawal((uint256))": {
        "notice": "Starts a withdrawal request that, if passed, allows the sponsor to withdraw `collateralAmount` from their position."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "settleExpired()": {
        "notice": "After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function."
      },
      "totalPositionCollateral()": {
        "notice": "Accessor method for the total collateral stored within the PricelessPositionManager."
      },
      "transfer(address)": {
        "notice": "Transfers ownership of the caller's current position to `newSponsorAddress`."
      },
      "withdraw((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor."
      },
      "withdrawLiquidation(uint256,address)": {
        "notice": "After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments."
      },
      "withdrawPassedRequest()": {
        "notice": "After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency."
      }
    }
  }
}